import { FrameMsg } from '../frame-msg';
import { AsyncQueue } from '../async-queue';
/**
 * Interface for the structured metering data.
 */
export interface MeteringData {
    spot_r: number;
    spot_g: number;
    spot_b: number;
    matrix_r: number;
    matrix_g: number;
    matrix_b: number;
}
/**
 * Options for RxMeteringData constructor.
 */
export interface RxMeteringDataOptions {
    msgCode?: number;
}
/**
 * RxMeteringData class handles processing of metering data packets.
 */
export declare class RxMeteringData {
    private msgCode;
    queue: AsyncQueue<MeteringData | null> | null;
    constructor(options?: RxMeteringDataOptions);
    /**
     * Process incoming metering data packets.
     * @param data Uint8Array containing metering data with a flag byte prefix,
     * followed by 6 unsigned bytes (spot r,g,b, matrix r,g,b).
     */
    handleData(data: Uint8Array): void;
    /**
     * Attach the receive handler to the Frame data response.
     * @param frame The FrameMsg instance.
     * @returns A promise that resolves to an AsyncQueue that will receive MeteringData objects.
     */
    attach(frame: FrameMsg): Promise<AsyncQueue<MeteringData | null>>;
    /**
     * Detach the receive handler from the Frame data response and clean up resources.
     * @param frame The FrameMsg instance.
     */
    detach(frame: FrameMsg): void;
}
