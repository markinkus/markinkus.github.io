/**
 * A sprite message containing image data with a custom palette.
 */
export declare class TxSprite {
    width: number;
    height: number;
    numColors: number;
    paletteData: Uint8Array;
    pixelData: Uint8Array;
    compress: boolean;
    constructor(width: number, height: number, numColors: number, paletteData: Uint8Array, pixelData: Uint8Array, compress?: boolean);
    /**
     * Creates a TxSprite from an indexed PNG image.
     * @param imageBytes The ArrayBuffer containing the PNG image data.
     * @param compress Whether to compress the pixel data using LZ4.
     * @returns A TxSprite instance.
     */
    static fromIndexedPngBytes(imageBytes: ArrayBuffer, compress?: boolean): Promise<TxSprite>;
    /**
     * Creates a TxSprite from an image file, resizing and quantizing it to a maximum of 16 colors.
     * @param imageBytes The ArrayBuffer containing the image data.
     * @param maxPixels The maximum number of pixels allowed in the sprite.
     * @param compress Whether to compress the pixel data using LZ4.
     * @returns A TxSprite instance.
     */
    static fromImageBytes(imageBytes: ArrayBuffer, maxPixels?: number, compress?: boolean): Promise<TxSprite>;
    get bpp(): number;
    pack(): Uint8Array;
    private static _pack_1bit;
    private static _pack_2bit;
    private static _pack_4bit;
}
