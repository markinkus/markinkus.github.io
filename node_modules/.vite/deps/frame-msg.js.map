{
  "version": 3,
  "sources": ["../../frame-msg/dist/frame-msg.es.js"],
  "sourcesContent": ["var Yt = Object.defineProperty;\nvar Bt = (e) => {\n  throw TypeError(e);\n};\nvar Zt = (e, i, t) => i in e ? Yt(e, i, { enumerable: !0, configurable: !0, writable: !0, value: t }) : e[i] = t;\nvar $e = (e, i, t) => Zt(e, typeof i != \"symbol\" ? i + \"\" : i, t), Tt = (e, i, t) => i.has(e) || Bt(\"Cannot \" + t);\nvar St = (e, i, t) => (Tt(e, i, \"read from private field\"), t ? t.call(e) : i.get(e)), It = (e, i, t) => i.has(e) ? Bt(\"Cannot add the same private member more than once\") : i instanceof WeakSet ? i.add(e) : i.set(e, t), Dt = (e, i, t, r) => (Tt(e, i, \"write to private field\"), r ? r.call(e, t) : i.set(e, t), t), $t = (e, i, t) => (Tt(e, i, \"access private method\"), t);\nvar m = Object.defineProperty, p = (e, i, t) => i in e ? m(e, i, { enumerable: !0, configurable: !0, writable: !0, value: t }) : e[i] = t, c = (e, i, t) => p(e, typeof i != \"symbol\" ? i + \"\" : i, t);\nclass R {\n  constructor() {\n    c(this, \"device\"), c(this, \"server\"), c(this, \"txCharacteristic\"), c(this, \"rxCharacteristic\"), c(this, \"SERVICE_UUID\", \"7a230001-5475-a6a4-654c-8431f6ad49c4\"), c(this, \"TX_CHARACTERISTIC_UUID\", \"7a230002-5475-a6a4-654c-8431f6ad49c4\"), c(this, \"RX_CHARACTERISTIC_UUID\", \"7a230003-5475-a6a4-654c-8431f6ad49c4\"), c(this, \"maxPayload\", 60), c(this, \"awaitingPrintResponse\", !1), c(this, \"awaitingDataResponse\", !1), c(this, \"printTimeoutId\"), c(this, \"printResponsePromise\"), c(this, \"printResolve\"), c(this, \"dataResponsePromise\"), c(this, \"dataResolve\"), c(this, \"onDataResponse\"), c(this, \"onPrintResponse\"), c(this, \"onDisconnectHandler\"), c(this, \"handleDisconnect\", () => {\n      this.device = void 0, this.server = void 0, this.txCharacteristic = void 0, this.rxCharacteristic = void 0, this.onDisconnectHandler && this.onDisconnectHandler();\n    }), c(this, \"notificationHandler\", (i) => {\n      const t = i.target.value;\n      if (!(!t || t.buffer.byteLength === 0))\n        if (t.byteLength > 0 && t.getUint8(0) === 1) {\n          const r = new Uint8Array(t.buffer, t.byteOffset + 1, t.byteLength - 1);\n          if (this.awaitingDataResponse && this.dataResolve && (this.awaitingDataResponse = !1, this.dataResolve(r)), this.onDataResponse) {\n            const n = this.onDataResponse(r);\n            n instanceof Promise && n.catch(console.error);\n          }\n        } else {\n          const r = new TextDecoder().decode(t);\n          if (this.awaitingPrintResponse && this.printResolve && (this.awaitingPrintResponse = !1, this.printResolve(r)), this.onPrintResponse) {\n            const n = this.onPrintResponse(r);\n            n instanceof Promise && n.catch(console.error);\n          }\n        }\n    });\n  }\n  /**\n   * Sets or updates the handler for asynchronous data responses from the device.\n   * @param handler The function to call when data (as Uint8Array) is received.\n   * Pass undefined to remove the current handler.\n   */\n  setDataResponseHandler(i) {\n    this.onDataResponse = i;\n  }\n  /**\n   * Sets or updates the handler for asynchronous print (string) responses from the device.\n   * @param handler The function to call when a print string is received.\n   * Pass undefined to remove the current handler.\n   */\n  setPrintResponseHandler(i) {\n    this.onPrintResponse = i;\n  }\n  /**\n   * Sets or updates the handler for disconnection events.\n   * @param handler The function to call when the device disconnects.\n   * Pass undefined to remove the current handler.\n   */\n  setDisconnectHandler(i) {\n    this.onDisconnectHandler = i;\n  }\n  /**\n   * Attempts to establish a connection with the device and set up characteristics.\n   * This method is intended to be called internally by `connect` and handles a single connection attempt.\n   */\n  async _attemptConnection() {\n    var i, t, r, n;\n    if (!this.device || !this.device.gatt)\n      throw new Error(\"Bluetooth device or GATT interface not available for connection attempt.\");\n    this.txCharacteristic = void 0, this.rxCharacteristic = void 0, this.server = void 0;\n    try {\n      console.log(`Attempting to connect to GATT server on device: ${this.device.name || this.device.id}...`), this.server = await this.device.gatt.connect(), console.log(\"GATT server connected.\"), console.log(\"Getting primary service...\");\n      const a = await this.server.getPrimaryService(this.SERVICE_UUID);\n      console.log(\"Primary service obtained.\"), console.log(\"Getting TX characteristic...\"), this.txCharacteristic = await a.getCharacteristic(this.TX_CHARACTERISTIC_UUID), console.log(\"TX characteristic obtained.\"), console.log(\"Getting RX characteristic...\"), this.rxCharacteristic = await a.getCharacteristic(this.RX_CHARACTERISTIC_UUID), console.log(\"RX characteristic obtained.\"), console.log(\"Starting notifications on RX characteristic...\"), await this.rxCharacteristic.startNotifications(), this.rxCharacteristic.addEventListener(\"characteristicvaluechanged\", this.notificationHandler), console.log(\"Notifications started.\"), await this.sendBreakSignal(!1), console.log(\"Fetching MTU size (max_length) from device...\");\n      const s = await this.sendLua(\"print(frame.bluetooth.max_length())\", { awaitPrint: !0 });\n      if (s == null)\n        throw new Error(\"Failed to get MTU size from device: no response.\");\n      const o = parseInt(s);\n      if (isNaN(o) || o <= 0)\n        throw new Error(`Invalid MTU size received: '${s}'`);\n      this.maxPayload = o, console.log(`MTU size set to: ${this.maxPayload}`);\n    } catch (a) {\n      if (console.error(\"Error during connection attempt:\", a), this.rxCharacteristic) {\n        try {\n          (t = (i = this.device) == null ? void 0 : i.gatt) != null && t.connected && await this.rxCharacteristic.stopNotifications();\n        } catch {\n        }\n        this.rxCharacteristic.removeEventListener(\"characteristicvaluechanged\", this.notificationHandler), this.rxCharacteristic = void 0;\n      }\n      throw this.txCharacteristic = void 0, (n = (r = this.device) == null ? void 0 : r.gatt) != null && n.connected && this.device.gatt.disconnect(), this.server = void 0, a;\n    }\n  }\n  /**\n  Connects to a Frame device. Prompts the user to select a device if one is not already known.\n  Retries connection establishment on specific errors.\n  */\n  async connect(i = {}) {\n    var t;\n    const { name: r, namePrefix: n, numAttempts: a = 5, retryDelayMs: s = 1e3 } = i;\n    if (!navigator.bluetooth)\n      throw new Error(\"Web Bluetooth API not available.\");\n    if (!this.device) {\n      const l = {\n        filters: [r ? { services: [this.SERVICE_UUID], name: r } : n ? { services: [this.SERVICE_UUID], namePrefix: n } : { services: [this.SERVICE_UUID] }],\n        optionalServices: [this.SERVICE_UUID]\n      };\n      try {\n        if (console.log(\"Requesting Bluetooth device from user...\"), this.device = await navigator.bluetooth.requestDevice(l), !this.device)\n          throw new Error(\"No device selected by the user.\");\n        console.log(`Device selected: ${this.device.name || this.device.id}`);\n      } catch (f) {\n        throw console.error(\"Bluetooth device request failed:\", f), this.device = void 0, f;\n      }\n    }\n    if (!this.device)\n      throw new Error(\"Device not available after selection phase.\");\n    const o = this.device;\n    o.removeEventListener(\"gattserverdisconnected\", this.handleDisconnect), o.addEventListener(\"gattserverdisconnected\", this.handleDisconnect);\n    let h;\n    for (let l = 1; l <= a; l++) {\n      if (!this.device) {\n        console.warn(`Device (id: ${o.id}) was disconnected externally during connection attempts.`), h = h || new Error(`Device disconnected externally during connection attempt ${l}.`);\n        break;\n      }\n      try {\n        return console.log(`Connection attempt ${l} of ${a} to device '${o.name || o.id}'...`), await this._attemptConnection(), console.log(`Successfully connected to ${o.name || o.id} on attempt ${l}.`), o.id || o.name || \"Unknown Device\";\n      } catch (f) {\n        if (h = f, console.error(`Attempt ${l} to connect to '${o.name || o.id}' failed:`, f), f instanceof Error && f.name === \"NetworkError\" && // DOMException name\n        (f.message.includes(\"Connection attempt failed.\") || f.message.includes(\"GATT operation failed for unknown reason.\") || f.message.includes(\"GATT Server is disconnected.\") || // Potentially retryable if transient\n        f.message.includes(\"Bluetooth device is already connected.\")) && l < a)\n          console.log(`Retryable error encountered. Retrying in ${s / 1e3}s...`), await new Promise((b) => setTimeout(b, s));\n        else {\n          console.log(\"Non-retryable error or max attempts reached. Aborting connection process.\");\n          break;\n        }\n      }\n    }\n    throw console.error(`Failed to connect to device '${o.name || o.id}' after ${a} attempts or due to external disconnection.`), o.removeEventListener(\"gattserverdisconnected\", this.handleDisconnect), (t = o.gatt) != null && t.connected && o.gatt.disconnect(), this.server = void 0, this.txCharacteristic = void 0, this.rxCharacteristic = void 0, this.device = void 0, h || new Error(`Failed to connect to ${o.name || o.id} after ${a} attempts. No specific error recorded, or device disconnected externally.`);\n  }\n  async disconnect() {\n    var i;\n    this.device && (i = this.device.gatt) != null && i.connected ? this.device.gatt.disconnect() : this.handleDisconnect();\n  }\n  isConnected() {\n    return !!(this.device && this.device.gatt && this.device.gatt.connected);\n  }\n  getMaxPayload(i) {\n    return i ? this.maxPayload : this.maxPayload - 1;\n  }\n  async transmit(i, t = !1) {\n    if (!this.txCharacteristic)\n      throw new Error(\"Not connected or TX characteristic not available.\");\n    if (i.byteLength > this.maxPayload)\n      throw new Error(`Payload length: ${i.byteLength} exceeds maximum BLE packet size: ${this.maxPayload}`);\n    t && console.log(\"Transmitting (hex):\", Array.from(i).map((r) => r.toString(16).padStart(2, \"0\")).join(\" \")), await this.txCharacteristic.writeValueWithResponse(i);\n  }\n  async sendLua(i, t = {}) {\n    const { showMe: r = !1, awaitPrint: n = !1, timeout: a = 5e3 } = t, s = new TextEncoder().encode(i);\n    if (s.byteLength > this.getMaxPayload(!0))\n      throw new Error(`Lua string payload (${s.byteLength} bytes) is too large for max Lua payload (${this.getMaxPayload(!0)} bytes).`);\n    if (n && (this.printTimeoutId && clearTimeout(this.printTimeoutId), this.awaitingPrintResponse = !0, this.printResponsePromise = new Promise((o, h) => {\n      this.printResolve = o, this.printTimeoutId = setTimeout(() => {\n        this.awaitingPrintResponse && (this.awaitingPrintResponse = !1, this.printResolve = void 0, h(new Error(`Device didn't respond with a print within ${a}ms.`)));\n      }, a);\n    }).finally(() => {\n      this.printTimeoutId && (clearTimeout(this.printTimeoutId), this.printTimeoutId = void 0);\n    })), await this.transmit(s, r), n) return this.printResponsePromise;\n  }\n  /**\n   * Sends raw data to the device. The data is prefixed with 0x01.\n   * @param data The raw application payload to send as Uint8Array.\n   * @param options Configuration for sending data.\n   * @returns A promise that resolves with the Uint8Array data response if awaitData is true, or void otherwise.\n   */\n  async sendData(i, t = {}) {\n    const { showMe: r = !1, awaitData: n = !1, timeout: a = 5e3 } = t;\n    if (!this.txCharacteristic)\n      throw new Error(\"Not connected or TX characteristic not available.\");\n    if (i.byteLength > this.getMaxPayload(!1))\n      throw new Error(`Data payload (${i.byteLength} bytes) is too large for max data payload (${this.getMaxPayload(!1)} bytes).`);\n    const s = new Uint8Array([1]), o = new Uint8Array(s.length + i.byteLength);\n    o.set(s, 0), o.set(i, s.length);\n    let h;\n    if (n && (this.awaitingDataResponse = !0, this.dataResponsePromise = new Promise((l, f) => {\n      this.dataResolve = l, h = setTimeout(() => {\n        this.awaitingDataResponse && (this.awaitingDataResponse = !1, this.dataResolve = void 0, f(new Error(`Device didn't respond with data within ${a}ms.`)));\n      }, a);\n    }).finally(() => {\n      h && clearTimeout(h);\n    })), await this.transmit(o, r), n) return this.dataResponsePromise;\n  }\n  async sendResetSignal(i = !1) {\n    const t = new Uint8Array([4]);\n    await this.transmit(t, i), await new Promise((r) => setTimeout(r, 200));\n  }\n  async sendBreakSignal(i = !1) {\n    const t = new Uint8Array([3]);\n    await this.transmit(t, i), await new Promise((r) => setTimeout(r, 200));\n  }\n  async uploadFileFromString(i, t = \"main.lua\") {\n    let r = i.replace(/\\r/g, \"\").replace(/\\\\/g, \"\\\\\\\\\").replace(/\\n/g, \"\\\\n\").replace(/\\t/g, \"\\\\t\").replace(/'/g, \"\\\\'\").replace(/\"/g, '\\\\\"');\n    const n = await this.sendLua(`f=frame.file.open('${t}','w');print(1)`, { awaitPrint: !0 });\n    if (n !== \"1\")\n      throw new Error(`Failed to open file ${t} on device. Response: ${n}`);\n    const a = this.getMaxPayload(!0) - 20;\n    if (a <= 0)\n      throw new Error(\"Max payload size too small for file upload operations.\");\n    let s = 0;\n    for (; s < r.length; ) {\n      let o = Math.min(a, r.length - s), h = r.substring(s, s + o);\n      for (; h.endsWith(\"\\\\\"); ) {\n        let f = 0;\n        for (let b = h.length - 1; b >= 0 && h[b] === \"\\\\\"; b--)\n          f++;\n        if (f % 2 !== 0)\n          if (o > 1)\n            o--, h = r.substring(s, s + o);\n          else\n            throw await this.sendLua(\"f:close();print(nil)\", { awaitPrint: !0 }), new Error(\"Cannot safely chunk content due to isolated escape character at chunk boundary.\");\n        else\n          break;\n      }\n      const l = await this.sendLua(`f:write(\"${h}\");print(1)`, { awaitPrint: !0 });\n      if (l !== \"1\")\n        throw await this.sendLua(\"f:close();print(nil)\", { awaitPrint: !0 }), new Error(`Failed to write chunk to ${t}. Response: ${l}`);\n      s += o;\n    }\n    await this.sendLua(\"f:close();print(nil)\", { awaitPrint: !0 });\n  }\n  async uploadFile(i, t = \"main.lua\") {\n    await this.uploadFileFromString(i, t);\n  }\n  async sendMessage(i, t, r = !1) {\n    if (i < 0 || i > 255)\n      throw new Error(`Message code must be 0-255, got ${i}`);\n    const n = t.byteLength;\n    if (n > 65535)\n      throw new Error(`Payload size ${n} exceeds maximum 65535 bytes`);\n    const a = this.getMaxPayload(!1), s = a - 1 - 2, o = a - 1;\n    if (s <= 0 || o <= 0)\n      throw new Error(\"Max payload size too small for message sending protocol.\");\n    let h = 0;\n    const l = Math.min(s, n), f = new Uint8Array(3 + l);\n    for (f[0] = i, f[1] = n >> 8, f[2] = n & 255, f.set(t.subarray(0, l), 3), await this.sendData(f, { showMe: r, awaitData: !0 }), h += l; h < n; ) {\n      const b = n - h, w = Math.min(o, b), g = new Uint8Array(1 + w);\n      g[0] = i, g.set(t.subarray(h, h + w), 1), await this.sendData(g, { showMe: r, awaitData: !0 }), h += w;\n    }\n  }\n}\nconst stdDataMinLua = \"local a={}local b={}a.app_data_accum=b;local c={}a.app_data_block=c;local d={}a.app_data=d;local e={}a.parsers=e;function a.update_app_data_accum(f)rc,err=pcall(function()local g=string.byte(f,1)local h=a.app_data_accum[g]if h==nil or next(h)==nil then h={chunk_table={},num_chunks=0,size=0,recv_bytes=0}a.app_data_accum[g]=h end;if h.num_chunks==0 then h.size=string.byte(f,2)<<8|string.byte(f,3)h.chunk_table[1]=string.sub(f,4)h.num_chunks=1;h.recv_bytes=string.len(f)-3;if h.recv_bytes==h.size then a.app_data_block[g]=h.chunk_table[1]h.size=0;h.recv_bytes=0;h.num_chunks=0;h.chunk_table[1]=nil;b[g]=h end else h.chunk_table[h.num_chunks+1]=string.sub(f,2)h.num_chunks=h.num_chunks+1;h.recv_bytes=h.recv_bytes+string.len(f)-1;if h.recv_bytes==h.size then collectgarbage('collect')a.app_data_block[g]=table.concat(h.chunk_table)for i,j in pairs(h.chunk_table)do h.chunk_table[i]=nil end;collectgarbage('collect')h.size=0;h.recv_bytes=0;h.num_chunks=0;a.app_data_accum[g]=h end end;while true do if pcall(frame.bluetooth.send,'\\\\x00')then break end;frame.sleep(0.0025)end end)if rc==false then print('Error in data accumulator: '..err)while true do if pcall(frame.bluetooth.send,'\\\\x01')then break end;frame.sleep(0.0025)end;error(err)end end;frame.bluetooth.receive_callback(a.update_app_data_accum)function a.process_raw_items()local k=0;rc,err=pcall(function()collectgarbage('collect')for l,m in pairs(a.app_data_block)do if a.parsers[l]==nil then print('Error: No parser for flag: '..tostring(l))else a.app_data[l]=a.parsers[l](m,a.app_data[l])a.app_data_block[l]=nil;k=k+1 end end end)if rc==false then print('Error processing raw items: '..err)error(err)end;return k end;return a\", stdAudioMinLua = \"local a={}local b=0x06;local c=0x05;local d=frame.bluetooth.max_length()if d%2==1 then d=d-1 end;function a.start(e)local f=e and e.sample_rate or 8000;local g=e and e.bit_depth or 8;pcall(frame.microphone.start,{sample_rate=f,bit_depth=g})end;function a.stop()pcall(frame.microphone.stop)end;function a.read_and_send_audio()audio_data=frame.microphone.read(d)if audio_data==nil then while true do if pcall(frame.bluetooth.send,string.char(b))then break end end;return nil elseif audio_data~=''then while true do if pcall(frame.bluetooth.send,string.char(c)..audio_data)then break end end;return string.len(audio_data)end;return 0 end;return a\", stdCameraMinLua = `local a={}local b=0x07;local c=0x08;local d=0x11;local e=0x12;local f={'VERY_LOW','LOW','MEDIUM','HIGH','VERY_HIGH'}local g={'SPOT','CENTER_WEIGHTED','AVERAGE'}local h={metering='CENTER_WEIGHTED',exposure=0.1,exposure_speed=0.45,shutter_limit=16383,analog_gain_limit=16.0,white_balance_speed=0.5,rgb_gain_limit=287}local i={shutter=4096,analog_gain=1,red_gain=121,green_gain=64,blue_gain=140}a.is_auto_exp=true;function update_if_present(j,k)for l,m in pairs(k)do if m~=nil then j[l]=m end end end;function a.set_auto_exp_settings(n)update_if_present(h,n)a.is_auto_exp=true end;function a.set_manual_exp_settings(n)a.is_auto_exp=false;update_if_present(i,n)frame.camera.set_shutter(i.shutter)frame.camera.set_gain(i.analog_gain)frame.camera.set_white_balance(i.red_gain,i.green_gain,i.blue_gain)end;function a.parse_auto_exp_settings(o)local j={}j.metering=g[string.byte(o,1)+1]j.exposure=string.byte(o,2)/255.0;j.exposure_speed=string.byte(o,3)/255.0;j.shutter_limit=string.byte(o,4)<<8|(string.byte(o,5)&0x3FFF)j.analog_gain_limit=string.byte(o,6)&0xFF;j.white_balance_speed=string.byte(o,7)/255.0;j.rgb_gain_limit=string.byte(o,8)<<8|(string.byte(o,9)&0x3FF)return j end;function a.parse_manual_exp_settings(o)local j={}j.shutter=string.byte(o,1)<<8|(string.byte(o,2)&0x3FFF)j.analog_gain=string.byte(o,3)&0xFF;j.red_gain=string.byte(o,4)<<8|(string.byte(o,5)&0x3FF)j.green_gain=string.byte(o,6)<<8|(string.byte(o,7)&0x3FF)j.blue_gain=string.byte(o,8)<<8|(string.byte(o,9)&0x3FF)return j end;function a.parse_capture_settings(o)local j={}j.quality=f[string.byte(o,1)+1]local p=string.byte(o,2)<<8|string.byte(o,3)j.resolution=p*2;local q=string.byte(o,4)<<8|string.byte(o,5)j.pan=q-140;j.raw=string.byte(o,6)>0;return j end;function send_data(o)local r=false;local s=frame.time.utc()+2;while frame.time.utc()<s do if pcall(frame.bluetooth.send,o)then r=true;break end end;if not r then error('Error sending photo data')end end;function a.run_auto_exposure()return frame.camera.auto(h)end;function a.send_autoexp_result(t)local o=string.pack(\"<Bffffffffffffffff\",d,t['error'],t['shutter'],t['analog_gain'],t['red_gain'],t['green_gain'],t['blue_gain'],t['brightness']['center_weighted_average'],t['brightness']['scene'],t['brightness']['matrix']['r'],t['brightness']['matrix']['g'],t['brightness']['matrix']['b'],t['brightness']['matrix']['average'],t['brightness']['spot']['r'],t['brightness']['spot']['g'],t['brightness']['spot']['b'],t['brightness']['spot']['average'])send_data(o)end;function a.send_metering_data()send_data(string.char(e)..frame.fpga_read(0x25,6))end;function a.capture_and_send(n)frame.camera.capture{resolution=n.resolution,quality=n.quality,pan=n.pan}while not frame.camera.image_ready()do frame.sleep(0.005)end;local o=''local u=n.raw;while true do if u then o=frame.camera.read_raw(frame.bluetooth.max_length()-1)else o=frame.camera.read(frame.bluetooth.max_length()-1)end;if o~=nil then send_data(string.char(b)..o)else send_data(string.char(c))break end end end;return a`, stdCodeMinLua = \"local _M={}function _M.parse_code(a)local b={}b.value=string.byte(a,1)return b end;return _M\", stdIMUMinLua = 'local _M={}local a=0x0A;function _M.send_imu_data(b)local c=b or a;local d=frame.imu.raw()local e=string.pack(\"<Bxhhhhhh\",c,d.compass.x,d.compass.y,d.compass.z,d.accelerometer.x,d.accelerometer.y,d.accelerometer.z)pcall(frame.bluetooth.send,e)end;return _M', stdImageSpriteBlockMinLua = \"local a={}function a.parse_image_sprite_block(b,c)if string.byte(b,1)==0xFF then if c~=nil then for d,e in pairs(c.sprites)do c.sprites[d]=nil end;c=nil;collectgarbage('collect')end;local f={}f.width=string.byte(b,2)<<8|string.byte(b,3)f.height=string.byte(b,4)<<8|string.byte(b,5)f.sprite_line_height=string.byte(b,6)<<8|string.byte(b,7)f.progressive_render=string.byte(b,8)==1;f.updatable=string.byte(b,9)==1;f.sprites={}local g=f.height+f.sprite_line_height-1;f.total_sprites=g//f.sprite_line_height;f.active_sprites=0;f.current_sprite_index=0;return f else if c==nil then return nil end;c.current_sprite_index=c.current_sprite_index+1;if c.current_sprite_index>c.total_sprites then if c.updatable then c.current_sprite_index=1 else return c end end;if c.active_sprites<c.total_sprites then c.active_sprites=c.active_sprites+1 end;local h={}h.width=string.byte(b,1)<<8|string.byte(b,2)h.height=string.byte(b,3)<<8|string.byte(b,4)h.compressed=string.byte(b,5)>0;h.bpp=string.byte(b,6)h.num_colors=string.byte(b,7)h.palette_data=string.sub(b,8,8+h.num_colors*3-1)h.pixel_data=string.sub(b,8+h.num_colors*3)c.sprites[c.current_sprite_index]=h;return c end end;function a.set_palette(i,j)local k={'VOID','WHITE','GREY','RED','PINK','DARKBROWN','BROWN','ORANGE','YELLOW','DARKGREEN','GREEN','LIGHTGREEN','NIGHTBLUE','SEABLUE','SKYBLUE','CLOUDBLUE'}for l=1,i do local m=(l-1)*3;frame.display.assign_color(k[l],string.byte(j,m+1),string.byte(j,m+2),string.byte(j,m+3))end end;return a\", stdPlainTextMinLua = \"local _M={}local a={'VOID','WHITE','GREY','RED','PINK','DARKBROWN','BROWN','ORANGE','YELLOW','DARKGREEN','GREEN','LIGHTGREEN','NIGHTBLUE','SEABLUE','SKYBLUE','CLOUDBLUE'}function _M.parse_plain_text(b)local c={}c.x=string.byte(b,1)<<8|string.byte(b,2)c.y=string.byte(b,3)<<8|string.byte(b,4)c.palette_offset=string.byte(b,5)c.color=a[c.palette_offset%16+1]c.spacing=string.byte(b,6)c.string=string.sub(b,7)return c end;return _M\", stdSpriteMinLua = \"local a={}function a.parse_sprite(b)local c={}c.width=string.byte(b,1)<<8|string.byte(b,2)c.height=string.byte(b,3)<<8|string.byte(b,4)c.compressed=string.byte(b,5)>0;c.bpp=string.byte(b,6)c.num_colors=string.byte(b,7)c.palette_data=string.sub(b,8,8+c.num_colors*3-1)c.pixel_data=string.sub(b,8+c.num_colors*3)return c end;function a.set_palette(d,e)local f={'VOID','WHITE','GREY','RED','PINK','DARKBROWN','BROWN','ORANGE','YELLOW','DARKGREEN','GREEN','LIGHTGREEN','NIGHTBLUE','SEABLUE','SKYBLUE','CLOUDBLUE'}for g=1,d do local h=(g-1)*3;frame.display.assign_color(f[g],string.byte(e,h+1),string.byte(e,h+2),string.byte(e,h+3))end end;return a\", stdSpriteCoordsMinLua = \"local a={}function a.parse_sprite_coords(b)local c={}c.code=string.byte(b,1)c.x=string.byte(b,2)<<8|string.byte(b,3)c.y=string.byte(b,4)<<8|string.byte(b,5)c.offset=string.byte(b,6)return c end;return a\", stdTapMinLua = \"local a={}local b=0x09;function a.send_tap()rc,err=pcall(frame.bluetooth.send,string.char(b))if rc==false then print(err)end end;return a\", stdTextSpriteBlockMinLua = \"local a={}function a.parse_text_sprite_block(b,c)if string.byte(b,1)==0xFF then local d={}d.width=string.byte(b,2)<<8|string.byte(b,3)d.max_display_rows=string.byte(b,4)d.lines=string.byte(b,5)local e={}for f=0,d.lines-1 do local g={}g.x=string.byte(b,5+4*f+1)<<8|string.byte(b,5+4*f+2)g.y=string.byte(b,5+4*f+3)<<8|string.byte(b,5+4*f+4)table.insert(e,g)end;d.offsets=e;d.sprites={}d.last_sprite_index=0;d.first_sprite_index=0;return d else if c==nil then return nil end;c.last_sprite_index=c.last_sprite_index+1;if c.first_sprite_index==0 then c.first_sprite_index=1 end;if c.last_sprite_index-c.first_sprite_index+1>c.max_display_rows then c.sprites[c.first_sprite_index]=nil;c.first_sprite_index=c.first_sprite_index+1 end;local h={}h.width=string.byte(b,1)<<8|string.byte(b,2)h.height=string.byte(b,3)<<8|string.byte(b,4)h.compressed=string.byte(b,5)>0;h.bpp=string.byte(b,6)h.num_colors=string.byte(b,7)h.palette_data=string.sub(b,8,8+h.num_colors*3-1)h.pixel_data=string.sub(b,8+h.num_colors*3)c.sprites[c.last_sprite_index]=h;return c end end;return a\";\nvar StdLua = /* @__PURE__ */ ((e) => (e.DataMin = \"stdDataMin\", e.AudioMin = \"stdAudioMin\", e.CameraMin = \"stdCameraMin\", e.CodeMin = \"stdCodeMin\", e.IMUMin = \"stdIMUMin\", e.ImageSpriteBlockMin = \"stdImageSpriteBlockMin\", e.PlainTextMin = \"stdPlainTextMin\", e.SpriteMin = \"stdSpriteMin\", e.SpriteCoordsMin = \"stdSpriteCoordsMin\", e.TapMin = \"stdTapMin\", e.TextSpriteBlockMin = \"stdTextSpriteBlockMin\", e))(StdLua || {});\nconst standardLuaLibrarySources = {\n  stdDataMin: { content: stdDataMinLua, targetFileName: \"data.min.lua\" },\n  stdAudioMin: { content: stdAudioMinLua, targetFileName: \"audio.min.lua\" },\n  stdCameraMin: { content: stdCameraMinLua, targetFileName: \"camera.min.lua\" },\n  stdCodeMin: { content: stdCodeMinLua, targetFileName: \"code.min.lua\" },\n  stdIMUMin: { content: stdIMUMinLua, targetFileName: \"imu.min.lua\" },\n  stdImageSpriteBlockMin: { content: stdImageSpriteBlockMinLua, targetFileName: \"image_sprite_block.min.lua\" },\n  stdPlainTextMin: { content: stdPlainTextMinLua, targetFileName: \"plain_text.min.lua\" },\n  stdSpriteMin: { content: stdSpriteMinLua, targetFileName: \"sprite.min.lua\" },\n  stdSpriteCoordsMin: { content: stdSpriteCoordsMinLua, targetFileName: \"sprite_coords.min.lua\" },\n  stdTapMin: { content: stdTapMinLua, targetFileName: \"tap.min.lua\" },\n  stdTextSpriteBlockMin: { content: stdTextSpriteBlockMinLua, targetFileName: \"text_sprite_block.min.lua\" }\n};\nclass FrameMsg {\n  constructor() {\n    $e(this, \"ble\");\n    $e(this, \"dataResponseHandlers\");\n    this.ble = new R(), this.dataResponseHandlers = /* @__PURE__ */ new Map(), this.ble.setDataResponseHandler(this._handleDataResponse.bind(this));\n  }\n  /**\n   * Connects to the Frame device and optionally runs the initialization sequence.\n   * Note: Print and Disconnect handlers should be set directly on the FrameBle instance\n   * (e.g., `frameMsg.ble.setPrintResponseHandler(...)`, `frameMsg.ble.setDisconnectHandler(...)`)\n   * or via `frameMsg.attachPrintResponseHandler(...)` before or after calling connect.\n   * @param initialize If true, runs the break/reset/break sequence after connecting. Defaults to true.\n   * @param connectOptions Options including name and namePrefix for device filtering.\n   * @returns The device ID or name if connection was successful.\n   * @throws Any exceptions from the underlying FrameBle connection or initialization.\n   */\n  async connect(i = !0, t = {}) {\n    try {\n      const r = {\n        name: t.name,\n        namePrefix: t.namePrefix\n      }, n = await this.ble.connect(r);\n      return i && (await this.ble.sendBreakSignal(), await this.ble.sendResetSignal(), await this.ble.sendBreakSignal()), n;\n    } catch (r) {\n      throw this.ble.isConnected() && await this.ble.disconnect(), r;\n    }\n  }\n  async disconnect() {\n    this.ble.isConnected() && await this.ble.disconnect();\n  }\n  isConnected() {\n    return this.ble.isConnected();\n  }\n  async printShortText(i = \"\") {\n    const t = i.replace(/'/g, \"\\\\'\").replace(/\\n/g, \"\");\n    return this.ble.sendLua(`frame.display.text('${t}',1,1);frame.display.show();print(0)`, { awaitPrint: !0 });\n  }\n  async uploadStdLuaLibs(i) {\n    for (const t of i) {\n      const r = standardLuaLibrarySources[t];\n      r ? await this.ble.uploadFileFromString(r.content, r.targetFileName) : console.warn(`Standard Lua library key \"${t}\" not found. Skipping.`);\n    }\n  }\n  async uploadFrameApp(i, t = \"frame_app.lua\") {\n    await this.ble.uploadFile(i, t);\n  }\n  async startFrameApp(i = \"frame_app\", t = !0) {\n    return this.ble.sendLua(`require('${i}')`, { awaitPrint: t });\n  }\n  async stopFrameApp(i = !0) {\n    await this.ble.sendBreakSignal(), i && await this.ble.sendResetSignal();\n  }\n  attachPrintResponseHandler(i = console.log) {\n    this.ble.setPrintResponseHandler(i);\n  }\n  detachPrintResponseHandler() {\n    this.ble.setPrintResponseHandler(void 0);\n  }\n  async sendMessage(i, t, r = !1) {\n    await this.ble.sendMessage(i, t, r);\n  }\n  /**\n   * Registers a handler for a subscriber interested in specific message codes from Frame.\n   * @param subscriber The subscriber object/identifier.\n   * @param msgCodes Array of message codes the subscriber is interested in.\n   * @param handler The function to call with the incoming data (Uint8Array).\n   */\n  registerDataResponseHandler(i, t, r) {\n    for (const n of t) {\n      this.dataResponseHandlers.has(n) || this.dataResponseHandlers.set(n, []);\n      const a = this.dataResponseHandlers.get(n);\n      a.find(\n        (o) => o.subscriber === i && o.handler === r\n      ) || a.push({ subscriber: i, handler: r });\n    }\n  }\n  unregisterDataResponseHandler(i) {\n    this.dataResponseHandlers.forEach((t, r) => {\n      const n = t.filter((a) => a.subscriber !== i);\n      n.length === 0 ? this.dataResponseHandlers.delete(r) : this.dataResponseHandlers.set(r, n);\n    });\n  }\n  /**\n   * Internal method to handle incoming data responses from FrameBle (as Uint8Array)\n   * and dispatch to appropriate FrameMsg subscribers.\n   * @param data The incoming data response as a Uint8Array.\n   */\n  _handleDataResponse(i) {\n    if (i && i.byteLength > 0) {\n      const t = i[0];\n      this.dataResponseHandlers.has(t) && this.dataResponseHandlers.get(t).forEach((r) => {\n        try {\n          r.handler(i);\n        } catch (n) {\n          console.error(\"Error in FrameMsg data response handler for msgCode\", t, \":\", n);\n        }\n      });\n    }\n  }\n  // --- Direct proxy methods to FrameBle for convenience ---\n  async sendLua(i, t = {}) {\n    return this.ble.sendLua(i, t);\n  }\n  /**\n   * Sends raw data to the device.\n   * @param data The Uint8Array payload to send.\n   * @param options Configuration options.\n   * @returns A Promise that resolves with the Uint8Array data response if awaitData is true, or void.\n   */\n  async sendData(i, t = {}) {\n    return this.ble.sendData(i, t);\n  }\n  async sendResetSignal(i = !1) {\n    return this.ble.sendResetSignal(i);\n  }\n  async sendBreakSignal(i = !1) {\n    return this.ble.sendBreakSignal(i);\n  }\n  getMaxPayload(i) {\n    return this.ble ? this.ble.getMaxPayload(i) : (console.warn(\"FrameBle instance not initialized or not connected for getMaxPayload.\"), 60);\n  }\n}\nclass AsyncQueue {\n  constructor() {\n    $e(this, \"promises\");\n    $e(this, \"resolvers\");\n    this.promises = [], this.resolvers = [];\n  }\n  add() {\n    this.promises.push(new Promise((i) => {\n      this.resolvers.push(i);\n    }));\n  }\n  put(i) {\n    this.resolvers.length || this.add();\n    const t = this.resolvers.shift();\n    t && t(i);\n  }\n  async get() {\n    this.promises.length || this.add();\n    const i = this.promises.shift();\n    return i || new Promise((t) => {\n      this.resolvers.push(t), this.promises.push(this.get());\n    });\n  }\n  isEmpty() {\n    return this.promises.length === 0;\n  }\n  size() {\n    return this.promises.length;\n  }\n  clear() {\n    this.resolvers.forEach((i) => {\n    }), this.promises = [], this.resolvers = [];\n  }\n}\nclass TxPlainText {\n  /**\n   * @param text The plain text content to be transmitted\n   * @param x X-coordinate for text position (1-640, Lua/1-based indexing)\n   * @param y Y-coordinate for text position (1-400, Lua/1-based indexing)\n   * @param paletteOffset Color palette offset (1-15, 0/'VOID' is invalid)\n   * @param spacing Character spacing value\n   */\n  constructor(i, t = 1, r = 1, n = 1, a = 4) {\n    this.text = i, this.x = t, this.y = r, this.paletteOffset = n, this.spacing = a;\n  }\n  /**\n   * Packs the message into a binary format.\n   * @returns Uint8Array Binary representation of the message\n   */\n  pack() {\n    const t = new TextEncoder().encode(this.text), r = new Uint8Array(6), n = new DataView(r.buffer);\n    n.setUint16(0, this.x, !1), n.setUint16(2, this.y, !1), n.setUint8(4, this.paletteOffset & 15), n.setUint8(5, this.spacing & 255);\n    const a = new Uint8Array(r.length + t.length);\n    return a.set(r), a.set(t, r.length), a;\n  }\n}\nclass TxCaptureSettings {\n  /**\n   * @param resolution Image resolution (256-720, must be even). Defaults to 512.\n   * @param qualityIndex Index into [VERY_LOW, LOW, MEDIUM, HIGH, VERY_HIGH]. Defaults to 4.\n   * @param pan Image pan value (-140 to 140). Defaults to 0.\n   * @param raw Whether to return the JPEG in raw (headerless) format. Defaults to false.\n   */\n  constructor(i = 512, t = 4, r = 0, n = !1) {\n    /**\n     * Image resolution (256-720, must be even)\n     */\n    $e(this, \"resolution\");\n    /**\n     * Index into [VERY_LOW, LOW, MEDIUM, HIGH, VERY_HIGH]\n     */\n    $e(this, \"qualityIndex\");\n    /**\n     * Image pan value (-140 to 140)\n     */\n    $e(this, \"pan\");\n    /**\n     * Whether to capture in RAW format\n     */\n    $e(this, \"raw\");\n    this.resolution = i, this.qualityIndex = t, this.pan = r, this.raw = n;\n  }\n  /**\n   * Packs the settings into 6 bytes.\n   * @returns Uint8Array Binary representation of the message (6 bytes)\n   */\n  pack() {\n    const i = new ArrayBuffer(6), t = new DataView(i), r = this.resolution / 2, n = this.pan + 140;\n    return t.setUint8(0, this.qualityIndex & 255), t.setUint16(1, r & 65535, !1), t.setUint16(3, n & 65535, !1), t.setUint8(5, this.raw ? 1 : 0), new Uint8Array(i);\n  }\n}\nclass TxCode {\n  /**\n   * @param value The byte value to be transmitted (0-255)\n   */\n  constructor(i = 0) {\n    this.value = i;\n  }\n  /**\n   * Packs the message into a single byte.\n   * @returns Uint8Array Binary representation of the message (a single byte)\n   */\n  pack() {\n    const i = this.value & 255;\n    return new Uint8Array([i]);\n  }\n}\nconst bitMethods = {\n  /**\n   * Get the bit of a pixel using a pixel index.\n   * This method can only be called on binary images.\n   * @memberof Image\n   * @instance\n   * @param {number} pixel - The pixel index which corresponds to `x * image.width + y`\n   * @return {number} 0: bit is unset, 1: bit is set\n   */\n  getBit(e) {\n    return this.data[getSlot(e)] & 1 << getShift(e) ? 1 : 0;\n  },\n  /**\n   * Set the bit of a pixel using a pixel index.\n   * This method can only be called on binary images.\n   * @memberof Image\n   * @instance\n   * @param {number} pixel - The pixel index which corresponds to `x * image.width + y`\n   */\n  setBit(e) {\n    this.data[getSlot(e)] |= 1 << getShift(e);\n  },\n  /**\n   * Clear the bit of a pixel using a pixel index.\n   * This method can only be called on binary images.\n   * @memberof Image\n   * @instance\n   * @param {number} pixel - The pixel index which corresponds to `x * image.width + y`\n   */\n  clearBit(e) {\n    this.data[getSlot(e)] &= ~(1 << getShift(e));\n  },\n  /**\n   * Toggle (invert) the bit of a pixel using a pixel index.\n   * This method can only be called on binary images.\n   * @memberof Image\n   * @instance\n   * @param {number} pixel - The pixel index which corresponds to `x * image.width + y`\n   */\n  toggleBit(e) {\n    this.data[getSlot(e)] ^= 1 << getShift(e);\n  },\n  /**\n   * Get the bit of a pixel using coordinates.\n   * This method can only be called on binary images.\n   * @memberof Image\n   * @instance\n   * @param {number} x - x coordinate (0 = left)\n   * @param {number} y - y coordinate (0 = top)\n   * @return {number} 0: bit is unset, 1: bit is set\n   */\n  getBitXY(e, i) {\n    return e >= this.width || i >= this.height ? 0 : this.getBit(i * this.width + e);\n  },\n  /**\n   * Set the bit of a pixel using coordinates.\n   * This method can only be called on binary images.\n   * @memberof Image\n   * @instance\n   * @param {number} x - x coordinate (0 = left)\n   * @param {number} y - y coordinate (0 = top)\n   */\n  setBitXY(e, i) {\n    this.setBit(i * this.width + e);\n  },\n  /**\n   * Clear the bit of a pixel using coordinates.\n   * @memberof Image\n   * @instance\n   * @param {number} x - x coordinate (0 = left)\n   * @param {number} y - y coordinate (0 = top)\n   */\n  clearBitXY(e, i) {\n    this.clearBit(i * this.width + e);\n  },\n  /**\n   * Toggle (invert) the bit of a pixel using coordinates.\n   * @memberof Image\n   * @instance\n   * @param {number} x - x coordinate (0 = left)\n   * @param {number} y - y coordinate (0 = top)\n   */\n  toggleBitXY(e, i) {\n    this.toggleBit(i * this.width + e);\n  }\n};\nfunction getSlot(e) {\n  return e >> 3;\n}\nfunction getShift(e) {\n  return 7 - (e & 7);\n}\nfunction setBitMethods(e) {\n  for (const i in bitMethods)\n    e.prototype[i] = bitMethods[i];\n}\nfunction checkProcessable(e, i = {}) {\n  let { bitDepth: t, alpha: r, colorModel: n, components: a, channels: s } = i;\n  if (typeof e != \"string\" || e.length === 0)\n    throw new TypeError(\"processName must be a string\");\n  if (t && (Array.isArray(t) || (t = [t]), !t.includes(this.bitDepth)))\n    throw new TypeError(\n      `The process: ${e} can only be applied if bit depth is in: ${t}`\n    );\n  if (r && (Array.isArray(r) || (r = [r]), !r.includes(this.alpha)))\n    throw new TypeError(\n      `The process: ${e} can only be applied if alpha is in: ${r}`\n    );\n  if (n && (Array.isArray(n) || (n = [n]), !n.includes(this.colorModel)))\n    throw new TypeError(\n      `The process: ${e} can only be applied if color model is in: ${n}`\n    );\n  if (a && (Array.isArray(a) || (a = [a]), !a.includes(this.components))) {\n    let o = `The process: ${e} can only be applied if the number of components is in: ${a}`;\n    throw a.length === 1 && a[0] === 1 ? new TypeError(\n      `${o}.\\rYou should transform your image using \"image.grey()\" before applying the algorithm.`\n    ) : new TypeError(o);\n  }\n  if (s && (Array.isArray(s) || (s = [s]), !s.includes(this.channels)))\n    throw new TypeError(\n      `The process: ${e} can only be applied if the number of channels is in: ${s}`\n    );\n}\nfunction createBlob(e, i) {\n  e = e || [], i = i || {}, typeof i == \"string\" && (i = { type: i });\n  try {\n    return new Blob(e, i);\n  } catch (a) {\n    if (a.name !== \"TypeError\")\n      throw a;\n    for (var t = typeof BlobBuilder < \"u\" ? BlobBuilder : typeof MSBlobBuilder < \"u\" ? MSBlobBuilder : typeof MozBlobBuilder < \"u\" ? MozBlobBuilder : WebKitBlobBuilder, r = new t(), n = 0; n < e.length; n += 1)\n      r.append(e[n]);\n    return r.getBlob(i.type);\n  }\n}\nfunction dataURLToBlob(e) {\n  var i = e.match(/data:([^;]+)/)[1], t = e.replace(/^[^,]+,/, \"\"), r = binaryStringToArrayBuffer(atob(t));\n  return createBlob([r], { type: i });\n}\nfunction canvasToBlob(e, i, t) {\n  return typeof e.toBlob == \"function\" ? new Promise(function(r) {\n    e.toBlob(r, i, t);\n  }) : Promise.resolve(dataURLToBlob(e.toDataURL(i, t)));\n}\nfunction binaryStringToArrayBuffer(e) {\n  for (var i = e.length, t = new ArrayBuffer(i), r = new Uint8Array(t), n = -1; ++n < i; )\n    r[n] = e.charCodeAt(n);\n  return t;\n}\nfunction getDefaultExportFromCjs(e) {\n  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, \"default\") ? e.default : e;\n}\nfunction getAugmentedNamespace(e) {\n  if (Object.prototype.hasOwnProperty.call(e, \"__esModule\")) return e;\n  var i = e.default;\n  if (typeof i == \"function\") {\n    var t = function r() {\n      return this instanceof r ? Reflect.construct(i, arguments, this.constructor) : i.apply(this, arguments);\n    };\n    t.prototype = i.prototype;\n  } else t = {};\n  return Object.defineProperty(t, \"__esModule\", { value: !0 }), Object.keys(e).forEach(function(r) {\n    var n = Object.getOwnPropertyDescriptor(e, r);\n    Object.defineProperty(t, r, n.get ? n : {\n      enumerable: !0,\n      get: function() {\n        return e[r];\n      }\n    });\n  }), t;\n}\nvar src$5 = {};\nfunction decode$2(e, i = \"utf8\") {\n  return new TextDecoder(i).decode(e);\n}\nconst encoder$1 = new TextEncoder();\nfunction encode$1(e) {\n  return encoder$1.encode(e);\n}\nconst defaultByteLength = 1024 * 8, hostBigEndian = (() => {\n  const e = new Uint8Array(4), i = new Uint32Array(e.buffer);\n  return !((i[0] = 1) & e[0]);\n})(), typedArrays = {\n  int8: globalThis.Int8Array,\n  uint8: globalThis.Uint8Array,\n  int16: globalThis.Int16Array,\n  uint16: globalThis.Uint16Array,\n  int32: globalThis.Int32Array,\n  uint32: globalThis.Uint32Array,\n  uint64: globalThis.BigUint64Array,\n  int64: globalThis.BigInt64Array,\n  float32: globalThis.Float32Array,\n  float64: globalThis.Float64Array\n};\nclass IOBuffer {\n  /**\n   * Create a new IOBuffer.\n   * @param data - The data to construct the IOBuffer with.\n   * If data is a number, it will be the new buffer's length<br>\n   * If data is `undefined`, the buffer will be initialized with a default length of 8Kb<br>\n   * If data is an ArrayBuffer, SharedArrayBuffer, an ArrayBufferView (Typed Array), an IOBuffer instance,\n   * or a Node.js Buffer, a view will be created over the underlying ArrayBuffer.\n   * @param options - An object for the options.\n   * @returns A new IOBuffer instance.\n   */\n  constructor(i = defaultByteLength, t = {}) {\n    /**\n     * Reference to the internal ArrayBuffer object.\n     */\n    $e(this, \"buffer\");\n    /**\n     * Byte length of the internal ArrayBuffer.\n     */\n    $e(this, \"byteLength\");\n    /**\n     * Byte offset of the internal ArrayBuffer.\n     */\n    $e(this, \"byteOffset\");\n    /**\n     * Byte length of the internal ArrayBuffer.\n     */\n    $e(this, \"length\");\n    /**\n     * The current offset of the buffer's pointer.\n     */\n    $e(this, \"offset\");\n    $e(this, \"lastWrittenByte\");\n    $e(this, \"littleEndian\");\n    $e(this, \"_data\");\n    $e(this, \"_mark\");\n    $e(this, \"_marks\");\n    let r = !1;\n    typeof i == \"number\" ? i = new ArrayBuffer(i) : (r = !0, this.lastWrittenByte = i.byteLength);\n    const n = t.offset ? t.offset >>> 0 : 0, a = i.byteLength - n;\n    let s = n;\n    (ArrayBuffer.isView(i) || i instanceof IOBuffer) && (i.byteLength !== i.buffer.byteLength && (s = i.byteOffset + n), i = i.buffer), r ? this.lastWrittenByte = a : this.lastWrittenByte = 0, this.buffer = i, this.length = a, this.byteLength = a, this.byteOffset = s, this.offset = 0, this.littleEndian = !0, this._data = new DataView(this.buffer, s, a), this._mark = 0, this._marks = [];\n  }\n  /**\n   * Checks if the memory allocated to the buffer is sufficient to store more\n   * bytes after the offset.\n   * @param byteLength - The needed memory in bytes.\n   * @returns `true` if there is sufficient space and `false` otherwise.\n   */\n  available(i = 1) {\n    return this.offset + i <= this.length;\n  }\n  /**\n   * Check if little-endian mode is used for reading and writing multi-byte\n   * values.\n   * @returns `true` if little-endian mode is used, `false` otherwise.\n   */\n  isLittleEndian() {\n    return this.littleEndian;\n  }\n  /**\n   * Set little-endian mode for reading and writing multi-byte values.\n   * @returns This.\n   */\n  setLittleEndian() {\n    return this.littleEndian = !0, this;\n  }\n  /**\n   * Check if big-endian mode is used for reading and writing multi-byte values.\n   * @returns `true` if big-endian mode is used, `false` otherwise.\n   */\n  isBigEndian() {\n    return !this.littleEndian;\n  }\n  /**\n   * Switches to big-endian mode for reading and writing multi-byte values.\n   * @returns This.\n   */\n  setBigEndian() {\n    return this.littleEndian = !1, this;\n  }\n  /**\n   * Move the pointer n bytes forward.\n   * @param n - Number of bytes to skip.\n   * @returns This.\n   */\n  skip(i = 1) {\n    return this.offset += i, this;\n  }\n  /**\n   * Move the pointer n bytes backward.\n   * @param n - Number of bytes to move back.\n   * @returns This.\n   */\n  back(i = 1) {\n    return this.offset -= i, this;\n  }\n  /**\n   * Move the pointer to the given offset.\n   * @param offset - The offset to move to.\n   * @returns This.\n   */\n  seek(i) {\n    return this.offset = i, this;\n  }\n  /**\n   * Store the current pointer offset.\n   * @see {@link IOBuffer#reset}\n   * @returns This.\n   */\n  mark() {\n    return this._mark = this.offset, this;\n  }\n  /**\n   * Move the pointer back to the last pointer offset set by mark.\n   * @see {@link IOBuffer#mark}\n   * @returns This.\n   */\n  reset() {\n    return this.offset = this._mark, this;\n  }\n  /**\n   * Push the current pointer offset to the mark stack.\n   * @see {@link IOBuffer#popMark}\n   * @returns This.\n   */\n  pushMark() {\n    return this._marks.push(this.offset), this;\n  }\n  /**\n   * Pop the last pointer offset from the mark stack, and set the current\n   * pointer offset to the popped value.\n   * @see {@link IOBuffer#pushMark}\n   * @returns This.\n   */\n  popMark() {\n    const i = this._marks.pop();\n    if (i === void 0)\n      throw new Error(\"Mark stack empty\");\n    return this.seek(i), this;\n  }\n  /**\n   * Move the pointer offset back to 0.\n   * @returns This.\n   */\n  rewind() {\n    return this.offset = 0, this;\n  }\n  /**\n   * Make sure the buffer has sufficient memory to write a given byteLength at\n   * the current pointer offset.\n   * If the buffer's memory is insufficient, this method will create a new\n   * buffer (a copy) with a length that is twice (byteLength + current offset).\n   * @param byteLength - The needed memory in bytes.\n   * @returns This.\n   */\n  ensureAvailable(i = 1) {\n    if (!this.available(i)) {\n      const r = (this.offset + i) * 2, n = new Uint8Array(r);\n      n.set(new Uint8Array(this.buffer)), this.buffer = n.buffer, this.length = r, this.byteLength = r, this._data = new DataView(this.buffer);\n    }\n    return this;\n  }\n  /**\n   * Read a byte and return false if the byte's value is 0, or true otherwise.\n   * Moves pointer forward by one byte.\n   * @returns The read boolean.\n   */\n  readBoolean() {\n    return this.readUint8() !== 0;\n  }\n  /**\n   * Read a signed 8-bit integer and move pointer forward by 1 byte.\n   * @returns The read byte.\n   */\n  readInt8() {\n    return this._data.getInt8(this.offset++);\n  }\n  /**\n   * Read an unsigned 8-bit integer and move pointer forward by 1 byte.\n   * @returns The read byte.\n   */\n  readUint8() {\n    return this._data.getUint8(this.offset++);\n  }\n  /**\n   * Alias for {@link IOBuffer#readUint8}.\n   * @returns The read byte.\n   */\n  readByte() {\n    return this.readUint8();\n  }\n  /**\n   * Read `n` bytes and move pointer forward by `n` bytes.\n   * @param n - Number of bytes to read.\n   * @returns The read bytes.\n   */\n  readBytes(i = 1) {\n    return this.readArray(i, \"uint8\");\n  }\n  /**\n   * Creates an array of corresponding to the type `type` and size `size`.\n   * For example type `uint8` will create a `Uint8Array`.\n   * @param size - size of the resulting array\n   * @param type - number type of elements to read\n   * @returns The read array.\n   */\n  readArray(i, t) {\n    const r = typedArrays[t].BYTES_PER_ELEMENT * i, n = this.byteOffset + this.offset, a = this.buffer.slice(n, n + r);\n    if (this.littleEndian === hostBigEndian && t !== \"uint8\" && t !== \"int8\") {\n      const o = new Uint8Array(this.buffer.slice(n, n + r));\n      o.reverse();\n      const h = new typedArrays[t](o.buffer);\n      return this.offset += r, h.reverse(), h;\n    }\n    const s = new typedArrays[t](a);\n    return this.offset += r, s;\n  }\n  /**\n   * Read a 16-bit signed integer and move pointer forward by 2 bytes.\n   * @returns The read value.\n   */\n  readInt16() {\n    const i = this._data.getInt16(this.offset, this.littleEndian);\n    return this.offset += 2, i;\n  }\n  /**\n   * Read a 16-bit unsigned integer and move pointer forward by 2 bytes.\n   * @returns The read value.\n   */\n  readUint16() {\n    const i = this._data.getUint16(this.offset, this.littleEndian);\n    return this.offset += 2, i;\n  }\n  /**\n   * Read a 32-bit signed integer and move pointer forward by 4 bytes.\n   * @returns The read value.\n   */\n  readInt32() {\n    const i = this._data.getInt32(this.offset, this.littleEndian);\n    return this.offset += 4, i;\n  }\n  /**\n   * Read a 32-bit unsigned integer and move pointer forward by 4 bytes.\n   * @returns The read value.\n   */\n  readUint32() {\n    const i = this._data.getUint32(this.offset, this.littleEndian);\n    return this.offset += 4, i;\n  }\n  /**\n   * Read a 32-bit floating number and move pointer forward by 4 bytes.\n   * @returns The read value.\n   */\n  readFloat32() {\n    const i = this._data.getFloat32(this.offset, this.littleEndian);\n    return this.offset += 4, i;\n  }\n  /**\n   * Read a 64-bit floating number and move pointer forward by 8 bytes.\n   * @returns The read value.\n   */\n  readFloat64() {\n    const i = this._data.getFloat64(this.offset, this.littleEndian);\n    return this.offset += 8, i;\n  }\n  /**\n   * Read a 64-bit signed integer number and move pointer forward by 8 bytes.\n   * @returns The read value.\n   */\n  readBigInt64() {\n    const i = this._data.getBigInt64(this.offset, this.littleEndian);\n    return this.offset += 8, i;\n  }\n  /**\n   * Read a 64-bit unsigned integer number and move pointer forward by 8 bytes.\n   * @returns The read value.\n   */\n  readBigUint64() {\n    const i = this._data.getBigUint64(this.offset, this.littleEndian);\n    return this.offset += 8, i;\n  }\n  /**\n   * Read a 1-byte ASCII character and move pointer forward by 1 byte.\n   * @returns The read character.\n   */\n  readChar() {\n    return String.fromCharCode(this.readInt8());\n  }\n  /**\n   * Read `n` 1-byte ASCII characters and move pointer forward by `n` bytes.\n   * @param n - Number of characters to read.\n   * @returns The read characters.\n   */\n  readChars(i = 1) {\n    let t = \"\";\n    for (let r = 0; r < i; r++)\n      t += this.readChar();\n    return t;\n  }\n  /**\n   * Read the next `n` bytes, return a UTF-8 decoded string and move pointer\n   * forward by `n` bytes.\n   * @param n - Number of bytes to read.\n   * @returns The decoded string.\n   */\n  readUtf8(i = 1) {\n    return decode$2(this.readBytes(i));\n  }\n  /**\n   * Read the next `n` bytes, return a string decoded with `encoding` and move pointer\n   * forward by `n` bytes.\n   * If no encoding is passed, the function is equivalent to @see {@link IOBuffer#readUtf8}\n   * @param n - Number of bytes to read.\n   * @param encoding - The encoding to use. Default is 'utf8'.\n   * @returns The decoded string.\n   */\n  decodeText(i = 1, t = \"utf8\") {\n    return decode$2(this.readBytes(i), t);\n  }\n  /**\n   * Write 0xff if the passed value is truthy, 0x00 otherwise and move pointer\n   * forward by 1 byte.\n   * @param value - The value to write.\n   * @returns This.\n   */\n  writeBoolean(i) {\n    return this.writeUint8(i ? 255 : 0), this;\n  }\n  /**\n   * Write `value` as an 8-bit signed integer and move pointer forward by 1 byte.\n   * @param value - The value to write.\n   * @returns This.\n   */\n  writeInt8(i) {\n    return this.ensureAvailable(1), this._data.setInt8(this.offset++, i), this._updateLastWrittenByte(), this;\n  }\n  /**\n   * Write `value` as an 8-bit unsigned integer and move pointer forward by 1\n   * byte.\n   * @param value - The value to write.\n   * @returns This.\n   */\n  writeUint8(i) {\n    return this.ensureAvailable(1), this._data.setUint8(this.offset++, i), this._updateLastWrittenByte(), this;\n  }\n  /**\n   * An alias for {@link IOBuffer#writeUint8}.\n   * @param value - The value to write.\n   * @returns This.\n   */\n  writeByte(i) {\n    return this.writeUint8(i);\n  }\n  /**\n   * Write all elements of `bytes` as uint8 values and move pointer forward by\n   * `bytes.length` bytes.\n   * @param bytes - The array of bytes to write.\n   * @returns This.\n   */\n  writeBytes(i) {\n    this.ensureAvailable(i.length);\n    for (let t = 0; t < i.length; t++)\n      this._data.setUint8(this.offset++, i[t]);\n    return this._updateLastWrittenByte(), this;\n  }\n  /**\n   * Write `value` as a 16-bit signed integer and move pointer forward by 2\n   * bytes.\n   * @param value - The value to write.\n   * @returns This.\n   */\n  writeInt16(i) {\n    return this.ensureAvailable(2), this._data.setInt16(this.offset, i, this.littleEndian), this.offset += 2, this._updateLastWrittenByte(), this;\n  }\n  /**\n   * Write `value` as a 16-bit unsigned integer and move pointer forward by 2\n   * bytes.\n   * @param value - The value to write.\n   * @returns This.\n   */\n  writeUint16(i) {\n    return this.ensureAvailable(2), this._data.setUint16(this.offset, i, this.littleEndian), this.offset += 2, this._updateLastWrittenByte(), this;\n  }\n  /**\n   * Write `value` as a 32-bit signed integer and move pointer forward by 4\n   * bytes.\n   * @param value - The value to write.\n   * @returns This.\n   */\n  writeInt32(i) {\n    return this.ensureAvailable(4), this._data.setInt32(this.offset, i, this.littleEndian), this.offset += 4, this._updateLastWrittenByte(), this;\n  }\n  /**\n   * Write `value` as a 32-bit unsigned integer and move pointer forward by 4\n   * bytes.\n   * @param value - The value to write.\n   * @returns This.\n   */\n  writeUint32(i) {\n    return this.ensureAvailable(4), this._data.setUint32(this.offset, i, this.littleEndian), this.offset += 4, this._updateLastWrittenByte(), this;\n  }\n  /**\n   * Write `value` as a 32-bit floating number and move pointer forward by 4\n   * bytes.\n   * @param value - The value to write.\n   * @returns This.\n   */\n  writeFloat32(i) {\n    return this.ensureAvailable(4), this._data.setFloat32(this.offset, i, this.littleEndian), this.offset += 4, this._updateLastWrittenByte(), this;\n  }\n  /**\n   * Write `value` as a 64-bit floating number and move pointer forward by 8\n   * bytes.\n   * @param value - The value to write.\n   * @returns This.\n   */\n  writeFloat64(i) {\n    return this.ensureAvailable(8), this._data.setFloat64(this.offset, i, this.littleEndian), this.offset += 8, this._updateLastWrittenByte(), this;\n  }\n  /**\n   * Write `value` as a 64-bit signed bigint and move pointer forward by 8\n   * bytes.\n   * @param value - The value to write.\n   * @returns This.\n   */\n  writeBigInt64(i) {\n    return this.ensureAvailable(8), this._data.setBigInt64(this.offset, i, this.littleEndian), this.offset += 8, this._updateLastWrittenByte(), this;\n  }\n  /**\n   * Write `value` as a 64-bit unsigned bigint and move pointer forward by 8\n   * bytes.\n   * @param value - The value to write.\n   * @returns This.\n   */\n  writeBigUint64(i) {\n    return this.ensureAvailable(8), this._data.setBigUint64(this.offset, i, this.littleEndian), this.offset += 8, this._updateLastWrittenByte(), this;\n  }\n  /**\n   * Write the charCode of `str`'s first character as an 8-bit unsigned integer\n   * and move pointer forward by 1 byte.\n   * @param str - The character to write.\n   * @returns This.\n   */\n  writeChar(i) {\n    return this.writeUint8(i.charCodeAt(0));\n  }\n  /**\n   * Write the charCodes of all `str`'s characters as 8-bit unsigned integers\n   * and move pointer forward by `str.length` bytes.\n   * @param str - The characters to write.\n   * @returns This.\n   */\n  writeChars(i) {\n    for (let t = 0; t < i.length; t++)\n      this.writeUint8(i.charCodeAt(t));\n    return this;\n  }\n  /**\n   * UTF-8 encode and write `str` to the current pointer offset and move pointer\n   * forward according to the encoded length.\n   * @param str - The string to write.\n   * @returns This.\n   */\n  writeUtf8(i) {\n    return this.writeBytes(encode$1(i));\n  }\n  /**\n   * Export a Uint8Array view of the internal buffer.\n   * The view starts at the byte offset and its length\n   * is calculated to stop at the last written byte or the original length.\n   * @returns A new Uint8Array view.\n   */\n  toArray() {\n    return new Uint8Array(this.buffer, this.byteOffset, this.lastWrittenByte);\n  }\n  /**\n   *  Get the total number of bytes written so far, regardless of the current offset.\n   * @returns - Total number of bytes.\n   */\n  getWrittenByteLength() {\n    return this.lastWrittenByte - this.byteOffset;\n  }\n  /**\n   * Update the last written byte offset\n   * @private\n   */\n  _updateLastWrittenByte() {\n    this.offset > this.lastWrittenByte && (this.lastWrittenByte = this.offset);\n  }\n}\nconst IOBuffer$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  IOBuffer\n}, Symbol.toStringTag, { value: \"Module\" })), require$$0$3 = /* @__PURE__ */ getAugmentedNamespace(IOBuffer$1);\nvar constants$1, hasRequiredConstants$1;\nfunction requireConstants$1() {\n  return hasRequiredConstants$1 || (hasRequiredConstants$1 = 1, constants$1 = {\n    BITMAPV5HEADER: {\n      LogicalColorSpace: {\n        // https://msdn.microsoft.com/en-us/library/cc250396.aspx\n        LCS_CALIBRATED_RGB: 0,\n        LCS_sRGB: 1934772034,\n        // eslint-disable-line camelcase\n        LCS_WINDOWS_COLOR_SPACE: 1466527264\n      },\n      Compression: {\n        // https://msdn.microsoft.com/en-us/library/cc250415.aspx\n        BI_RGB: 0,\n        // No compression\n        BI_RLE8: 1,\n        BI_RLE4: 2,\n        BI_BITFIELDS: 3,\n        BI_JPEG: 4,\n        BI_PNG: 5,\n        BI_CMYK: 11,\n        BI_CMYKRLE8: 12,\n        BI_CMYKRLE4: 13\n      },\n      GamutMappingIntent: {\n        // https://msdn.microsoft.com/en-us/library/cc250392.aspx\n        LCS_GM_ABS_COLORIMETRIC: 8,\n        LCS_GM_BUSINESS: 1,\n        LCS_GM_GRAPHICS: 2,\n        LCS_GM_IMAGES: 4\n      }\n    }\n  }), constants$1;\n}\nvar BMPEncoder_1, hasRequiredBMPEncoder;\nfunction requireBMPEncoder() {\n  if (hasRequiredBMPEncoder) return BMPEncoder_1;\n  hasRequiredBMPEncoder = 1;\n  const { IOBuffer: e } = require$$0$3, i = requireConstants$1(), t = [];\n  for (let n = 0; n <= 8; n++)\n    t.push(255 << n);\n  class r extends e {\n    constructor(a) {\n      if (a.bitDepth !== 1)\n        throw new Error(\"Only bitDepth of 1 is supported\");\n      if (!a.height || !a.width)\n        throw new Error(\"ImageData width and height are required\");\n      super(a.data), this.width = a.width, this.height = a.height, this.bitDepth = a.bitDepth, this.channels = a.channels, this.components = a.components;\n    }\n    encode() {\n      this.encoded = new e(), this.encoded.skip(14), this.writeBitmapV5Header(), this.writeColorTable();\n      const a = this.encoded.offset;\n      return this.writePixelArray(), this.encoded.rewind(), this.writeBitmapFileHeader(a), this.encoded.toArray();\n    }\n    writePixelArray() {\n      let a = this.encoded;\n      const s = Math.floor((this.bitDepth * this.width + 31) / 32) * 4, o = Math.ceil(this.bitDepth * this.width / 8), h = s - o, l = this.bitDepth * this.width % 8, f = l === 0 ? 0 : 8 - l, b = s * this.height;\n      let w, g, E = 0, k = 0, A = 8;\n      a.mark(), g = this.readUint8();\n      for (let T = this.height - 1; T >= 0; T--) {\n        const C = T === 0;\n        a.reset(), a.skip(T * s);\n        for (let D = 0; D < o; D++) {\n          const $ = D === o - 1;\n          k <= f && $ ? (a.writeByte(g << k), (f === 0 || f === k) && !C && (w = g, g = this.readByte())) : k === 0 ? (w = g, g = this.readUint8(), a.writeByte(w)) : (w = g, g = this.readUint8(), a.writeByte(\n            w << k & t[k] | g >> A\n          )), $ && (E += l || 0, a.skip(h), k = E % 8, A = 8 - k);\n        }\n      }\n      s > o && (a.reset(), a.skip(b - 1), a.writeUint8(0));\n    }\n    writeColorTable() {\n      this.encoded.writeUint32(0).writeUint32(16777215);\n    }\n    writeBitmapFileHeader(a) {\n      this.encoded.writeChars(\"BM\").writeInt32(this.encoded.lastWrittenByte).writeUint16(0).writeUint16(0).writeUint32(a);\n    }\n    writeBitmapV5Header() {\n      const s = Math.floor((this.bitDepth * this.width + 31) / 32) * 4 * this.height;\n      this.encoded.writeUint32(124).writeInt32(this.width).writeInt32(this.height).writeUint16(1).writeUint16(this.bitDepth).writeUint32(i.BITMAPV5HEADER.Compression.BI_RGB).writeUint32(s).writeInt32(0).writeInt32(0).writeUint32(Math.pow(2, this.bitDepth)).writeUint32(Math.pow(2, this.bitDepth)).writeUint32(4278190080).writeUint32(16711680).writeUint32(65280).writeUint32(255).writeUint32(i.BITMAPV5HEADER.LogicalColorSpace.LCS_sRGB).skip(36).skip(12).writeUint32(i.BITMAPV5HEADER.GamutMappingIntent.LCS_GM_IMAGES).skip(12);\n    }\n  }\n  return BMPEncoder_1 = r, BMPEncoder_1;\n}\nvar hasRequiredSrc$5;\nfunction requireSrc$5() {\n  if (hasRequiredSrc$5) return src$5;\n  hasRequiredSrc$5 = 1;\n  const e = requireBMPEncoder();\n  return src$5.encode = function(t) {\n    return new e(t).encode();\n  }, src$5;\n}\nvar srcExports$3 = requireSrc$5();\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\nconst Z_FIXED$1 = 4, Z_BINARY = 0, Z_TEXT = 1, Z_UNKNOWN$1 = 2;\nfunction zero$1$1(e) {\n  let i = e.length;\n  for (; --i >= 0; )\n    e[i] = 0;\n}\nconst STORED_BLOCK = 0, STATIC_TREES = 1, DYN_TREES = 2, MIN_MATCH$1$1 = 3, MAX_MATCH$1$1 = 258, LENGTH_CODES$1$1 = 29, LITERALS$1$1 = 256, L_CODES$1$1 = LITERALS$1$1 + 1 + LENGTH_CODES$1$1, D_CODES$1$1 = 30, BL_CODES$1 = 19, HEAP_SIZE$1 = 2 * L_CODES$1$1 + 1, MAX_BITS$1 = 15, Buf_size = 16, MAX_BL_BITS = 7, END_BLOCK = 256, REP_3_6 = 16, REPZ_3_10 = 17, REPZ_11_138 = 18, extra_lbits = (\n  /* extra bits for each length code */\n  new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0])\n), extra_dbits = (\n  /* extra bits for each distance code */\n  new Uint8Array([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13])\n), extra_blbits = (\n  /* extra bits for each bit length code */\n  new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7])\n), bl_order = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), DIST_CODE_LEN$1 = 512, static_ltree$1 = new Array((L_CODES$1$1 + 2) * 2);\nzero$1$1(static_ltree$1);\nconst static_dtree$1 = new Array(D_CODES$1$1 * 2);\nzero$1$1(static_dtree$1);\nconst _dist_code$1 = new Array(DIST_CODE_LEN$1);\nzero$1$1(_dist_code$1);\nconst _length_code$1 = new Array(MAX_MATCH$1$1 - MIN_MATCH$1$1 + 1);\nzero$1$1(_length_code$1);\nconst base_length$1 = new Array(LENGTH_CODES$1$1);\nzero$1$1(base_length$1);\nconst base_dist$1 = new Array(D_CODES$1$1);\nzero$1$1(base_dist$1);\nfunction StaticTreeDesc(e, i, t, r, n) {\n  this.static_tree = e, this.extra_bits = i, this.extra_base = t, this.elems = r, this.max_length = n, this.has_stree = e && e.length;\n}\nlet static_l_desc, static_d_desc, static_bl_desc;\nfunction TreeDesc(e, i) {\n  this.dyn_tree = e, this.max_code = 0, this.stat_desc = i;\n}\nconst d_code = (e) => e < 256 ? _dist_code$1[e] : _dist_code$1[256 + (e >>> 7)], put_short = (e, i) => {\n  e.pending_buf[e.pending++] = i & 255, e.pending_buf[e.pending++] = i >>> 8 & 255;\n}, send_bits = (e, i, t) => {\n  e.bi_valid > Buf_size - t ? (e.bi_buf |= i << e.bi_valid & 65535, put_short(e, e.bi_buf), e.bi_buf = i >> Buf_size - e.bi_valid, e.bi_valid += t - Buf_size) : (e.bi_buf |= i << e.bi_valid & 65535, e.bi_valid += t);\n}, send_code = (e, i, t) => {\n  send_bits(\n    e,\n    t[i * 2],\n    t[i * 2 + 1]\n    /*.Len*/\n  );\n}, bi_reverse = (e, i) => {\n  let t = 0;\n  do\n    t |= e & 1, e >>>= 1, t <<= 1;\n  while (--i > 0);\n  return t >>> 1;\n}, bi_flush = (e) => {\n  e.bi_valid === 16 ? (put_short(e, e.bi_buf), e.bi_buf = 0, e.bi_valid = 0) : e.bi_valid >= 8 && (e.pending_buf[e.pending++] = e.bi_buf & 255, e.bi_buf >>= 8, e.bi_valid -= 8);\n}, gen_bitlen = (e, i) => {\n  const t = i.dyn_tree, r = i.max_code, n = i.stat_desc.static_tree, a = i.stat_desc.has_stree, s = i.stat_desc.extra_bits, o = i.stat_desc.extra_base, h = i.stat_desc.max_length;\n  let l, f, b, w, g, E, k = 0;\n  for (w = 0; w <= MAX_BITS$1; w++)\n    e.bl_count[w] = 0;\n  for (t[e.heap[e.heap_max] * 2 + 1] = 0, l = e.heap_max + 1; l < HEAP_SIZE$1; l++)\n    f = e.heap[l], w = t[t[f * 2 + 1] * 2 + 1] + 1, w > h && (w = h, k++), t[f * 2 + 1] = w, !(f > r) && (e.bl_count[w]++, g = 0, f >= o && (g = s[f - o]), E = t[f * 2], e.opt_len += E * (w + g), a && (e.static_len += E * (n[f * 2 + 1] + g)));\n  if (k !== 0) {\n    do {\n      for (w = h - 1; e.bl_count[w] === 0; )\n        w--;\n      e.bl_count[w]--, e.bl_count[w + 1] += 2, e.bl_count[h]--, k -= 2;\n    } while (k > 0);\n    for (w = h; w !== 0; w--)\n      for (f = e.bl_count[w]; f !== 0; )\n        b = e.heap[--l], !(b > r) && (t[b * 2 + 1] !== w && (e.opt_len += (w - t[b * 2 + 1]) * t[b * 2], t[b * 2 + 1] = w), f--);\n  }\n}, gen_codes = (e, i, t) => {\n  const r = new Array(MAX_BITS$1 + 1);\n  let n = 0, a, s;\n  for (a = 1; a <= MAX_BITS$1; a++)\n    n = n + t[a - 1] << 1, r[a] = n;\n  for (s = 0; s <= i; s++) {\n    let o = e[s * 2 + 1];\n    o !== 0 && (e[s * 2] = bi_reverse(r[o]++, o));\n  }\n}, tr_static_init = () => {\n  let e, i, t, r, n;\n  const a = new Array(MAX_BITS$1 + 1);\n  for (t = 0, r = 0; r < LENGTH_CODES$1$1 - 1; r++)\n    for (base_length$1[r] = t, e = 0; e < 1 << extra_lbits[r]; e++)\n      _length_code$1[t++] = r;\n  for (_length_code$1[t - 1] = r, n = 0, r = 0; r < 16; r++)\n    for (base_dist$1[r] = n, e = 0; e < 1 << extra_dbits[r]; e++)\n      _dist_code$1[n++] = r;\n  for (n >>= 7; r < D_CODES$1$1; r++)\n    for (base_dist$1[r] = n << 7, e = 0; e < 1 << extra_dbits[r] - 7; e++)\n      _dist_code$1[256 + n++] = r;\n  for (i = 0; i <= MAX_BITS$1; i++)\n    a[i] = 0;\n  for (e = 0; e <= 143; )\n    static_ltree$1[e * 2 + 1] = 8, e++, a[8]++;\n  for (; e <= 255; )\n    static_ltree$1[e * 2 + 1] = 9, e++, a[9]++;\n  for (; e <= 279; )\n    static_ltree$1[e * 2 + 1] = 7, e++, a[7]++;\n  for (; e <= 287; )\n    static_ltree$1[e * 2 + 1] = 8, e++, a[8]++;\n  for (gen_codes(static_ltree$1, L_CODES$1$1 + 1, a), e = 0; e < D_CODES$1$1; e++)\n    static_dtree$1[e * 2 + 1] = 5, static_dtree$1[e * 2] = bi_reverse(e, 5);\n  static_l_desc = new StaticTreeDesc(static_ltree$1, extra_lbits, LITERALS$1$1 + 1, L_CODES$1$1, MAX_BITS$1), static_d_desc = new StaticTreeDesc(static_dtree$1, extra_dbits, 0, D_CODES$1$1, MAX_BITS$1), static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0, BL_CODES$1, MAX_BL_BITS);\n}, init_block = (e) => {\n  let i;\n  for (i = 0; i < L_CODES$1$1; i++)\n    e.dyn_ltree[i * 2] = 0;\n  for (i = 0; i < D_CODES$1$1; i++)\n    e.dyn_dtree[i * 2] = 0;\n  for (i = 0; i < BL_CODES$1; i++)\n    e.bl_tree[i * 2] = 0;\n  e.dyn_ltree[END_BLOCK * 2] = 1, e.opt_len = e.static_len = 0, e.sym_next = e.matches = 0;\n}, bi_windup = (e) => {\n  e.bi_valid > 8 ? put_short(e, e.bi_buf) : e.bi_valid > 0 && (e.pending_buf[e.pending++] = e.bi_buf), e.bi_buf = 0, e.bi_valid = 0;\n}, smaller = (e, i, t, r) => {\n  const n = i * 2, a = t * 2;\n  return e[n] < e[a] || e[n] === e[a] && r[i] <= r[t];\n}, pqdownheap = (e, i, t) => {\n  const r = e.heap[t];\n  let n = t << 1;\n  for (; n <= e.heap_len && (n < e.heap_len && smaller(i, e.heap[n + 1], e.heap[n], e.depth) && n++, !smaller(i, r, e.heap[n], e.depth)); )\n    e.heap[t] = e.heap[n], t = n, n <<= 1;\n  e.heap[t] = r;\n}, compress_block = (e, i, t) => {\n  let r, n, a = 0, s, o;\n  if (e.sym_next !== 0)\n    do\n      r = e.pending_buf[e.sym_buf + a++] & 255, r += (e.pending_buf[e.sym_buf + a++] & 255) << 8, n = e.pending_buf[e.sym_buf + a++], r === 0 ? send_code(e, n, i) : (s = _length_code$1[n], send_code(e, s + LITERALS$1$1 + 1, i), o = extra_lbits[s], o !== 0 && (n -= base_length$1[s], send_bits(e, n, o)), r--, s = d_code(r), send_code(e, s, t), o = extra_dbits[s], o !== 0 && (r -= base_dist$1[s], send_bits(e, r, o)));\n    while (a < e.sym_next);\n  send_code(e, END_BLOCK, i);\n}, build_tree = (e, i) => {\n  const t = i.dyn_tree, r = i.stat_desc.static_tree, n = i.stat_desc.has_stree, a = i.stat_desc.elems;\n  let s, o, h = -1, l;\n  for (e.heap_len = 0, e.heap_max = HEAP_SIZE$1, s = 0; s < a; s++)\n    t[s * 2] !== 0 ? (e.heap[++e.heap_len] = h = s, e.depth[s] = 0) : t[s * 2 + 1] = 0;\n  for (; e.heap_len < 2; )\n    l = e.heap[++e.heap_len] = h < 2 ? ++h : 0, t[l * 2] = 1, e.depth[l] = 0, e.opt_len--, n && (e.static_len -= r[l * 2 + 1]);\n  for (i.max_code = h, s = e.heap_len >> 1; s >= 1; s--)\n    pqdownheap(e, t, s);\n  l = a;\n  do\n    s = e.heap[\n      1\n      /*SMALLEST*/\n    ], e.heap[\n      1\n      /*SMALLEST*/\n    ] = e.heap[e.heap_len--], pqdownheap(\n      e,\n      t,\n      1\n      /*SMALLEST*/\n    ), o = e.heap[\n      1\n      /*SMALLEST*/\n    ], e.heap[--e.heap_max] = s, e.heap[--e.heap_max] = o, t[l * 2] = t[s * 2] + t[o * 2], e.depth[l] = (e.depth[s] >= e.depth[o] ? e.depth[s] : e.depth[o]) + 1, t[s * 2 + 1] = t[o * 2 + 1] = l, e.heap[\n      1\n      /*SMALLEST*/\n    ] = l++, pqdownheap(\n      e,\n      t,\n      1\n      /*SMALLEST*/\n    );\n  while (e.heap_len >= 2);\n  e.heap[--e.heap_max] = e.heap[\n    1\n    /*SMALLEST*/\n  ], gen_bitlen(e, i), gen_codes(t, h, e.bl_count);\n}, scan_tree = (e, i, t) => {\n  let r, n = -1, a, s = i[0 * 2 + 1], o = 0, h = 7, l = 4;\n  for (s === 0 && (h = 138, l = 3), i[(t + 1) * 2 + 1] = 65535, r = 0; r <= t; r++)\n    a = s, s = i[(r + 1) * 2 + 1], !(++o < h && a === s) && (o < l ? e.bl_tree[a * 2] += o : a !== 0 ? (a !== n && e.bl_tree[a * 2]++, e.bl_tree[REP_3_6 * 2]++) : o <= 10 ? e.bl_tree[REPZ_3_10 * 2]++ : e.bl_tree[REPZ_11_138 * 2]++, o = 0, n = a, s === 0 ? (h = 138, l = 3) : a === s ? (h = 6, l = 3) : (h = 7, l = 4));\n}, send_tree = (e, i, t) => {\n  let r, n = -1, a, s = i[0 * 2 + 1], o = 0, h = 7, l = 4;\n  for (s === 0 && (h = 138, l = 3), r = 0; r <= t; r++)\n    if (a = s, s = i[(r + 1) * 2 + 1], !(++o < h && a === s)) {\n      if (o < l)\n        do\n          send_code(e, a, e.bl_tree);\n        while (--o !== 0);\n      else a !== 0 ? (a !== n && (send_code(e, a, e.bl_tree), o--), send_code(e, REP_3_6, e.bl_tree), send_bits(e, o - 3, 2)) : o <= 10 ? (send_code(e, REPZ_3_10, e.bl_tree), send_bits(e, o - 3, 3)) : (send_code(e, REPZ_11_138, e.bl_tree), send_bits(e, o - 11, 7));\n      o = 0, n = a, s === 0 ? (h = 138, l = 3) : a === s ? (h = 6, l = 3) : (h = 7, l = 4);\n    }\n}, build_bl_tree = (e) => {\n  let i;\n  for (scan_tree(e, e.dyn_ltree, e.l_desc.max_code), scan_tree(e, e.dyn_dtree, e.d_desc.max_code), build_tree(e, e.bl_desc), i = BL_CODES$1 - 1; i >= 3 && e.bl_tree[bl_order[i] * 2 + 1] === 0; i--)\n    ;\n  return e.opt_len += 3 * (i + 1) + 5 + 5 + 4, i;\n}, send_all_trees = (e, i, t, r) => {\n  let n;\n  for (send_bits(e, i - 257, 5), send_bits(e, t - 1, 5), send_bits(e, r - 4, 4), n = 0; n < r; n++)\n    send_bits(e, e.bl_tree[bl_order[n] * 2 + 1], 3);\n  send_tree(e, e.dyn_ltree, i - 1), send_tree(e, e.dyn_dtree, t - 1);\n}, detect_data_type = (e) => {\n  let i = 4093624447, t;\n  for (t = 0; t <= 31; t++, i >>>= 1)\n    if (i & 1 && e.dyn_ltree[t * 2] !== 0)\n      return Z_BINARY;\n  if (e.dyn_ltree[9 * 2] !== 0 || e.dyn_ltree[10 * 2] !== 0 || e.dyn_ltree[13 * 2] !== 0)\n    return Z_TEXT;\n  for (t = 32; t < LITERALS$1$1; t++)\n    if (e.dyn_ltree[t * 2] !== 0)\n      return Z_TEXT;\n  return Z_BINARY;\n};\nlet static_init_done = !1;\nconst _tr_init$1 = (e) => {\n  static_init_done || (tr_static_init(), static_init_done = !0), e.l_desc = new TreeDesc(e.dyn_ltree, static_l_desc), e.d_desc = new TreeDesc(e.dyn_dtree, static_d_desc), e.bl_desc = new TreeDesc(e.bl_tree, static_bl_desc), e.bi_buf = 0, e.bi_valid = 0, init_block(e);\n}, _tr_stored_block$1 = (e, i, t, r) => {\n  send_bits(e, (STORED_BLOCK << 1) + (r ? 1 : 0), 3), bi_windup(e), put_short(e, t), put_short(e, ~t), t && e.pending_buf.set(e.window.subarray(i, i + t), e.pending), e.pending += t;\n}, _tr_align$1 = (e) => {\n  send_bits(e, STATIC_TREES << 1, 3), send_code(e, END_BLOCK, static_ltree$1), bi_flush(e);\n}, _tr_flush_block$1 = (e, i, t, r) => {\n  let n, a, s = 0;\n  e.level > 0 ? (e.strm.data_type === Z_UNKNOWN$1 && (e.strm.data_type = detect_data_type(e)), build_tree(e, e.l_desc), build_tree(e, e.d_desc), s = build_bl_tree(e), n = e.opt_len + 3 + 7 >>> 3, a = e.static_len + 3 + 7 >>> 3, a <= n && (n = a)) : n = a = t + 5, t + 4 <= n && i !== -1 ? _tr_stored_block$1(e, i, t, r) : e.strategy === Z_FIXED$1 || a === n ? (send_bits(e, (STATIC_TREES << 1) + (r ? 1 : 0), 3), compress_block(e, static_ltree$1, static_dtree$1)) : (send_bits(e, (DYN_TREES << 1) + (r ? 1 : 0), 3), send_all_trees(e, e.l_desc.max_code + 1, e.d_desc.max_code + 1, s + 1), compress_block(e, e.dyn_ltree, e.dyn_dtree)), init_block(e), r && bi_windup(e);\n}, _tr_tally$1 = (e, i, t) => (e.pending_buf[e.sym_buf + e.sym_next++] = i, e.pending_buf[e.sym_buf + e.sym_next++] = i >> 8, e.pending_buf[e.sym_buf + e.sym_next++] = t, i === 0 ? e.dyn_ltree[t * 2]++ : (e.matches++, i--, e.dyn_ltree[(_length_code$1[t] + LITERALS$1$1 + 1) * 2]++, e.dyn_dtree[d_code(i) * 2]++), e.sym_next === e.sym_end);\nvar _tr_init_1 = _tr_init$1, _tr_stored_block_1 = _tr_stored_block$1, _tr_flush_block_1 = _tr_flush_block$1, _tr_tally_1 = _tr_tally$1, _tr_align_1 = _tr_align$1, trees$1 = {\n  _tr_init: _tr_init_1,\n  _tr_stored_block: _tr_stored_block_1,\n  _tr_flush_block: _tr_flush_block_1,\n  _tr_tally: _tr_tally_1,\n  _tr_align: _tr_align_1\n};\nconst adler32$1 = (e, i, t, r) => {\n  let n = e & 65535 | 0, a = e >>> 16 & 65535 | 0, s = 0;\n  for (; t !== 0; ) {\n    s = t > 2e3 ? 2e3 : t, t -= s;\n    do\n      n = n + i[r++] | 0, a = a + n | 0;\n    while (--s);\n    n %= 65521, a %= 65521;\n  }\n  return n | a << 16 | 0;\n};\nvar adler32_1$2 = adler32$1;\nconst makeTable$1 = () => {\n  let e, i = [];\n  for (var t = 0; t < 256; t++) {\n    e = t;\n    for (var r = 0; r < 8; r++)\n      e = e & 1 ? 3988292384 ^ e >>> 1 : e >>> 1;\n    i[t] = e;\n  }\n  return i;\n}, crcTable$2 = new Uint32Array(makeTable$1()), crc32$1 = (e, i, t, r) => {\n  const n = crcTable$2, a = r + t;\n  e ^= -1;\n  for (let s = r; s < a; s++)\n    e = e >>> 8 ^ n[(e ^ i[s]) & 255];\n  return e ^ -1;\n};\nvar crc32_1$2 = crc32$1, messages$2 = {\n  2: \"need dictionary\",\n  /* Z_NEED_DICT       2  */\n  1: \"stream end\",\n  /* Z_STREAM_END      1  */\n  0: \"\",\n  /* Z_OK              0  */\n  \"-1\": \"file error\",\n  /* Z_ERRNO         (-1) */\n  \"-2\": \"stream error\",\n  /* Z_STREAM_ERROR  (-2) */\n  \"-3\": \"data error\",\n  /* Z_DATA_ERROR    (-3) */\n  \"-4\": \"insufficient memory\",\n  /* Z_MEM_ERROR     (-4) */\n  \"-5\": \"buffer error\",\n  /* Z_BUF_ERROR     (-5) */\n  \"-6\": \"incompatible version\"\n  /* Z_VERSION_ERROR (-6) */\n}, constants$2$1 = {\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH: 0,\n  Z_PARTIAL_FLUSH: 1,\n  Z_SYNC_FLUSH: 2,\n  Z_FULL_FLUSH: 3,\n  Z_FINISH: 4,\n  Z_BLOCK: 5,\n  Z_TREES: 6,\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK: 0,\n  Z_STREAM_END: 1,\n  Z_NEED_DICT: 2,\n  Z_STREAM_ERROR: -2,\n  Z_DATA_ERROR: -3,\n  Z_MEM_ERROR: -4,\n  Z_BUF_ERROR: -5,\n  Z_DEFAULT_COMPRESSION: -1,\n  Z_FILTERED: 1,\n  Z_HUFFMAN_ONLY: 2,\n  Z_RLE: 3,\n  Z_FIXED: 4,\n  Z_DEFAULT_STRATEGY: 0,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN: 2,\n  /* The deflate compression method */\n  Z_DEFLATED: 8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees$1, {\n  Z_NO_FLUSH: Z_NO_FLUSH$2,\n  Z_PARTIAL_FLUSH,\n  Z_FULL_FLUSH: Z_FULL_FLUSH$1,\n  Z_FINISH: Z_FINISH$3,\n  Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3,\n  Z_STREAM_END: Z_STREAM_END$3,\n  Z_STREAM_ERROR: Z_STREAM_ERROR$2,\n  Z_DATA_ERROR: Z_DATA_ERROR$2,\n  Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED,\n  Z_HUFFMAN_ONLY,\n  Z_RLE,\n  Z_FIXED,\n  Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2$1, MAX_MEM_LEVEL = 9, MAX_WBITS$1 = 15, DEF_MEM_LEVEL = 8, LENGTH_CODES = 29, LITERALS = 256, L_CODES = LITERALS + 1 + LENGTH_CODES, D_CODES = 30, BL_CODES = 19, HEAP_SIZE = 2 * L_CODES + 1, MAX_BITS = 15, MIN_MATCH = 3, MAX_MATCH = 258, MIN_LOOKAHEAD = MAX_MATCH + MIN_MATCH + 1, PRESET_DICT = 32, INIT_STATE = 42, GZIP_STATE = 57, EXTRA_STATE = 69, NAME_STATE = 73, COMMENT_STATE = 91, HCRC_STATE = 103, BUSY_STATE = 113, FINISH_STATE = 666, BS_NEED_MORE = 1, BS_BLOCK_DONE = 2, BS_FINISH_STARTED = 3, BS_FINISH_DONE = 4, OS_CODE = 3, err = (e, i) => (e.msg = messages$2[i], i), rank = (e) => e * 2 - (e > 4 ? 9 : 0), zero = (e) => {\n  let i = e.length;\n  for (; --i >= 0; )\n    e[i] = 0;\n}, slide_hash = (e) => {\n  let i, t, r, n = e.w_size;\n  i = e.hash_size, r = i;\n  do\n    t = e.head[--r], e.head[r] = t >= n ? t - n : 0;\n  while (--i);\n  i = n, r = i;\n  do\n    t = e.prev[--r], e.prev[r] = t >= n ? t - n : 0;\n  while (--i);\n};\nlet HASH_ZLIB = (e, i, t) => (i << e.hash_shift ^ t) & e.hash_mask, HASH = HASH_ZLIB;\nconst flush_pending = (e) => {\n  const i = e.state;\n  let t = i.pending;\n  t > e.avail_out && (t = e.avail_out), t !== 0 && (e.output.set(i.pending_buf.subarray(i.pending_out, i.pending_out + t), e.next_out), e.next_out += t, i.pending_out += t, e.total_out += t, e.avail_out -= t, i.pending -= t, i.pending === 0 && (i.pending_out = 0));\n}, flush_block_only = (e, i) => {\n  _tr_flush_block(e, e.block_start >= 0 ? e.block_start : -1, e.strstart - e.block_start, i), e.block_start = e.strstart, flush_pending(e.strm);\n}, put_byte = (e, i) => {\n  e.pending_buf[e.pending++] = i;\n}, putShortMSB = (e, i) => {\n  e.pending_buf[e.pending++] = i >>> 8 & 255, e.pending_buf[e.pending++] = i & 255;\n}, read_buf = (e, i, t, r) => {\n  let n = e.avail_in;\n  return n > r && (n = r), n === 0 ? 0 : (e.avail_in -= n, i.set(e.input.subarray(e.next_in, e.next_in + n), t), e.state.wrap === 1 ? e.adler = adler32_1$2(e.adler, i, n, t) : e.state.wrap === 2 && (e.adler = crc32_1$2(e.adler, i, n, t)), e.next_in += n, e.total_in += n, n);\n}, longest_match = (e, i) => {\n  let t = e.max_chain_length, r = e.strstart, n, a, s = e.prev_length, o = e.nice_match;\n  const h = e.strstart > e.w_size - MIN_LOOKAHEAD ? e.strstart - (e.w_size - MIN_LOOKAHEAD) : 0, l = e.window, f = e.w_mask, b = e.prev, w = e.strstart + MAX_MATCH;\n  let g = l[r + s - 1], E = l[r + s];\n  e.prev_length >= e.good_match && (t >>= 2), o > e.lookahead && (o = e.lookahead);\n  do\n    if (n = i, !(l[n + s] !== E || l[n + s - 1] !== g || l[n] !== l[r] || l[++n] !== l[r + 1])) {\n      r += 2, n++;\n      do\n        ;\n      while (l[++r] === l[++n] && l[++r] === l[++n] && l[++r] === l[++n] && l[++r] === l[++n] && l[++r] === l[++n] && l[++r] === l[++n] && l[++r] === l[++n] && l[++r] === l[++n] && r < w);\n      if (a = MAX_MATCH - (w - r), r = w - MAX_MATCH, a > s) {\n        if (e.match_start = i, s = a, a >= o)\n          break;\n        g = l[r + s - 1], E = l[r + s];\n      }\n    }\n  while ((i = b[i & f]) > h && --t !== 0);\n  return s <= e.lookahead ? s : e.lookahead;\n}, fill_window = (e) => {\n  const i = e.w_size;\n  let t, r, n;\n  do {\n    if (r = e.window_size - e.lookahead - e.strstart, e.strstart >= i + (i - MIN_LOOKAHEAD) && (e.window.set(e.window.subarray(i, i + i - r), 0), e.match_start -= i, e.strstart -= i, e.block_start -= i, e.insert > e.strstart && (e.insert = e.strstart), slide_hash(e), r += i), e.strm.avail_in === 0)\n      break;\n    if (t = read_buf(e.strm, e.window, e.strstart + e.lookahead, r), e.lookahead += t, e.lookahead + e.insert >= MIN_MATCH)\n      for (n = e.strstart - e.insert, e.ins_h = e.window[n], e.ins_h = HASH(e, e.ins_h, e.window[n + 1]); e.insert && (e.ins_h = HASH(e, e.ins_h, e.window[n + MIN_MATCH - 1]), e.prev[n & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = n, n++, e.insert--, !(e.lookahead + e.insert < MIN_MATCH)); )\n        ;\n  } while (e.lookahead < MIN_LOOKAHEAD && e.strm.avail_in !== 0);\n}, deflate_stored = (e, i) => {\n  let t = e.pending_buf_size - 5 > e.w_size ? e.w_size : e.pending_buf_size - 5, r, n, a, s = 0, o = e.strm.avail_in;\n  do {\n    if (r = 65535, a = e.bi_valid + 42 >> 3, e.strm.avail_out < a || (a = e.strm.avail_out - a, n = e.strstart - e.block_start, r > n + e.strm.avail_in && (r = n + e.strm.avail_in), r > a && (r = a), r < t && (r === 0 && i !== Z_FINISH$3 || i === Z_NO_FLUSH$2 || r !== n + e.strm.avail_in)))\n      break;\n    s = i === Z_FINISH$3 && r === n + e.strm.avail_in ? 1 : 0, _tr_stored_block(e, 0, 0, s), e.pending_buf[e.pending - 4] = r, e.pending_buf[e.pending - 3] = r >> 8, e.pending_buf[e.pending - 2] = ~r, e.pending_buf[e.pending - 1] = ~r >> 8, flush_pending(e.strm), n && (n > r && (n = r), e.strm.output.set(e.window.subarray(e.block_start, e.block_start + n), e.strm.next_out), e.strm.next_out += n, e.strm.avail_out -= n, e.strm.total_out += n, e.block_start += n, r -= n), r && (read_buf(e.strm, e.strm.output, e.strm.next_out, r), e.strm.next_out += r, e.strm.avail_out -= r, e.strm.total_out += r);\n  } while (s === 0);\n  return o -= e.strm.avail_in, o && (o >= e.w_size ? (e.matches = 2, e.window.set(e.strm.input.subarray(e.strm.next_in - e.w_size, e.strm.next_in), 0), e.strstart = e.w_size, e.insert = e.strstart) : (e.window_size - e.strstart <= o && (e.strstart -= e.w_size, e.window.set(e.window.subarray(e.w_size, e.w_size + e.strstart), 0), e.matches < 2 && e.matches++, e.insert > e.strstart && (e.insert = e.strstart)), e.window.set(e.strm.input.subarray(e.strm.next_in - o, e.strm.next_in), e.strstart), e.strstart += o, e.insert += o > e.w_size - e.insert ? e.w_size - e.insert : o), e.block_start = e.strstart), e.high_water < e.strstart && (e.high_water = e.strstart), s ? BS_FINISH_DONE : i !== Z_NO_FLUSH$2 && i !== Z_FINISH$3 && e.strm.avail_in === 0 && e.strstart === e.block_start ? BS_BLOCK_DONE : (a = e.window_size - e.strstart, e.strm.avail_in > a && e.block_start >= e.w_size && (e.block_start -= e.w_size, e.strstart -= e.w_size, e.window.set(e.window.subarray(e.w_size, e.w_size + e.strstart), 0), e.matches < 2 && e.matches++, a += e.w_size, e.insert > e.strstart && (e.insert = e.strstart)), a > e.strm.avail_in && (a = e.strm.avail_in), a && (read_buf(e.strm, e.window, e.strstart, a), e.strstart += a, e.insert += a > e.w_size - e.insert ? e.w_size - e.insert : a), e.high_water < e.strstart && (e.high_water = e.strstart), a = e.bi_valid + 42 >> 3, a = e.pending_buf_size - a > 65535 ? 65535 : e.pending_buf_size - a, t = a > e.w_size ? e.w_size : a, n = e.strstart - e.block_start, (n >= t || (n || i === Z_FINISH$3) && i !== Z_NO_FLUSH$2 && e.strm.avail_in === 0 && n <= a) && (r = n > a ? a : n, s = i === Z_FINISH$3 && e.strm.avail_in === 0 && r === n ? 1 : 0, _tr_stored_block(e, e.block_start, r, s), e.block_start += r, flush_pending(e.strm)), s ? BS_FINISH_STARTED : BS_NEED_MORE);\n}, deflate_fast = (e, i) => {\n  let t, r;\n  for (; ; ) {\n    if (e.lookahead < MIN_LOOKAHEAD) {\n      if (fill_window(e), e.lookahead < MIN_LOOKAHEAD && i === Z_NO_FLUSH$2)\n        return BS_NEED_MORE;\n      if (e.lookahead === 0)\n        break;\n    }\n    if (t = 0, e.lookahead >= MIN_MATCH && (e.ins_h = HASH(e, e.ins_h, e.window[e.strstart + MIN_MATCH - 1]), t = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart), t !== 0 && e.strstart - t <= e.w_size - MIN_LOOKAHEAD && (e.match_length = longest_match(e, t)), e.match_length >= MIN_MATCH)\n      if (r = _tr_tally(e, e.strstart - e.match_start, e.match_length - MIN_MATCH), e.lookahead -= e.match_length, e.match_length <= e.max_lazy_match && e.lookahead >= MIN_MATCH) {\n        e.match_length--;\n        do\n          e.strstart++, e.ins_h = HASH(e, e.ins_h, e.window[e.strstart + MIN_MATCH - 1]), t = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart;\n        while (--e.match_length !== 0);\n        e.strstart++;\n      } else\n        e.strstart += e.match_length, e.match_length = 0, e.ins_h = e.window[e.strstart], e.ins_h = HASH(e, e.ins_h, e.window[e.strstart + 1]);\n    else\n      r = _tr_tally(e, 0, e.window[e.strstart]), e.lookahead--, e.strstart++;\n    if (r && (flush_block_only(e, !1), e.strm.avail_out === 0))\n      return BS_NEED_MORE;\n  }\n  return e.insert = e.strstart < MIN_MATCH - 1 ? e.strstart : MIN_MATCH - 1, i === Z_FINISH$3 ? (flush_block_only(e, !0), e.strm.avail_out === 0 ? BS_FINISH_STARTED : BS_FINISH_DONE) : e.sym_next && (flush_block_only(e, !1), e.strm.avail_out === 0) ? BS_NEED_MORE : BS_BLOCK_DONE;\n}, deflate_slow = (e, i) => {\n  let t, r, n;\n  for (; ; ) {\n    if (e.lookahead < MIN_LOOKAHEAD) {\n      if (fill_window(e), e.lookahead < MIN_LOOKAHEAD && i === Z_NO_FLUSH$2)\n        return BS_NEED_MORE;\n      if (e.lookahead === 0)\n        break;\n    }\n    if (t = 0, e.lookahead >= MIN_MATCH && (e.ins_h = HASH(e, e.ins_h, e.window[e.strstart + MIN_MATCH - 1]), t = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart), e.prev_length = e.match_length, e.prev_match = e.match_start, e.match_length = MIN_MATCH - 1, t !== 0 && e.prev_length < e.max_lazy_match && e.strstart - t <= e.w_size - MIN_LOOKAHEAD && (e.match_length = longest_match(e, t), e.match_length <= 5 && (e.strategy === Z_FILTERED || e.match_length === MIN_MATCH && e.strstart - e.match_start > 4096) && (e.match_length = MIN_MATCH - 1)), e.prev_length >= MIN_MATCH && e.match_length <= e.prev_length) {\n      n = e.strstart + e.lookahead - MIN_MATCH, r = _tr_tally(e, e.strstart - 1 - e.prev_match, e.prev_length - MIN_MATCH), e.lookahead -= e.prev_length - 1, e.prev_length -= 2;\n      do\n        ++e.strstart <= n && (e.ins_h = HASH(e, e.ins_h, e.window[e.strstart + MIN_MATCH - 1]), t = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart);\n      while (--e.prev_length !== 0);\n      if (e.match_available = 0, e.match_length = MIN_MATCH - 1, e.strstart++, r && (flush_block_only(e, !1), e.strm.avail_out === 0))\n        return BS_NEED_MORE;\n    } else if (e.match_available) {\n      if (r = _tr_tally(e, 0, e.window[e.strstart - 1]), r && flush_block_only(e, !1), e.strstart++, e.lookahead--, e.strm.avail_out === 0)\n        return BS_NEED_MORE;\n    } else\n      e.match_available = 1, e.strstart++, e.lookahead--;\n  }\n  return e.match_available && (r = _tr_tally(e, 0, e.window[e.strstart - 1]), e.match_available = 0), e.insert = e.strstart < MIN_MATCH - 1 ? e.strstart : MIN_MATCH - 1, i === Z_FINISH$3 ? (flush_block_only(e, !0), e.strm.avail_out === 0 ? BS_FINISH_STARTED : BS_FINISH_DONE) : e.sym_next && (flush_block_only(e, !1), e.strm.avail_out === 0) ? BS_NEED_MORE : BS_BLOCK_DONE;\n}, deflate_rle = (e, i) => {\n  let t, r, n, a;\n  const s = e.window;\n  for (; ; ) {\n    if (e.lookahead <= MAX_MATCH) {\n      if (fill_window(e), e.lookahead <= MAX_MATCH && i === Z_NO_FLUSH$2)\n        return BS_NEED_MORE;\n      if (e.lookahead === 0)\n        break;\n    }\n    if (e.match_length = 0, e.lookahead >= MIN_MATCH && e.strstart > 0 && (n = e.strstart - 1, r = s[n], r === s[++n] && r === s[++n] && r === s[++n])) {\n      a = e.strstart + MAX_MATCH;\n      do\n        ;\n      while (r === s[++n] && r === s[++n] && r === s[++n] && r === s[++n] && r === s[++n] && r === s[++n] && r === s[++n] && r === s[++n] && n < a);\n      e.match_length = MAX_MATCH - (a - n), e.match_length > e.lookahead && (e.match_length = e.lookahead);\n    }\n    if (e.match_length >= MIN_MATCH ? (t = _tr_tally(e, 1, e.match_length - MIN_MATCH), e.lookahead -= e.match_length, e.strstart += e.match_length, e.match_length = 0) : (t = _tr_tally(e, 0, e.window[e.strstart]), e.lookahead--, e.strstart++), t && (flush_block_only(e, !1), e.strm.avail_out === 0))\n      return BS_NEED_MORE;\n  }\n  return e.insert = 0, i === Z_FINISH$3 ? (flush_block_only(e, !0), e.strm.avail_out === 0 ? BS_FINISH_STARTED : BS_FINISH_DONE) : e.sym_next && (flush_block_only(e, !1), e.strm.avail_out === 0) ? BS_NEED_MORE : BS_BLOCK_DONE;\n}, deflate_huff = (e, i) => {\n  let t;\n  for (; ; ) {\n    if (e.lookahead === 0 && (fill_window(e), e.lookahead === 0)) {\n      if (i === Z_NO_FLUSH$2)\n        return BS_NEED_MORE;\n      break;\n    }\n    if (e.match_length = 0, t = _tr_tally(e, 0, e.window[e.strstart]), e.lookahead--, e.strstart++, t && (flush_block_only(e, !1), e.strm.avail_out === 0))\n      return BS_NEED_MORE;\n  }\n  return e.insert = 0, i === Z_FINISH$3 ? (flush_block_only(e, !0), e.strm.avail_out === 0 ? BS_FINISH_STARTED : BS_FINISH_DONE) : e.sym_next && (flush_block_only(e, !1), e.strm.avail_out === 0) ? BS_NEED_MORE : BS_BLOCK_DONE;\n};\nfunction Config(e, i, t, r, n) {\n  this.good_length = e, this.max_lazy = i, this.nice_length = t, this.max_chain = r, this.func = n;\n}\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),\n  /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),\n  /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),\n  /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),\n  /* 3 */\n  new Config(4, 4, 16, 16, deflate_slow),\n  /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),\n  /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),\n  /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),\n  /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),\n  /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)\n  /* 9 max compression */\n], lm_init = (e) => {\n  e.window_size = 2 * e.w_size, zero(e.head), e.max_lazy_match = configuration_table[e.level].max_lazy, e.good_match = configuration_table[e.level].good_length, e.nice_match = configuration_table[e.level].nice_length, e.max_chain_length = configuration_table[e.level].max_chain, e.strstart = 0, e.block_start = 0, e.lookahead = 0, e.insert = 0, e.match_length = e.prev_length = MIN_MATCH - 1, e.match_available = 0, e.ins_h = 0;\n};\nfunction DeflateState() {\n  this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = Z_DEFLATED$2, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new Uint16Array(HEAP_SIZE * 2), this.dyn_dtree = new Uint16Array((2 * D_CODES + 1) * 2), this.bl_tree = new Uint16Array((2 * BL_CODES + 1) * 2), zero(this.dyn_ltree), zero(this.dyn_dtree), zero(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new Uint16Array(MAX_BITS + 1), this.heap = new Uint16Array(2 * L_CODES + 1), zero(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new Uint16Array(2 * L_CODES + 1), zero(this.depth), this.sym_buf = 0, this.lit_bufsize = 0, this.sym_next = 0, this.sym_end = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;\n}\nconst deflateStateCheck = (e) => {\n  if (!e)\n    return 1;\n  const i = e.state;\n  return !i || i.strm !== e || i.status !== INIT_STATE && //#ifdef GZIP\n  i.status !== GZIP_STATE && //#endif\n  i.status !== EXTRA_STATE && i.status !== NAME_STATE && i.status !== COMMENT_STATE && i.status !== HCRC_STATE && i.status !== BUSY_STATE && i.status !== FINISH_STATE ? 1 : 0;\n}, deflateResetKeep = (e) => {\n  if (deflateStateCheck(e))\n    return err(e, Z_STREAM_ERROR$2);\n  e.total_in = e.total_out = 0, e.data_type = Z_UNKNOWN;\n  const i = e.state;\n  return i.pending = 0, i.pending_out = 0, i.wrap < 0 && (i.wrap = -i.wrap), i.status = //#ifdef GZIP\n  i.wrap === 2 ? GZIP_STATE : (\n    //#endif\n    i.wrap ? INIT_STATE : BUSY_STATE\n  ), e.adler = i.wrap === 2 ? 0 : 1, i.last_flush = -2, _tr_init(i), Z_OK$3;\n}, deflateReset = (e) => {\n  const i = deflateResetKeep(e);\n  return i === Z_OK$3 && lm_init(e.state), i;\n}, deflateSetHeader = (e, i) => deflateStateCheck(e) || e.state.wrap !== 2 ? Z_STREAM_ERROR$2 : (e.state.gzhead = i, Z_OK$3), deflateInit2 = (e, i, t, r, n, a) => {\n  if (!e)\n    return Z_STREAM_ERROR$2;\n  let s = 1;\n  if (i === Z_DEFAULT_COMPRESSION$1 && (i = 6), r < 0 ? (s = 0, r = -r) : r > 15 && (s = 2, r -= 16), n < 1 || n > MAX_MEM_LEVEL || t !== Z_DEFLATED$2 || r < 8 || r > 15 || i < 0 || i > 9 || a < 0 || a > Z_FIXED || r === 8 && s !== 1)\n    return err(e, Z_STREAM_ERROR$2);\n  r === 8 && (r = 9);\n  const o = new DeflateState();\n  return e.state = o, o.strm = e, o.status = INIT_STATE, o.wrap = s, o.gzhead = null, o.w_bits = r, o.w_size = 1 << o.w_bits, o.w_mask = o.w_size - 1, o.hash_bits = n + 7, o.hash_size = 1 << o.hash_bits, o.hash_mask = o.hash_size - 1, o.hash_shift = ~~((o.hash_bits + MIN_MATCH - 1) / MIN_MATCH), o.window = new Uint8Array(o.w_size * 2), o.head = new Uint16Array(o.hash_size), o.prev = new Uint16Array(o.w_size), o.lit_bufsize = 1 << n + 6, o.pending_buf_size = o.lit_bufsize * 4, o.pending_buf = new Uint8Array(o.pending_buf_size), o.sym_buf = o.lit_bufsize, o.sym_end = (o.lit_bufsize - 1) * 3, o.level = i, o.strategy = a, o.method = t, deflateReset(e);\n}, deflateInit = (e, i) => deflateInit2(e, i, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1), deflate$2 = (e, i) => {\n  if (deflateStateCheck(e) || i > Z_BLOCK$1 || i < 0)\n    return e ? err(e, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  const t = e.state;\n  if (!e.output || e.avail_in !== 0 && !e.input || t.status === FINISH_STATE && i !== Z_FINISH$3)\n    return err(e, e.avail_out === 0 ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  const r = t.last_flush;\n  if (t.last_flush = i, t.pending !== 0) {\n    if (flush_pending(e), e.avail_out === 0)\n      return t.last_flush = -1, Z_OK$3;\n  } else if (e.avail_in === 0 && rank(i) <= rank(r) && i !== Z_FINISH$3)\n    return err(e, Z_BUF_ERROR$1);\n  if (t.status === FINISH_STATE && e.avail_in !== 0)\n    return err(e, Z_BUF_ERROR$1);\n  if (t.status === INIT_STATE && t.wrap === 0 && (t.status = BUSY_STATE), t.status === INIT_STATE) {\n    let n = Z_DEFLATED$2 + (t.w_bits - 8 << 4) << 8, a = -1;\n    if (t.strategy >= Z_HUFFMAN_ONLY || t.level < 2 ? a = 0 : t.level < 6 ? a = 1 : t.level === 6 ? a = 2 : a = 3, n |= a << 6, t.strstart !== 0 && (n |= PRESET_DICT), n += 31 - n % 31, putShortMSB(t, n), t.strstart !== 0 && (putShortMSB(t, e.adler >>> 16), putShortMSB(t, e.adler & 65535)), e.adler = 1, t.status = BUSY_STATE, flush_pending(e), t.pending !== 0)\n      return t.last_flush = -1, Z_OK$3;\n  }\n  if (t.status === GZIP_STATE) {\n    if (e.adler = 0, put_byte(t, 31), put_byte(t, 139), put_byte(t, 8), t.gzhead)\n      put_byte(\n        t,\n        (t.gzhead.text ? 1 : 0) + (t.gzhead.hcrc ? 2 : 0) + (t.gzhead.extra ? 4 : 0) + (t.gzhead.name ? 8 : 0) + (t.gzhead.comment ? 16 : 0)\n      ), put_byte(t, t.gzhead.time & 255), put_byte(t, t.gzhead.time >> 8 & 255), put_byte(t, t.gzhead.time >> 16 & 255), put_byte(t, t.gzhead.time >> 24 & 255), put_byte(t, t.level === 9 ? 2 : t.strategy >= Z_HUFFMAN_ONLY || t.level < 2 ? 4 : 0), put_byte(t, t.gzhead.os & 255), t.gzhead.extra && t.gzhead.extra.length && (put_byte(t, t.gzhead.extra.length & 255), put_byte(t, t.gzhead.extra.length >> 8 & 255)), t.gzhead.hcrc && (e.adler = crc32_1$2(e.adler, t.pending_buf, t.pending, 0)), t.gzindex = 0, t.status = EXTRA_STATE;\n    else if (put_byte(t, 0), put_byte(t, 0), put_byte(t, 0), put_byte(t, 0), put_byte(t, 0), put_byte(t, t.level === 9 ? 2 : t.strategy >= Z_HUFFMAN_ONLY || t.level < 2 ? 4 : 0), put_byte(t, OS_CODE), t.status = BUSY_STATE, flush_pending(e), t.pending !== 0)\n      return t.last_flush = -1, Z_OK$3;\n  }\n  if (t.status === EXTRA_STATE) {\n    if (t.gzhead.extra) {\n      let n = t.pending, a = (t.gzhead.extra.length & 65535) - t.gzindex;\n      for (; t.pending + a > t.pending_buf_size; ) {\n        let o = t.pending_buf_size - t.pending;\n        if (t.pending_buf.set(t.gzhead.extra.subarray(t.gzindex, t.gzindex + o), t.pending), t.pending = t.pending_buf_size, t.gzhead.hcrc && t.pending > n && (e.adler = crc32_1$2(e.adler, t.pending_buf, t.pending - n, n)), t.gzindex += o, flush_pending(e), t.pending !== 0)\n          return t.last_flush = -1, Z_OK$3;\n        n = 0, a -= o;\n      }\n      let s = new Uint8Array(t.gzhead.extra);\n      t.pending_buf.set(s.subarray(t.gzindex, t.gzindex + a), t.pending), t.pending += a, t.gzhead.hcrc && t.pending > n && (e.adler = crc32_1$2(e.adler, t.pending_buf, t.pending - n, n)), t.gzindex = 0;\n    }\n    t.status = NAME_STATE;\n  }\n  if (t.status === NAME_STATE) {\n    if (t.gzhead.name) {\n      let n = t.pending, a;\n      do {\n        if (t.pending === t.pending_buf_size) {\n          if (t.gzhead.hcrc && t.pending > n && (e.adler = crc32_1$2(e.adler, t.pending_buf, t.pending - n, n)), flush_pending(e), t.pending !== 0)\n            return t.last_flush = -1, Z_OK$3;\n          n = 0;\n        }\n        t.gzindex < t.gzhead.name.length ? a = t.gzhead.name.charCodeAt(t.gzindex++) & 255 : a = 0, put_byte(t, a);\n      } while (a !== 0);\n      t.gzhead.hcrc && t.pending > n && (e.adler = crc32_1$2(e.adler, t.pending_buf, t.pending - n, n)), t.gzindex = 0;\n    }\n    t.status = COMMENT_STATE;\n  }\n  if (t.status === COMMENT_STATE) {\n    if (t.gzhead.comment) {\n      let n = t.pending, a;\n      do {\n        if (t.pending === t.pending_buf_size) {\n          if (t.gzhead.hcrc && t.pending > n && (e.adler = crc32_1$2(e.adler, t.pending_buf, t.pending - n, n)), flush_pending(e), t.pending !== 0)\n            return t.last_flush = -1, Z_OK$3;\n          n = 0;\n        }\n        t.gzindex < t.gzhead.comment.length ? a = t.gzhead.comment.charCodeAt(t.gzindex++) & 255 : a = 0, put_byte(t, a);\n      } while (a !== 0);\n      t.gzhead.hcrc && t.pending > n && (e.adler = crc32_1$2(e.adler, t.pending_buf, t.pending - n, n));\n    }\n    t.status = HCRC_STATE;\n  }\n  if (t.status === HCRC_STATE) {\n    if (t.gzhead.hcrc) {\n      if (t.pending + 2 > t.pending_buf_size && (flush_pending(e), t.pending !== 0))\n        return t.last_flush = -1, Z_OK$3;\n      put_byte(t, e.adler & 255), put_byte(t, e.adler >> 8 & 255), e.adler = 0;\n    }\n    if (t.status = BUSY_STATE, flush_pending(e), t.pending !== 0)\n      return t.last_flush = -1, Z_OK$3;\n  }\n  if (e.avail_in !== 0 || t.lookahead !== 0 || i !== Z_NO_FLUSH$2 && t.status !== FINISH_STATE) {\n    let n = t.level === 0 ? deflate_stored(t, i) : t.strategy === Z_HUFFMAN_ONLY ? deflate_huff(t, i) : t.strategy === Z_RLE ? deflate_rle(t, i) : configuration_table[t.level].func(t, i);\n    if ((n === BS_FINISH_STARTED || n === BS_FINISH_DONE) && (t.status = FINISH_STATE), n === BS_NEED_MORE || n === BS_FINISH_STARTED)\n      return e.avail_out === 0 && (t.last_flush = -1), Z_OK$3;\n    if (n === BS_BLOCK_DONE && (i === Z_PARTIAL_FLUSH ? _tr_align(t) : i !== Z_BLOCK$1 && (_tr_stored_block(t, 0, 0, !1), i === Z_FULL_FLUSH$1 && (zero(t.head), t.lookahead === 0 && (t.strstart = 0, t.block_start = 0, t.insert = 0))), flush_pending(e), e.avail_out === 0))\n      return t.last_flush = -1, Z_OK$3;\n  }\n  return i !== Z_FINISH$3 ? Z_OK$3 : t.wrap <= 0 ? Z_STREAM_END$3 : (t.wrap === 2 ? (put_byte(t, e.adler & 255), put_byte(t, e.adler >> 8 & 255), put_byte(t, e.adler >> 16 & 255), put_byte(t, e.adler >> 24 & 255), put_byte(t, e.total_in & 255), put_byte(t, e.total_in >> 8 & 255), put_byte(t, e.total_in >> 16 & 255), put_byte(t, e.total_in >> 24 & 255)) : (putShortMSB(t, e.adler >>> 16), putShortMSB(t, e.adler & 65535)), flush_pending(e), t.wrap > 0 && (t.wrap = -t.wrap), t.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3);\n}, deflateEnd = (e) => {\n  if (deflateStateCheck(e))\n    return Z_STREAM_ERROR$2;\n  const i = e.state.status;\n  return e.state = null, i === BUSY_STATE ? err(e, Z_DATA_ERROR$2) : Z_OK$3;\n}, deflateSetDictionary = (e, i) => {\n  let t = i.length;\n  if (deflateStateCheck(e))\n    return Z_STREAM_ERROR$2;\n  const r = e.state, n = r.wrap;\n  if (n === 2 || n === 1 && r.status !== INIT_STATE || r.lookahead)\n    return Z_STREAM_ERROR$2;\n  if (n === 1 && (e.adler = adler32_1$2(e.adler, i, t, 0)), r.wrap = 0, t >= r.w_size) {\n    n === 0 && (zero(r.head), r.strstart = 0, r.block_start = 0, r.insert = 0);\n    let h = new Uint8Array(r.w_size);\n    h.set(i.subarray(t - r.w_size, t), 0), i = h, t = r.w_size;\n  }\n  const a = e.avail_in, s = e.next_in, o = e.input;\n  for (e.avail_in = t, e.next_in = 0, e.input = i, fill_window(r); r.lookahead >= MIN_MATCH; ) {\n    let h = r.strstart, l = r.lookahead - (MIN_MATCH - 1);\n    do\n      r.ins_h = HASH(r, r.ins_h, r.window[h + MIN_MATCH - 1]), r.prev[h & r.w_mask] = r.head[r.ins_h], r.head[r.ins_h] = h, h++;\n    while (--l);\n    r.strstart = h, r.lookahead = MIN_MATCH - 1, fill_window(r);\n  }\n  return r.strstart += r.lookahead, r.block_start = r.strstart, r.insert = r.lookahead, r.lookahead = 0, r.match_length = r.prev_length = MIN_MATCH - 1, r.match_available = 0, e.next_in = s, e.input = o, e.avail_in = a, r.wrap = n, Z_OK$3;\n};\nvar deflateInit_1 = deflateInit, deflateInit2_1 = deflateInit2, deflateReset_1 = deflateReset, deflateResetKeep_1 = deflateResetKeep, deflateSetHeader_1 = deflateSetHeader, deflate_2$1 = deflate$2, deflateEnd_1 = deflateEnd, deflateSetDictionary_1 = deflateSetDictionary, deflateInfo = \"pako deflate (from Nodeca project)\", deflate_1$2 = {\n  deflateInit: deflateInit_1,\n  deflateInit2: deflateInit2_1,\n  deflateReset: deflateReset_1,\n  deflateResetKeep: deflateResetKeep_1,\n  deflateSetHeader: deflateSetHeader_1,\n  deflate: deflate_2$1,\n  deflateEnd: deflateEnd_1,\n  deflateSetDictionary: deflateSetDictionary_1,\n  deflateInfo\n};\nconst _has$1 = (e, i) => Object.prototype.hasOwnProperty.call(e, i);\nvar assign$1 = function(e) {\n  const i = Array.prototype.slice.call(arguments, 1);\n  for (; i.length; ) {\n    const t = i.shift();\n    if (t) {\n      if (typeof t != \"object\")\n        throw new TypeError(t + \"must be non-object\");\n      for (const r in t)\n        _has$1(t, r) && (e[r] = t[r]);\n    }\n  }\n  return e;\n}, flattenChunks$1 = (e) => {\n  let i = 0;\n  for (let r = 0, n = e.length; r < n; r++)\n    i += e[r].length;\n  const t = new Uint8Array(i);\n  for (let r = 0, n = 0, a = e.length; r < a; r++) {\n    let s = e[r];\n    t.set(s, n), n += s.length;\n  }\n  return t;\n}, common$2 = {\n  assign: assign$1,\n  flattenChunks: flattenChunks$1\n};\nlet STR_APPLY_UIA_OK$1 = !0;\ntry {\n  String.fromCharCode.apply(null, new Uint8Array(1));\n} catch {\n  STR_APPLY_UIA_OK$1 = !1;\n}\nconst _utf8len$1 = new Uint8Array(256);\nfor (let e = 0; e < 256; e++)\n  _utf8len$1[e] = e >= 252 ? 6 : e >= 248 ? 5 : e >= 240 ? 4 : e >= 224 ? 3 : e >= 192 ? 2 : 1;\n_utf8len$1[254] = _utf8len$1[254] = 1;\nvar string2buf$1 = (e) => {\n  if (typeof TextEncoder == \"function\" && TextEncoder.prototype.encode)\n    return new TextEncoder().encode(e);\n  let i, t, r, n, a, s = e.length, o = 0;\n  for (n = 0; n < s; n++)\n    t = e.charCodeAt(n), (t & 64512) === 55296 && n + 1 < s && (r = e.charCodeAt(n + 1), (r & 64512) === 56320 && (t = 65536 + (t - 55296 << 10) + (r - 56320), n++)), o += t < 128 ? 1 : t < 2048 ? 2 : t < 65536 ? 3 : 4;\n  for (i = new Uint8Array(o), a = 0, n = 0; a < o; n++)\n    t = e.charCodeAt(n), (t & 64512) === 55296 && n + 1 < s && (r = e.charCodeAt(n + 1), (r & 64512) === 56320 && (t = 65536 + (t - 55296 << 10) + (r - 56320), n++)), t < 128 ? i[a++] = t : t < 2048 ? (i[a++] = 192 | t >>> 6, i[a++] = 128 | t & 63) : t < 65536 ? (i[a++] = 224 | t >>> 12, i[a++] = 128 | t >>> 6 & 63, i[a++] = 128 | t & 63) : (i[a++] = 240 | t >>> 18, i[a++] = 128 | t >>> 12 & 63, i[a++] = 128 | t >>> 6 & 63, i[a++] = 128 | t & 63);\n  return i;\n};\nconst buf2binstring$1 = (e, i) => {\n  if (i < 65534 && e.subarray && STR_APPLY_UIA_OK$1)\n    return String.fromCharCode.apply(null, e.length === i ? e : e.subarray(0, i));\n  let t = \"\";\n  for (let r = 0; r < i; r++)\n    t += String.fromCharCode(e[r]);\n  return t;\n};\nvar buf2string$1 = (e, i) => {\n  const t = i || e.length;\n  if (typeof TextDecoder == \"function\" && TextDecoder.prototype.decode)\n    return new TextDecoder().decode(e.subarray(0, i));\n  let r, n;\n  const a = new Array(t * 2);\n  for (n = 0, r = 0; r < t; ) {\n    let s = e[r++];\n    if (s < 128) {\n      a[n++] = s;\n      continue;\n    }\n    let o = _utf8len$1[s];\n    if (o > 4) {\n      a[n++] = 65533, r += o - 1;\n      continue;\n    }\n    for (s &= o === 2 ? 31 : o === 3 ? 15 : 7; o > 1 && r < t; )\n      s = s << 6 | e[r++] & 63, o--;\n    if (o > 1) {\n      a[n++] = 65533;\n      continue;\n    }\n    s < 65536 ? a[n++] = s : (s -= 65536, a[n++] = 55296 | s >> 10 & 1023, a[n++] = 56320 | s & 1023);\n  }\n  return buf2binstring$1(a, n);\n}, utf8border$1 = (e, i) => {\n  i = i || e.length, i > e.length && (i = e.length);\n  let t = i - 1;\n  for (; t >= 0 && (e[t] & 192) === 128; )\n    t--;\n  return t < 0 || t === 0 ? i : t + _utf8len$1[e[t]] > i ? t : i;\n}, strings$2 = {\n  string2buf: string2buf$1,\n  buf2string: buf2string$1,\n  utf8border: utf8border$1\n};\nfunction ZStream$1() {\n  this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = \"\", this.state = null, this.data_type = 2, this.adler = 0;\n}\nvar zstream$2 = ZStream$1;\nconst toString$1$1 = Object.prototype.toString, {\n  Z_NO_FLUSH: Z_NO_FLUSH$1,\n  Z_SYNC_FLUSH,\n  Z_FULL_FLUSH,\n  Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2,\n  Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2$1;\nfunction Deflate$1(e) {\n  this.options = common$2.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, e || {});\n  let i = this.options;\n  i.raw && i.windowBits > 0 ? i.windowBits = -i.windowBits : i.gzip && i.windowBits > 0 && i.windowBits < 16 && (i.windowBits += 16), this.err = 0, this.msg = \"\", this.ended = !1, this.chunks = [], this.strm = new zstream$2(), this.strm.avail_out = 0;\n  let t = deflate_1$2.deflateInit2(\n    this.strm,\n    i.level,\n    i.method,\n    i.windowBits,\n    i.memLevel,\n    i.strategy\n  );\n  if (t !== Z_OK$2)\n    throw new Error(messages$2[t]);\n  if (i.header && deflate_1$2.deflateSetHeader(this.strm, i.header), i.dictionary) {\n    let r;\n    if (typeof i.dictionary == \"string\" ? r = strings$2.string2buf(i.dictionary) : toString$1$1.call(i.dictionary) === \"[object ArrayBuffer]\" ? r = new Uint8Array(i.dictionary) : r = i.dictionary, t = deflate_1$2.deflateSetDictionary(this.strm, r), t !== Z_OK$2)\n      throw new Error(messages$2[t]);\n    this._dict_set = !0;\n  }\n}\nDeflate$1.prototype.push = function(e, i) {\n  const t = this.strm, r = this.options.chunkSize;\n  let n, a;\n  if (this.ended)\n    return !1;\n  for (i === ~~i ? a = i : a = i === !0 ? Z_FINISH$2 : Z_NO_FLUSH$1, typeof e == \"string\" ? t.input = strings$2.string2buf(e) : toString$1$1.call(e) === \"[object ArrayBuffer]\" ? t.input = new Uint8Array(e) : t.input = e, t.next_in = 0, t.avail_in = t.input.length; ; ) {\n    if (t.avail_out === 0 && (t.output = new Uint8Array(r), t.next_out = 0, t.avail_out = r), (a === Z_SYNC_FLUSH || a === Z_FULL_FLUSH) && t.avail_out <= 6) {\n      this.onData(t.output.subarray(0, t.next_out)), t.avail_out = 0;\n      continue;\n    }\n    if (n = deflate_1$2.deflate(t, a), n === Z_STREAM_END$2)\n      return t.next_out > 0 && this.onData(t.output.subarray(0, t.next_out)), n = deflate_1$2.deflateEnd(this.strm), this.onEnd(n), this.ended = !0, n === Z_OK$2;\n    if (t.avail_out === 0) {\n      this.onData(t.output);\n      continue;\n    }\n    if (a > 0 && t.next_out > 0) {\n      this.onData(t.output.subarray(0, t.next_out)), t.avail_out = 0;\n      continue;\n    }\n    if (t.avail_in === 0) break;\n  }\n  return !0;\n};\nDeflate$1.prototype.onData = function(e) {\n  this.chunks.push(e);\n};\nDeflate$1.prototype.onEnd = function(e) {\n  e === Z_OK$2 && (this.result = common$2.flattenChunks(this.chunks)), this.chunks = [], this.err = e, this.msg = this.strm.msg;\n};\nfunction deflate$1$1(e, i) {\n  const t = new Deflate$1(i);\n  if (t.push(e, !0), t.err)\n    throw t.msg || messages$2[t.err];\n  return t.result;\n}\nvar deflate_2 = deflate$1$1, deflate_1$1 = {\n  deflate: deflate_2\n};\nconst BAD$1$1 = 16209, TYPE$1$1 = 16191;\nvar inffast$2 = function(i, t) {\n  let r, n, a, s, o, h, l, f, b, w, g, E, k, A, T, C, D, $, P, z, B, F, O, N;\n  const G = i.state;\n  r = i.next_in, O = i.input, n = r + (i.avail_in - 5), a = i.next_out, N = i.output, s = a - (t - i.avail_out), o = a + (i.avail_out - 257), h = G.dmax, l = G.wsize, f = G.whave, b = G.wnext, w = G.window, g = G.hold, E = G.bits, k = G.lencode, A = G.distcode, T = (1 << G.lenbits) - 1, C = (1 << G.distbits) - 1;\n  e:\n    do {\n      E < 15 && (g += O[r++] << E, E += 8, g += O[r++] << E, E += 8), D = k[g & T];\n      t:\n        for (; ; ) {\n          if ($ = D >>> 24, g >>>= $, E -= $, $ = D >>> 16 & 255, $ === 0)\n            N[a++] = D & 65535;\n          else if ($ & 16) {\n            P = D & 65535, $ &= 15, $ && (E < $ && (g += O[r++] << E, E += 8), P += g & (1 << $) - 1, g >>>= $, E -= $), E < 15 && (g += O[r++] << E, E += 8, g += O[r++] << E, E += 8), D = A[g & C];\n            i:\n              for (; ; ) {\n                if ($ = D >>> 24, g >>>= $, E -= $, $ = D >>> 16 & 255, $ & 16) {\n                  if (z = D & 65535, $ &= 15, E < $ && (g += O[r++] << E, E += 8, E < $ && (g += O[r++] << E, E += 8)), z += g & (1 << $) - 1, z > h) {\n                    i.msg = \"invalid distance too far back\", G.mode = BAD$1$1;\n                    break e;\n                  }\n                  if (g >>>= $, E -= $, $ = a - s, z > $) {\n                    if ($ = z - $, $ > f && G.sane) {\n                      i.msg = \"invalid distance too far back\", G.mode = BAD$1$1;\n                      break e;\n                    }\n                    if (B = 0, F = w, b === 0) {\n                      if (B += l - $, $ < P) {\n                        P -= $;\n                        do\n                          N[a++] = w[B++];\n                        while (--$);\n                        B = a - z, F = N;\n                      }\n                    } else if (b < $) {\n                      if (B += l + b - $, $ -= b, $ < P) {\n                        P -= $;\n                        do\n                          N[a++] = w[B++];\n                        while (--$);\n                        if (B = 0, b < P) {\n                          $ = b, P -= $;\n                          do\n                            N[a++] = w[B++];\n                          while (--$);\n                          B = a - z, F = N;\n                        }\n                      }\n                    } else if (B += b - $, $ < P) {\n                      P -= $;\n                      do\n                        N[a++] = w[B++];\n                      while (--$);\n                      B = a - z, F = N;\n                    }\n                    for (; P > 2; )\n                      N[a++] = F[B++], N[a++] = F[B++], N[a++] = F[B++], P -= 3;\n                    P && (N[a++] = F[B++], P > 1 && (N[a++] = F[B++]));\n                  } else {\n                    B = a - z;\n                    do\n                      N[a++] = N[B++], N[a++] = N[B++], N[a++] = N[B++], P -= 3;\n                    while (P > 2);\n                    P && (N[a++] = N[B++], P > 1 && (N[a++] = N[B++]));\n                  }\n                } else if (($ & 64) === 0) {\n                  D = A[(D & 65535) + (g & (1 << $) - 1)];\n                  continue i;\n                } else {\n                  i.msg = \"invalid distance code\", G.mode = BAD$1$1;\n                  break e;\n                }\n                break;\n              }\n          } else if (($ & 64) === 0) {\n            D = k[(D & 65535) + (g & (1 << $) - 1)];\n            continue t;\n          } else if ($ & 32) {\n            G.mode = TYPE$1$1;\n            break e;\n          } else {\n            i.msg = \"invalid literal/length code\", G.mode = BAD$1$1;\n            break e;\n          }\n          break;\n        }\n    } while (r < n && a < o);\n  P = E >> 3, r -= P, E -= P << 3, g &= (1 << E) - 1, i.next_in = r, i.next_out = a, i.avail_in = r < n ? 5 + (n - r) : 5 - (r - n), i.avail_out = a < o ? 257 + (o - a) : 257 - (a - o), G.hold = g, G.bits = E;\n};\nconst MAXBITS$1 = 15, ENOUGH_LENS$1$1 = 852, ENOUGH_DISTS$1$1 = 592, CODES$1$1 = 0, LENS$1$1 = 1, DISTS$1$1 = 2, lbase$1 = new Uint16Array([\n  /* Length codes 257..285 base */\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  13,\n  15,\n  17,\n  19,\n  23,\n  27,\n  31,\n  35,\n  43,\n  51,\n  59,\n  67,\n  83,\n  99,\n  115,\n  131,\n  163,\n  195,\n  227,\n  258,\n  0,\n  0\n]), lext$1 = new Uint8Array([\n  /* Length codes 257..285 extra */\n  16,\n  16,\n  16,\n  16,\n  16,\n  16,\n  16,\n  16,\n  17,\n  17,\n  17,\n  17,\n  18,\n  18,\n  18,\n  18,\n  19,\n  19,\n  19,\n  19,\n  20,\n  20,\n  20,\n  20,\n  21,\n  21,\n  21,\n  21,\n  16,\n  72,\n  78\n]), dbase$1 = new Uint16Array([\n  /* Distance codes 0..29 base */\n  1,\n  2,\n  3,\n  4,\n  5,\n  7,\n  9,\n  13,\n  17,\n  25,\n  33,\n  49,\n  65,\n  97,\n  129,\n  193,\n  257,\n  385,\n  513,\n  769,\n  1025,\n  1537,\n  2049,\n  3073,\n  4097,\n  6145,\n  8193,\n  12289,\n  16385,\n  24577,\n  0,\n  0\n]), dext$1 = new Uint8Array([\n  /* Distance codes 0..29 extra */\n  16,\n  16,\n  16,\n  16,\n  17,\n  17,\n  18,\n  18,\n  19,\n  19,\n  20,\n  20,\n  21,\n  21,\n  22,\n  22,\n  23,\n  23,\n  24,\n  24,\n  25,\n  25,\n  26,\n  26,\n  27,\n  27,\n  28,\n  28,\n  29,\n  29,\n  64,\n  64\n]), inflate_table$1 = (e, i, t, r, n, a, s, o) => {\n  const h = o.bits;\n  let l = 0, f = 0, b = 0, w = 0, g = 0, E = 0, k = 0, A = 0, T = 0, C = 0, D, $, P, z, B, F = null, O;\n  const N = new Uint16Array(MAXBITS$1 + 1), G = new Uint16Array(MAXBITS$1 + 1);\n  let V = null, J, Q, W;\n  for (l = 0; l <= MAXBITS$1; l++)\n    N[l] = 0;\n  for (f = 0; f < r; f++)\n    N[i[t + f]]++;\n  for (g = h, w = MAXBITS$1; w >= 1 && N[w] === 0; w--)\n    ;\n  if (g > w && (g = w), w === 0)\n    return n[a++] = 1 << 24 | 64 << 16 | 0, n[a++] = 1 << 24 | 64 << 16 | 0, o.bits = 1, 0;\n  for (b = 1; b < w && N[b] === 0; b++)\n    ;\n  for (g < b && (g = b), A = 1, l = 1; l <= MAXBITS$1; l++)\n    if (A <<= 1, A -= N[l], A < 0)\n      return -1;\n  if (A > 0 && (e === CODES$1$1 || w !== 1))\n    return -1;\n  for (G[1] = 0, l = 1; l < MAXBITS$1; l++)\n    G[l + 1] = G[l] + N[l];\n  for (f = 0; f < r; f++)\n    i[t + f] !== 0 && (s[G[i[t + f]]++] = f);\n  if (e === CODES$1$1 ? (F = V = s, O = 20) : e === LENS$1$1 ? (F = lbase$1, V = lext$1, O = 257) : (F = dbase$1, V = dext$1, O = 0), C = 0, f = 0, l = b, B = a, E = g, k = 0, P = -1, T = 1 << g, z = T - 1, e === LENS$1$1 && T > ENOUGH_LENS$1$1 || e === DISTS$1$1 && T > ENOUGH_DISTS$1$1)\n    return 1;\n  for (; ; ) {\n    J = l - k, s[f] + 1 < O ? (Q = 0, W = s[f]) : s[f] >= O ? (Q = V[s[f] - O], W = F[s[f] - O]) : (Q = 96, W = 0), D = 1 << l - k, $ = 1 << E, b = $;\n    do\n      $ -= D, n[B + (C >> k) + $] = J << 24 | Q << 16 | W | 0;\n    while ($ !== 0);\n    for (D = 1 << l - 1; C & D; )\n      D >>= 1;\n    if (D !== 0 ? (C &= D - 1, C += D) : C = 0, f++, --N[l] === 0) {\n      if (l === w)\n        break;\n      l = i[t + s[f]];\n    }\n    if (l > g && (C & z) !== P) {\n      for (k === 0 && (k = g), B += b, E = l - k, A = 1 << E; E + k < w && (A -= N[E + k], !(A <= 0)); )\n        E++, A <<= 1;\n      if (T += 1 << E, e === LENS$1$1 && T > ENOUGH_LENS$1$1 || e === DISTS$1$1 && T > ENOUGH_DISTS$1$1)\n        return 1;\n      P = C & z, n[P] = g << 24 | E << 16 | B - a | 0;\n    }\n  }\n  return C !== 0 && (n[B + C] = l - k << 24 | 64 << 16 | 0), o.bits = g, 0;\n};\nvar inftrees$2 = inflate_table$1;\nconst CODES$2 = 0, LENS$2 = 1, DISTS$2 = 2, {\n  Z_FINISH: Z_FINISH$1$1,\n  Z_BLOCK: Z_BLOCK$2,\n  Z_TREES: Z_TREES$1,\n  Z_OK: Z_OK$1$1,\n  Z_STREAM_END: Z_STREAM_END$1$1,\n  Z_NEED_DICT: Z_NEED_DICT$1$1,\n  Z_STREAM_ERROR: Z_STREAM_ERROR$1$1,\n  Z_DATA_ERROR: Z_DATA_ERROR$1$1,\n  Z_MEM_ERROR: Z_MEM_ERROR$1$1,\n  Z_BUF_ERROR: Z_BUF_ERROR$2,\n  Z_DEFLATED: Z_DEFLATED$3\n} = constants$2$1, HEAD$1 = 16180, FLAGS$1 = 16181, TIME$1 = 16182, OS$1 = 16183, EXLEN$1 = 16184, EXTRA$1 = 16185, NAME$1 = 16186, COMMENT$1 = 16187, HCRC$1 = 16188, DICTID$1 = 16189, DICT$1 = 16190, TYPE$2 = 16191, TYPEDO$1 = 16192, STORED$1 = 16193, COPY_$1 = 16194, COPY$1 = 16195, TABLE$1 = 16196, LENLENS$1 = 16197, CODELENS$1 = 16198, LEN_$1 = 16199, LEN$1 = 16200, LENEXT$1 = 16201, DIST$1 = 16202, DISTEXT$1 = 16203, MATCH$1 = 16204, LIT$1 = 16205, CHECK$1 = 16206, LENGTH$1 = 16207, DONE$1 = 16208, BAD$2 = 16209, MEM$1 = 16210, SYNC$1 = 16211, ENOUGH_LENS$2 = 852, ENOUGH_DISTS$2 = 592, MAX_WBITS$2 = 15, DEF_WBITS$1 = MAX_WBITS$2, zswap32$1 = (e) => (e >>> 24 & 255) + (e >>> 8 & 65280) + ((e & 65280) << 8) + ((e & 255) << 24);\nfunction InflateState$1() {\n  this.strm = null, this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new Uint16Array(320), this.work = new Uint16Array(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;\n}\nconst inflateStateCheck$1 = (e) => {\n  if (!e)\n    return 1;\n  const i = e.state;\n  return !i || i.strm !== e || i.mode < HEAD$1 || i.mode > SYNC$1 ? 1 : 0;\n}, inflateResetKeep$1 = (e) => {\n  if (inflateStateCheck$1(e))\n    return Z_STREAM_ERROR$1$1;\n  const i = e.state;\n  return e.total_in = e.total_out = i.total = 0, e.msg = \"\", i.wrap && (e.adler = i.wrap & 1), i.mode = HEAD$1, i.last = 0, i.havedict = 0, i.flags = -1, i.dmax = 32768, i.head = null, i.hold = 0, i.bits = 0, i.lencode = i.lendyn = new Int32Array(ENOUGH_LENS$2), i.distcode = i.distdyn = new Int32Array(ENOUGH_DISTS$2), i.sane = 1, i.back = -1, Z_OK$1$1;\n}, inflateReset$1 = (e) => {\n  if (inflateStateCheck$1(e))\n    return Z_STREAM_ERROR$1$1;\n  const i = e.state;\n  return i.wsize = 0, i.whave = 0, i.wnext = 0, inflateResetKeep$1(e);\n}, inflateReset2$1 = (e, i) => {\n  let t;\n  if (inflateStateCheck$1(e))\n    return Z_STREAM_ERROR$1$1;\n  const r = e.state;\n  return i < 0 ? (t = 0, i = -i) : (t = (i >> 4) + 5, i < 48 && (i &= 15)), i && (i < 8 || i > 15) ? Z_STREAM_ERROR$1$1 : (r.window !== null && r.wbits !== i && (r.window = null), r.wrap = t, r.wbits = i, inflateReset$1(e));\n}, inflateInit2$1 = (e, i) => {\n  if (!e)\n    return Z_STREAM_ERROR$1$1;\n  const t = new InflateState$1();\n  e.state = t, t.strm = e, t.window = null, t.mode = HEAD$1;\n  const r = inflateReset2$1(e, i);\n  return r !== Z_OK$1$1 && (e.state = null), r;\n}, inflateInit$1 = (e) => inflateInit2$1(e, DEF_WBITS$1);\nlet virgin$1 = !0, lenfix$1, distfix$1;\nconst fixedtables$1 = (e) => {\n  if (virgin$1) {\n    lenfix$1 = new Int32Array(512), distfix$1 = new Int32Array(32);\n    let i = 0;\n    for (; i < 144; )\n      e.lens[i++] = 8;\n    for (; i < 256; )\n      e.lens[i++] = 9;\n    for (; i < 280; )\n      e.lens[i++] = 7;\n    for (; i < 288; )\n      e.lens[i++] = 8;\n    for (inftrees$2(LENS$2, e.lens, 0, 288, lenfix$1, 0, e.work, { bits: 9 }), i = 0; i < 32; )\n      e.lens[i++] = 5;\n    inftrees$2(DISTS$2, e.lens, 0, 32, distfix$1, 0, e.work, { bits: 5 }), virgin$1 = !1;\n  }\n  e.lencode = lenfix$1, e.lenbits = 9, e.distcode = distfix$1, e.distbits = 5;\n}, updatewindow$1 = (e, i, t, r) => {\n  let n;\n  const a = e.state;\n  return a.window === null && (a.wsize = 1 << a.wbits, a.wnext = 0, a.whave = 0, a.window = new Uint8Array(a.wsize)), r >= a.wsize ? (a.window.set(i.subarray(t - a.wsize, t), 0), a.wnext = 0, a.whave = a.wsize) : (n = a.wsize - a.wnext, n > r && (n = r), a.window.set(i.subarray(t - r, t - r + n), a.wnext), r -= n, r ? (a.window.set(i.subarray(t - r, t), 0), a.wnext = r, a.whave = a.wsize) : (a.wnext += n, a.wnext === a.wsize && (a.wnext = 0), a.whave < a.wsize && (a.whave += n))), 0;\n}, inflate$2$1 = (e, i) => {\n  let t, r, n, a, s, o, h, l, f, b, w, g, E, k, A = 0, T, C, D, $, P, z, B, F;\n  const O = new Uint8Array(4);\n  let N, G;\n  const V = (\n    /* permutation of code lengths */\n    new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15])\n  );\n  if (inflateStateCheck$1(e) || !e.output || !e.input && e.avail_in !== 0)\n    return Z_STREAM_ERROR$1$1;\n  t = e.state, t.mode === TYPE$2 && (t.mode = TYPEDO$1), s = e.next_out, n = e.output, h = e.avail_out, a = e.next_in, r = e.input, o = e.avail_in, l = t.hold, f = t.bits, b = o, w = h, F = Z_OK$1$1;\n  e:\n    for (; ; )\n      switch (t.mode) {\n        case HEAD$1:\n          if (t.wrap === 0) {\n            t.mode = TYPEDO$1;\n            break;\n          }\n          for (; f < 16; ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          if (t.wrap & 2 && l === 35615) {\n            t.wbits === 0 && (t.wbits = 15), t.check = 0, O[0] = l & 255, O[1] = l >>> 8 & 255, t.check = crc32_1$2(t.check, O, 2, 0), l = 0, f = 0, t.mode = FLAGS$1;\n            break;\n          }\n          if (t.head && (t.head.done = !1), !(t.wrap & 1) || /* check if zlib header allowed */\n          (((l & 255) << 8) + (l >> 8)) % 31) {\n            e.msg = \"incorrect header check\", t.mode = BAD$2;\n            break;\n          }\n          if ((l & 15) !== Z_DEFLATED$3) {\n            e.msg = \"unknown compression method\", t.mode = BAD$2;\n            break;\n          }\n          if (l >>>= 4, f -= 4, B = (l & 15) + 8, t.wbits === 0 && (t.wbits = B), B > 15 || B > t.wbits) {\n            e.msg = \"invalid window size\", t.mode = BAD$2;\n            break;\n          }\n          t.dmax = 1 << t.wbits, t.flags = 0, e.adler = t.check = 1, t.mode = l & 512 ? DICTID$1 : TYPE$2, l = 0, f = 0;\n          break;\n        case FLAGS$1:\n          for (; f < 16; ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          if (t.flags = l, (t.flags & 255) !== Z_DEFLATED$3) {\n            e.msg = \"unknown compression method\", t.mode = BAD$2;\n            break;\n          }\n          if (t.flags & 57344) {\n            e.msg = \"unknown header flags set\", t.mode = BAD$2;\n            break;\n          }\n          t.head && (t.head.text = l >> 8 & 1), t.flags & 512 && t.wrap & 4 && (O[0] = l & 255, O[1] = l >>> 8 & 255, t.check = crc32_1$2(t.check, O, 2, 0)), l = 0, f = 0, t.mode = TIME$1;\n        /* falls through */\n        case TIME$1:\n          for (; f < 32; ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          t.head && (t.head.time = l), t.flags & 512 && t.wrap & 4 && (O[0] = l & 255, O[1] = l >>> 8 & 255, O[2] = l >>> 16 & 255, O[3] = l >>> 24 & 255, t.check = crc32_1$2(t.check, O, 4, 0)), l = 0, f = 0, t.mode = OS$1;\n        /* falls through */\n        case OS$1:\n          for (; f < 16; ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          t.head && (t.head.xflags = l & 255, t.head.os = l >> 8), t.flags & 512 && t.wrap & 4 && (O[0] = l & 255, O[1] = l >>> 8 & 255, t.check = crc32_1$2(t.check, O, 2, 0)), l = 0, f = 0, t.mode = EXLEN$1;\n        /* falls through */\n        case EXLEN$1:\n          if (t.flags & 1024) {\n            for (; f < 16; ) {\n              if (o === 0)\n                break e;\n              o--, l += r[a++] << f, f += 8;\n            }\n            t.length = l, t.head && (t.head.extra_len = l), t.flags & 512 && t.wrap & 4 && (O[0] = l & 255, O[1] = l >>> 8 & 255, t.check = crc32_1$2(t.check, O, 2, 0)), l = 0, f = 0;\n          } else t.head && (t.head.extra = null);\n          t.mode = EXTRA$1;\n        /* falls through */\n        case EXTRA$1:\n          if (t.flags & 1024 && (g = t.length, g > o && (g = o), g && (t.head && (B = t.head.extra_len - t.length, t.head.extra || (t.head.extra = new Uint8Array(t.head.extra_len)), t.head.extra.set(\n            r.subarray(\n              a,\n              // extra field is limited to 65536 bytes\n              // - no need for additional size check\n              a + g\n            ),\n            /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n            B\n          )), t.flags & 512 && t.wrap & 4 && (t.check = crc32_1$2(t.check, r, g, a)), o -= g, a += g, t.length -= g), t.length))\n            break e;\n          t.length = 0, t.mode = NAME$1;\n        /* falls through */\n        case NAME$1:\n          if (t.flags & 2048) {\n            if (o === 0)\n              break e;\n            g = 0;\n            do\n              B = r[a + g++], t.head && B && t.length < 65536 && (t.head.name += String.fromCharCode(B));\n            while (B && g < o);\n            if (t.flags & 512 && t.wrap & 4 && (t.check = crc32_1$2(t.check, r, g, a)), o -= g, a += g, B)\n              break e;\n          } else t.head && (t.head.name = null);\n          t.length = 0, t.mode = COMMENT$1;\n        /* falls through */\n        case COMMENT$1:\n          if (t.flags & 4096) {\n            if (o === 0)\n              break e;\n            g = 0;\n            do\n              B = r[a + g++], t.head && B && t.length < 65536 && (t.head.comment += String.fromCharCode(B));\n            while (B && g < o);\n            if (t.flags & 512 && t.wrap & 4 && (t.check = crc32_1$2(t.check, r, g, a)), o -= g, a += g, B)\n              break e;\n          } else t.head && (t.head.comment = null);\n          t.mode = HCRC$1;\n        /* falls through */\n        case HCRC$1:\n          if (t.flags & 512) {\n            for (; f < 16; ) {\n              if (o === 0)\n                break e;\n              o--, l += r[a++] << f, f += 8;\n            }\n            if (t.wrap & 4 && l !== (t.check & 65535)) {\n              e.msg = \"header crc mismatch\", t.mode = BAD$2;\n              break;\n            }\n            l = 0, f = 0;\n          }\n          t.head && (t.head.hcrc = t.flags >> 9 & 1, t.head.done = !0), e.adler = t.check = 0, t.mode = TYPE$2;\n          break;\n        case DICTID$1:\n          for (; f < 32; ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          e.adler = t.check = zswap32$1(l), l = 0, f = 0, t.mode = DICT$1;\n        /* falls through */\n        case DICT$1:\n          if (t.havedict === 0)\n            return e.next_out = s, e.avail_out = h, e.next_in = a, e.avail_in = o, t.hold = l, t.bits = f, Z_NEED_DICT$1$1;\n          e.adler = t.check = 1, t.mode = TYPE$2;\n        /* falls through */\n        case TYPE$2:\n          if (i === Z_BLOCK$2 || i === Z_TREES$1)\n            break e;\n        /* falls through */\n        case TYPEDO$1:\n          if (t.last) {\n            l >>>= f & 7, f -= f & 7, t.mode = CHECK$1;\n            break;\n          }\n          for (; f < 3; ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          switch (t.last = l & 1, l >>>= 1, f -= 1, l & 3) {\n            case 0:\n              t.mode = STORED$1;\n              break;\n            case 1:\n              if (fixedtables$1(t), t.mode = LEN_$1, i === Z_TREES$1) {\n                l >>>= 2, f -= 2;\n                break e;\n              }\n              break;\n            case 2:\n              t.mode = TABLE$1;\n              break;\n            case 3:\n              e.msg = \"invalid block type\", t.mode = BAD$2;\n          }\n          l >>>= 2, f -= 2;\n          break;\n        case STORED$1:\n          for (l >>>= f & 7, f -= f & 7; f < 32; ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          if ((l & 65535) !== (l >>> 16 ^ 65535)) {\n            e.msg = \"invalid stored block lengths\", t.mode = BAD$2;\n            break;\n          }\n          if (t.length = l & 65535, l = 0, f = 0, t.mode = COPY_$1, i === Z_TREES$1)\n            break e;\n        /* falls through */\n        case COPY_$1:\n          t.mode = COPY$1;\n        /* falls through */\n        case COPY$1:\n          if (g = t.length, g) {\n            if (g > o && (g = o), g > h && (g = h), g === 0)\n              break e;\n            n.set(r.subarray(a, a + g), s), o -= g, a += g, h -= g, s += g, t.length -= g;\n            break;\n          }\n          t.mode = TYPE$2;\n          break;\n        case TABLE$1:\n          for (; f < 14; ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          if (t.nlen = (l & 31) + 257, l >>>= 5, f -= 5, t.ndist = (l & 31) + 1, l >>>= 5, f -= 5, t.ncode = (l & 15) + 4, l >>>= 4, f -= 4, t.nlen > 286 || t.ndist > 30) {\n            e.msg = \"too many length or distance symbols\", t.mode = BAD$2;\n            break;\n          }\n          t.have = 0, t.mode = LENLENS$1;\n        /* falls through */\n        case LENLENS$1:\n          for (; t.have < t.ncode; ) {\n            for (; f < 3; ) {\n              if (o === 0)\n                break e;\n              o--, l += r[a++] << f, f += 8;\n            }\n            t.lens[V[t.have++]] = l & 7, l >>>= 3, f -= 3;\n          }\n          for (; t.have < 19; )\n            t.lens[V[t.have++]] = 0;\n          if (t.lencode = t.lendyn, t.lenbits = 7, N = { bits: t.lenbits }, F = inftrees$2(CODES$2, t.lens, 0, 19, t.lencode, 0, t.work, N), t.lenbits = N.bits, F) {\n            e.msg = \"invalid code lengths set\", t.mode = BAD$2;\n            break;\n          }\n          t.have = 0, t.mode = CODELENS$1;\n        /* falls through */\n        case CODELENS$1:\n          for (; t.have < t.nlen + t.ndist; ) {\n            for (; A = t.lencode[l & (1 << t.lenbits) - 1], T = A >>> 24, C = A >>> 16 & 255, D = A & 65535, !(T <= f); ) {\n              if (o === 0)\n                break e;\n              o--, l += r[a++] << f, f += 8;\n            }\n            if (D < 16)\n              l >>>= T, f -= T, t.lens[t.have++] = D;\n            else {\n              if (D === 16) {\n                for (G = T + 2; f < G; ) {\n                  if (o === 0)\n                    break e;\n                  o--, l += r[a++] << f, f += 8;\n                }\n                if (l >>>= T, f -= T, t.have === 0) {\n                  e.msg = \"invalid bit length repeat\", t.mode = BAD$2;\n                  break;\n                }\n                B = t.lens[t.have - 1], g = 3 + (l & 3), l >>>= 2, f -= 2;\n              } else if (D === 17) {\n                for (G = T + 3; f < G; ) {\n                  if (o === 0)\n                    break e;\n                  o--, l += r[a++] << f, f += 8;\n                }\n                l >>>= T, f -= T, B = 0, g = 3 + (l & 7), l >>>= 3, f -= 3;\n              } else {\n                for (G = T + 7; f < G; ) {\n                  if (o === 0)\n                    break e;\n                  o--, l += r[a++] << f, f += 8;\n                }\n                l >>>= T, f -= T, B = 0, g = 11 + (l & 127), l >>>= 7, f -= 7;\n              }\n              if (t.have + g > t.nlen + t.ndist) {\n                e.msg = \"invalid bit length repeat\", t.mode = BAD$2;\n                break;\n              }\n              for (; g--; )\n                t.lens[t.have++] = B;\n            }\n          }\n          if (t.mode === BAD$2)\n            break;\n          if (t.lens[256] === 0) {\n            e.msg = \"invalid code -- missing end-of-block\", t.mode = BAD$2;\n            break;\n          }\n          if (t.lenbits = 9, N = { bits: t.lenbits }, F = inftrees$2(LENS$2, t.lens, 0, t.nlen, t.lencode, 0, t.work, N), t.lenbits = N.bits, F) {\n            e.msg = \"invalid literal/lengths set\", t.mode = BAD$2;\n            break;\n          }\n          if (t.distbits = 6, t.distcode = t.distdyn, N = { bits: t.distbits }, F = inftrees$2(DISTS$2, t.lens, t.nlen, t.ndist, t.distcode, 0, t.work, N), t.distbits = N.bits, F) {\n            e.msg = \"invalid distances set\", t.mode = BAD$2;\n            break;\n          }\n          if (t.mode = LEN_$1, i === Z_TREES$1)\n            break e;\n        /* falls through */\n        case LEN_$1:\n          t.mode = LEN$1;\n        /* falls through */\n        case LEN$1:\n          if (o >= 6 && h >= 258) {\n            e.next_out = s, e.avail_out = h, e.next_in = a, e.avail_in = o, t.hold = l, t.bits = f, inffast$2(e, w), s = e.next_out, n = e.output, h = e.avail_out, a = e.next_in, r = e.input, o = e.avail_in, l = t.hold, f = t.bits, t.mode === TYPE$2 && (t.back = -1);\n            break;\n          }\n          for (t.back = 0; A = t.lencode[l & (1 << t.lenbits) - 1], T = A >>> 24, C = A >>> 16 & 255, D = A & 65535, !(T <= f); ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          if (C && (C & 240) === 0) {\n            for ($ = T, P = C, z = D; A = t.lencode[z + ((l & (1 << $ + P) - 1) >> $)], T = A >>> 24, C = A >>> 16 & 255, D = A & 65535, !($ + T <= f); ) {\n              if (o === 0)\n                break e;\n              o--, l += r[a++] << f, f += 8;\n            }\n            l >>>= $, f -= $, t.back += $;\n          }\n          if (l >>>= T, f -= T, t.back += T, t.length = D, C === 0) {\n            t.mode = LIT$1;\n            break;\n          }\n          if (C & 32) {\n            t.back = -1, t.mode = TYPE$2;\n            break;\n          }\n          if (C & 64) {\n            e.msg = \"invalid literal/length code\", t.mode = BAD$2;\n            break;\n          }\n          t.extra = C & 15, t.mode = LENEXT$1;\n        /* falls through */\n        case LENEXT$1:\n          if (t.extra) {\n            for (G = t.extra; f < G; ) {\n              if (o === 0)\n                break e;\n              o--, l += r[a++] << f, f += 8;\n            }\n            t.length += l & (1 << t.extra) - 1, l >>>= t.extra, f -= t.extra, t.back += t.extra;\n          }\n          t.was = t.length, t.mode = DIST$1;\n        /* falls through */\n        case DIST$1:\n          for (; A = t.distcode[l & (1 << t.distbits) - 1], T = A >>> 24, C = A >>> 16 & 255, D = A & 65535, !(T <= f); ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          if ((C & 240) === 0) {\n            for ($ = T, P = C, z = D; A = t.distcode[z + ((l & (1 << $ + P) - 1) >> $)], T = A >>> 24, C = A >>> 16 & 255, D = A & 65535, !($ + T <= f); ) {\n              if (o === 0)\n                break e;\n              o--, l += r[a++] << f, f += 8;\n            }\n            l >>>= $, f -= $, t.back += $;\n          }\n          if (l >>>= T, f -= T, t.back += T, C & 64) {\n            e.msg = \"invalid distance code\", t.mode = BAD$2;\n            break;\n          }\n          t.offset = D, t.extra = C & 15, t.mode = DISTEXT$1;\n        /* falls through */\n        case DISTEXT$1:\n          if (t.extra) {\n            for (G = t.extra; f < G; ) {\n              if (o === 0)\n                break e;\n              o--, l += r[a++] << f, f += 8;\n            }\n            t.offset += l & (1 << t.extra) - 1, l >>>= t.extra, f -= t.extra, t.back += t.extra;\n          }\n          if (t.offset > t.dmax) {\n            e.msg = \"invalid distance too far back\", t.mode = BAD$2;\n            break;\n          }\n          t.mode = MATCH$1;\n        /* falls through */\n        case MATCH$1:\n          if (h === 0)\n            break e;\n          if (g = w - h, t.offset > g) {\n            if (g = t.offset - g, g > t.whave && t.sane) {\n              e.msg = \"invalid distance too far back\", t.mode = BAD$2;\n              break;\n            }\n            g > t.wnext ? (g -= t.wnext, E = t.wsize - g) : E = t.wnext - g, g > t.length && (g = t.length), k = t.window;\n          } else\n            k = n, E = s - t.offset, g = t.length;\n          g > h && (g = h), h -= g, t.length -= g;\n          do\n            n[s++] = k[E++];\n          while (--g);\n          t.length === 0 && (t.mode = LEN$1);\n          break;\n        case LIT$1:\n          if (h === 0)\n            break e;\n          n[s++] = t.length, h--, t.mode = LEN$1;\n          break;\n        case CHECK$1:\n          if (t.wrap) {\n            for (; f < 32; ) {\n              if (o === 0)\n                break e;\n              o--, l |= r[a++] << f, f += 8;\n            }\n            if (w -= h, e.total_out += w, t.total += w, t.wrap & 4 && w && (e.adler = t.check = /*UPDATE_CHECK(state.check, put - _out, _out);*/\n            t.flags ? crc32_1$2(t.check, n, w, s - w) : adler32_1$2(t.check, n, w, s - w)), w = h, t.wrap & 4 && (t.flags ? l : zswap32$1(l)) !== t.check) {\n              e.msg = \"incorrect data check\", t.mode = BAD$2;\n              break;\n            }\n            l = 0, f = 0;\n          }\n          t.mode = LENGTH$1;\n        /* falls through */\n        case LENGTH$1:\n          if (t.wrap && t.flags) {\n            for (; f < 32; ) {\n              if (o === 0)\n                break e;\n              o--, l += r[a++] << f, f += 8;\n            }\n            if (t.wrap & 4 && l !== (t.total & 4294967295)) {\n              e.msg = \"incorrect length check\", t.mode = BAD$2;\n              break;\n            }\n            l = 0, f = 0;\n          }\n          t.mode = DONE$1;\n        /* falls through */\n        case DONE$1:\n          F = Z_STREAM_END$1$1;\n          break e;\n        case BAD$2:\n          F = Z_DATA_ERROR$1$1;\n          break e;\n        case MEM$1:\n          return Z_MEM_ERROR$1$1;\n        case SYNC$1:\n        /* falls through */\n        default:\n          return Z_STREAM_ERROR$1$1;\n      }\n  return e.next_out = s, e.avail_out = h, e.next_in = a, e.avail_in = o, t.hold = l, t.bits = f, (t.wsize || w !== e.avail_out && t.mode < BAD$2 && (t.mode < CHECK$1 || i !== Z_FINISH$1$1)) && updatewindow$1(e, e.output, e.next_out, w - e.avail_out), b -= e.avail_in, w -= e.avail_out, e.total_in += b, e.total_out += w, t.total += w, t.wrap & 4 && w && (e.adler = t.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n  t.flags ? crc32_1$2(t.check, n, w, e.next_out - w) : adler32_1$2(t.check, n, w, e.next_out - w)), e.data_type = t.bits + (t.last ? 64 : 0) + (t.mode === TYPE$2 ? 128 : 0) + (t.mode === LEN_$1 || t.mode === COPY_$1 ? 256 : 0), (b === 0 && w === 0 || i === Z_FINISH$1$1) && F === Z_OK$1$1 && (F = Z_BUF_ERROR$2), F;\n}, inflateEnd$1 = (e) => {\n  if (inflateStateCheck$1(e))\n    return Z_STREAM_ERROR$1$1;\n  let i = e.state;\n  return i.window && (i.window = null), e.state = null, Z_OK$1$1;\n}, inflateGetHeader$1 = (e, i) => {\n  if (inflateStateCheck$1(e))\n    return Z_STREAM_ERROR$1$1;\n  const t = e.state;\n  return (t.wrap & 2) === 0 ? Z_STREAM_ERROR$1$1 : (t.head = i, i.done = !1, Z_OK$1$1);\n}, inflateSetDictionary$1 = (e, i) => {\n  const t = i.length;\n  let r, n, a;\n  return inflateStateCheck$1(e) || (r = e.state, r.wrap !== 0 && r.mode !== DICT$1) ? Z_STREAM_ERROR$1$1 : r.mode === DICT$1 && (n = 1, n = adler32_1$2(n, i, t, 0), n !== r.check) ? Z_DATA_ERROR$1$1 : (a = updatewindow$1(e, i, t, t), a ? (r.mode = MEM$1, Z_MEM_ERROR$1$1) : (r.havedict = 1, Z_OK$1$1));\n};\nvar inflateReset_1$1 = inflateReset$1, inflateReset2_1$1 = inflateReset2$1, inflateResetKeep_1$1 = inflateResetKeep$1, inflateInit_1$1 = inflateInit$1, inflateInit2_1$1 = inflateInit2$1, inflate_2$1$1 = inflate$2$1, inflateEnd_1$1 = inflateEnd$1, inflateGetHeader_1$1 = inflateGetHeader$1, inflateSetDictionary_1$1 = inflateSetDictionary$1, inflateInfo$1 = \"pako inflate (from Nodeca project)\", inflate_1$2$1 = {\n  inflateReset: inflateReset_1$1,\n  inflateReset2: inflateReset2_1$1,\n  inflateResetKeep: inflateResetKeep_1$1,\n  inflateInit: inflateInit_1$1,\n  inflateInit2: inflateInit2_1$1,\n  inflate: inflate_2$1$1,\n  inflateEnd: inflateEnd_1$1,\n  inflateGetHeader: inflateGetHeader_1$1,\n  inflateSetDictionary: inflateSetDictionary_1$1,\n  inflateInfo: inflateInfo$1\n};\nfunction GZheader$1() {\n  this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = \"\", this.comment = \"\", this.hcrc = 0, this.done = !1;\n}\nvar gzheader$2 = GZheader$1;\nconst toString$2 = Object.prototype.toString, {\n  Z_NO_FLUSH: Z_NO_FLUSH$3,\n  Z_FINISH: Z_FINISH$4,\n  Z_OK: Z_OK$4,\n  Z_STREAM_END: Z_STREAM_END$4,\n  Z_NEED_DICT: Z_NEED_DICT$2,\n  Z_STREAM_ERROR: Z_STREAM_ERROR$3,\n  Z_DATA_ERROR: Z_DATA_ERROR$3,\n  Z_MEM_ERROR: Z_MEM_ERROR$2\n} = constants$2$1;\nfunction Inflate$1$1(e) {\n  this.options = common$2.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: \"\"\n  }, e || {});\n  const i = this.options;\n  i.raw && i.windowBits >= 0 && i.windowBits < 16 && (i.windowBits = -i.windowBits, i.windowBits === 0 && (i.windowBits = -15)), i.windowBits >= 0 && i.windowBits < 16 && !(e && e.windowBits) && (i.windowBits += 32), i.windowBits > 15 && i.windowBits < 48 && (i.windowBits & 15) === 0 && (i.windowBits |= 15), this.err = 0, this.msg = \"\", this.ended = !1, this.chunks = [], this.strm = new zstream$2(), this.strm.avail_out = 0;\n  let t = inflate_1$2$1.inflateInit2(\n    this.strm,\n    i.windowBits\n  );\n  if (t !== Z_OK$4)\n    throw new Error(messages$2[t]);\n  if (this.header = new gzheader$2(), inflate_1$2$1.inflateGetHeader(this.strm, this.header), i.dictionary && (typeof i.dictionary == \"string\" ? i.dictionary = strings$2.string2buf(i.dictionary) : toString$2.call(i.dictionary) === \"[object ArrayBuffer]\" && (i.dictionary = new Uint8Array(i.dictionary)), i.raw && (t = inflate_1$2$1.inflateSetDictionary(this.strm, i.dictionary), t !== Z_OK$4)))\n    throw new Error(messages$2[t]);\n}\nInflate$1$1.prototype.push = function(e, i) {\n  const t = this.strm, r = this.options.chunkSize, n = this.options.dictionary;\n  let a, s, o;\n  if (this.ended) return !1;\n  for (i === ~~i ? s = i : s = i === !0 ? Z_FINISH$4 : Z_NO_FLUSH$3, toString$2.call(e) === \"[object ArrayBuffer]\" ? t.input = new Uint8Array(e) : t.input = e, t.next_in = 0, t.avail_in = t.input.length; ; ) {\n    for (t.avail_out === 0 && (t.output = new Uint8Array(r), t.next_out = 0, t.avail_out = r), a = inflate_1$2$1.inflate(t, s), a === Z_NEED_DICT$2 && n && (a = inflate_1$2$1.inflateSetDictionary(t, n), a === Z_OK$4 ? a = inflate_1$2$1.inflate(t, s) : a === Z_DATA_ERROR$3 && (a = Z_NEED_DICT$2)); t.avail_in > 0 && a === Z_STREAM_END$4 && t.state.wrap > 0 && e[t.next_in] !== 0; )\n      inflate_1$2$1.inflateReset(t), a = inflate_1$2$1.inflate(t, s);\n    switch (a) {\n      case Z_STREAM_ERROR$3:\n      case Z_DATA_ERROR$3:\n      case Z_NEED_DICT$2:\n      case Z_MEM_ERROR$2:\n        return this.onEnd(a), this.ended = !0, !1;\n    }\n    if (o = t.avail_out, t.next_out && (t.avail_out === 0 || a === Z_STREAM_END$4))\n      if (this.options.to === \"string\") {\n        let h = strings$2.utf8border(t.output, t.next_out), l = t.next_out - h, f = strings$2.buf2string(t.output, h);\n        t.next_out = l, t.avail_out = r - l, l && t.output.set(t.output.subarray(h, h + l), 0), this.onData(f);\n      } else\n        this.onData(t.output.length === t.next_out ? t.output : t.output.subarray(0, t.next_out));\n    if (!(a === Z_OK$4 && o === 0)) {\n      if (a === Z_STREAM_END$4)\n        return a = inflate_1$2$1.inflateEnd(this.strm), this.onEnd(a), this.ended = !0, !0;\n      if (t.avail_in === 0) break;\n    }\n  }\n  return !0;\n};\nInflate$1$1.prototype.onData = function(e) {\n  this.chunks.push(e);\n};\nInflate$1$1.prototype.onEnd = function(e) {\n  e === Z_OK$4 && (this.options.to === \"string\" ? this.result = this.chunks.join(\"\") : this.result = common$2.flattenChunks(this.chunks)), this.chunks = [], this.err = e, this.msg = this.strm.msg;\n};\nfunction inflate$1$2(e, i) {\n  const t = new Inflate$1$1(i);\n  if (t.push(e), t.err) throw t.msg || messages$2[t.err];\n  return t.result;\n}\nvar Inflate_1$1 = Inflate$1$1, inflate_2$2 = inflate$1$2, inflate_1$1$1 = {\n  Inflate: Inflate_1$1,\n  inflate: inflate_2$2\n};\nconst { deflate: deflate$3 } = deflate_1$1, { Inflate, inflate: inflate$4 } = inflate_1$1$1;\nvar deflate_1 = deflate$3, Inflate_1 = Inflate, inflate_1$3 = inflate$4;\nconst crcTable$1 = [];\nfor (let e = 0; e < 256; e++) {\n  let i = e;\n  for (let t = 0; t < 8; t++)\n    i & 1 ? i = 3988292384 ^ i >>> 1 : i = i >>> 1;\n  crcTable$1[e] = i;\n}\nconst initialCrc = 4294967295;\nfunction updateCrc(e, i, t) {\n  let r = e;\n  for (let n = 0; n < t; n++)\n    r = crcTable$1[(r ^ i[n]) & 255] ^ r >>> 8;\n  return r;\n}\nfunction crc(e, i) {\n  return (updateCrc(initialCrc, e, i) ^ initialCrc) >>> 0;\n}\nfunction checkCrc(e, i, t) {\n  const r = e.readUint32(), n = crc(new Uint8Array(e.buffer, e.byteOffset + e.offset - i - 4, i), i);\n  if (n !== r)\n    throw new Error(`CRC mismatch for chunk ${t}. Expected ${r}, found ${n}`);\n}\nfunction writeCrc(e, i) {\n  e.writeUint32(crc(new Uint8Array(e.buffer, e.byteOffset + e.offset - i, i), i));\n}\nfunction unfilterNone(e, i, t) {\n  for (let r = 0; r < t; r++)\n    i[r] = e[r];\n}\nfunction unfilterSub(e, i, t, r) {\n  let n = 0;\n  for (; n < r; n++)\n    i[n] = e[n];\n  for (; n < t; n++)\n    i[n] = e[n] + i[n - r] & 255;\n}\nfunction unfilterUp(e, i, t, r) {\n  let n = 0;\n  if (t.length === 0)\n    for (; n < r; n++)\n      i[n] = e[n];\n  else\n    for (; n < r; n++)\n      i[n] = e[n] + t[n] & 255;\n}\nfunction unfilterAverage(e, i, t, r, n) {\n  let a = 0;\n  if (t.length === 0) {\n    for (; a < n; a++)\n      i[a] = e[a];\n    for (; a < r; a++)\n      i[a] = e[a] + (i[a - n] >> 1) & 255;\n  } else {\n    for (; a < n; a++)\n      i[a] = e[a] + (t[a] >> 1) & 255;\n    for (; a < r; a++)\n      i[a] = e[a] + (i[a - n] + t[a] >> 1) & 255;\n  }\n}\nfunction unfilterPaeth(e, i, t, r, n) {\n  let a = 0;\n  if (t.length === 0) {\n    for (; a < n; a++)\n      i[a] = e[a];\n    for (; a < r; a++)\n      i[a] = e[a] + i[a - n] & 255;\n  } else {\n    for (; a < n; a++)\n      i[a] = e[a] + t[a] & 255;\n    for (; a < r; a++)\n      i[a] = e[a] + paethPredictor(i[a - n], t[a], t[a - n]) & 255;\n  }\n}\nfunction paethPredictor(e, i, t) {\n  const r = e + i - t, n = Math.abs(r - e), a = Math.abs(r - i), s = Math.abs(r - t);\n  return n <= a && n <= s ? e : a <= s ? i : t;\n}\nconst uint16 = new Uint16Array([255]), uint8 = new Uint8Array(uint16.buffer), osIsLittleEndian = uint8[0] === 255, empty = new Uint8Array(0);\nfunction decodeInterlaceNull(e) {\n  const { data: i, width: t, height: r, channels: n, depth: a } = e, s = n * a / 8, o = t * s, h = new Uint8Array(r * o);\n  let l = empty, f = 0, b, w;\n  for (let g = 0; g < r; g++) {\n    switch (b = i.subarray(f + 1, f + 1 + o), w = h.subarray(g * o, (g + 1) * o), i[f]) {\n      case 0:\n        unfilterNone(b, w, o);\n        break;\n      case 1:\n        unfilterSub(b, w, o, s);\n        break;\n      case 2:\n        unfilterUp(b, w, l, o);\n        break;\n      case 3:\n        unfilterAverage(b, w, l, o, s);\n        break;\n      case 4:\n        unfilterPaeth(b, w, l, o, s);\n        break;\n      default:\n        throw new Error(`Unsupported filter: ${i[f]}`);\n    }\n    l = w, f += o + 1;\n  }\n  if (a === 16) {\n    const g = new Uint16Array(h.buffer);\n    if (osIsLittleEndian)\n      for (let E = 0; E < g.length; E++)\n        g[E] = swap16(g[E]);\n    return g;\n  } else\n    return h;\n}\nfunction swap16(e) {\n  return (e & 255) << 8 | e >> 8 & 255;\n}\nconst pngSignature = Uint8Array.of(137, 80, 78, 71, 13, 10, 26, 10);\nfunction writeSignature(e) {\n  e.writeBytes(pngSignature);\n}\nfunction checkSignature(e) {\n  if (!hasPngSignature(e.readBytes(pngSignature.length)))\n    throw new Error(\"wrong PNG signature\");\n}\nfunction hasPngSignature(e) {\n  if (e.length < pngSignature.length)\n    return !1;\n  for (let i = 0; i < pngSignature.length; i++)\n    if (e[i] !== pngSignature[i])\n      return !1;\n  return !0;\n}\nconst textChunkName = \"tEXt\", NULL = 0, latin1Decoder = new TextDecoder(\"latin1\");\nfunction validateKeyword(e) {\n  if (validateLatin1(e), e.length === 0 || e.length > 79)\n    throw new Error(\"keyword length must be between 1 and 79\");\n}\nconst latin1Regex = /^[\\u0000-\\u00FF]*$/;\nfunction validateLatin1(e) {\n  if (!latin1Regex.test(e))\n    throw new Error(\"invalid latin1 text\");\n}\nfunction decodetEXt(e, i, t) {\n  const r = readKeyword(i);\n  e[r] = readLatin1(i, t - r.length - 1);\n}\nfunction encodetEXt(e, i, t) {\n  validateKeyword(i), validateLatin1(t);\n  const r = i.length + 1 + t.length;\n  e.writeUint32(r), e.writeChars(textChunkName), e.writeChars(i), e.writeByte(NULL), e.writeChars(t), writeCrc(e, r + 4);\n}\nfunction readKeyword(e) {\n  for (e.mark(); e.readByte() !== NULL; )\n    ;\n  const i = e.offset;\n  e.reset();\n  const t = latin1Decoder.decode(e.readBytes(i - e.offset - 1));\n  return e.skip(1), validateKeyword(t), t;\n}\nfunction readLatin1(e, i) {\n  return latin1Decoder.decode(e.readBytes(i));\n}\nconst ColorType = {\n  UNKNOWN: -1,\n  GREYSCALE: 0,\n  TRUECOLOUR: 2,\n  INDEXED_COLOUR: 3,\n  GREYSCALE_ALPHA: 4,\n  TRUECOLOUR_ALPHA: 6\n}, CompressionMethod = {\n  UNKNOWN: -1,\n  DEFLATE: 0\n}, FilterMethod = {\n  UNKNOWN: -1,\n  ADAPTIVE: 0\n}, InterlaceMethod = {\n  UNKNOWN: -1,\n  NO_INTERLACE: 0\n};\nclass PngDecoder extends IOBuffer {\n  constructor(t, r = {}) {\n    super(t);\n    $e(this, \"_checkCrc\");\n    $e(this, \"_inflator\");\n    $e(this, \"_png\");\n    $e(this, \"_end\");\n    $e(this, \"_hasPalette\");\n    $e(this, \"_palette\");\n    $e(this, \"_hasTransparency\");\n    $e(this, \"_transparency\");\n    $e(this, \"_compressionMethod\");\n    $e(this, \"_filterMethod\");\n    $e(this, \"_interlaceMethod\");\n    $e(this, \"_colorType\");\n    const { checkCrc: n = !1 } = r;\n    this._checkCrc = n, this._inflator = new Inflate_1(), this._png = {\n      width: -1,\n      height: -1,\n      channels: -1,\n      data: new Uint8Array(0),\n      depth: 1,\n      text: {}\n    }, this._end = !1, this._hasPalette = !1, this._palette = [], this._hasTransparency = !1, this._transparency = new Uint16Array(0), this._compressionMethod = CompressionMethod.UNKNOWN, this._filterMethod = FilterMethod.UNKNOWN, this._interlaceMethod = InterlaceMethod.UNKNOWN, this._colorType = ColorType.UNKNOWN, this.setBigEndian();\n  }\n  decode() {\n    for (checkSignature(this); !this._end; )\n      this.decodeChunk();\n    return this.decodeImage(), this._png;\n  }\n  // https://www.w3.org/TR/PNG/#5Chunk-layout\n  decodeChunk() {\n    const t = this.readUint32(), r = this.readChars(4), n = this.offset;\n    switch (r) {\n      // 11.2 Critical chunks\n      case \"IHDR\":\n        this.decodeIHDR();\n        break;\n      case \"PLTE\":\n        this.decodePLTE(t);\n        break;\n      case \"IDAT\":\n        this.decodeIDAT(t);\n        break;\n      case \"IEND\":\n        this._end = !0;\n        break;\n      // 11.3 Ancillary chunks\n      case \"tRNS\":\n        this.decodetRNS(t);\n        break;\n      case \"iCCP\":\n        this.decodeiCCP(t);\n        break;\n      case textChunkName:\n        decodetEXt(this._png.text, this, t);\n        break;\n      case \"pHYs\":\n        this.decodepHYs();\n        break;\n      default:\n        this.skip(t);\n        break;\n    }\n    if (this.offset - n !== t)\n      throw new Error(`Length mismatch while decoding chunk ${r}`);\n    this._checkCrc ? checkCrc(this, t + 4, r) : this.skip(4);\n  }\n  // https://www.w3.org/TR/PNG/#11IHDR\n  decodeIHDR() {\n    const t = this._png;\n    t.width = this.readUint32(), t.height = this.readUint32(), t.depth = checkBitDepth(this.readUint8());\n    const r = this.readUint8();\n    this._colorType = r;\n    let n;\n    switch (r) {\n      case ColorType.GREYSCALE:\n        n = 1;\n        break;\n      case ColorType.TRUECOLOUR:\n        n = 3;\n        break;\n      case ColorType.INDEXED_COLOUR:\n        n = 1;\n        break;\n      case ColorType.GREYSCALE_ALPHA:\n        n = 2;\n        break;\n      case ColorType.TRUECOLOUR_ALPHA:\n        n = 4;\n        break;\n      // Kept for exhaustiveness.\n      // eslint-disable-next-line unicorn/no-useless-switch-case\n      case ColorType.UNKNOWN:\n      default:\n        throw new Error(`Unknown color type: ${r}`);\n    }\n    if (this._png.channels = n, this._compressionMethod = this.readUint8(), this._compressionMethod !== CompressionMethod.DEFLATE)\n      throw new Error(`Unsupported compression method: ${this._compressionMethod}`);\n    this._filterMethod = this.readUint8(), this._interlaceMethod = this.readUint8();\n  }\n  // https://www.w3.org/TR/PNG/#11PLTE\n  decodePLTE(t) {\n    if (t % 3 !== 0)\n      throw new RangeError(`PLTE field length must be a multiple of 3. Got ${t}`);\n    const r = t / 3;\n    this._hasPalette = !0;\n    const n = [];\n    this._palette = n;\n    for (let a = 0; a < r; a++)\n      n.push([this.readUint8(), this.readUint8(), this.readUint8()]);\n  }\n  // https://www.w3.org/TR/PNG/#11IDAT\n  decodeIDAT(t) {\n    this._inflator.push(new Uint8Array(this.buffer, this.offset + this.byteOffset, t)), this.skip(t);\n  }\n  // https://www.w3.org/TR/PNG/#11tRNS\n  decodetRNS(t) {\n    switch (this._colorType) {\n      case ColorType.GREYSCALE:\n      case ColorType.TRUECOLOUR: {\n        if (t % 2 !== 0)\n          throw new RangeError(`tRNS chunk length must be a multiple of 2. Got ${t}`);\n        if (t / 2 > this._png.width * this._png.height)\n          throw new Error(`tRNS chunk contains more alpha values than there are pixels (${t / 2} vs ${this._png.width * this._png.height})`);\n        this._hasTransparency = !0, this._transparency = new Uint16Array(t / 2);\n        for (let r = 0; r < t / 2; r++)\n          this._transparency[r] = this.readUint16();\n        break;\n      }\n      case ColorType.INDEXED_COLOUR: {\n        if (t > this._palette.length)\n          throw new Error(`tRNS chunk contains more alpha values than there are palette colors (${t} vs ${this._palette.length})`);\n        let r = 0;\n        for (; r < t; r++) {\n          const n = this.readByte();\n          this._palette[r].push(n);\n        }\n        for (; r < this._palette.length; r++)\n          this._palette[r].push(255);\n        break;\n      }\n      // Kept for exhaustiveness.\n      /* eslint-disable unicorn/no-useless-switch-case */\n      case ColorType.UNKNOWN:\n      case ColorType.GREYSCALE_ALPHA:\n      case ColorType.TRUECOLOUR_ALPHA:\n      default:\n        throw new Error(`tRNS chunk is not supported for color type ${this._colorType}`);\n    }\n  }\n  // https://www.w3.org/TR/PNG/#11iCCP\n  decodeiCCP(t) {\n    const r = readKeyword(this), n = this.readUint8();\n    if (n !== CompressionMethod.DEFLATE)\n      throw new Error(`Unsupported iCCP compression method: ${n}`);\n    const a = this.readBytes(t - r.length - 2);\n    this._png.iccEmbeddedProfile = {\n      name: r,\n      profile: inflate_1$3(a)\n    };\n  }\n  // https://www.w3.org/TR/PNG/#11pHYs\n  decodepHYs() {\n    const t = this.readUint32(), r = this.readUint32(), n = this.readByte();\n    this._png.resolution = { x: t, y: r, unit: n };\n  }\n  decodeImage() {\n    if (this._inflator.err)\n      throw new Error(`Error while decompressing the data: ${this._inflator.err}`);\n    const t = this._inflator.result;\n    if (this._filterMethod !== FilterMethod.ADAPTIVE)\n      throw new Error(`Filter method ${this._filterMethod} not supported`);\n    if (this._interlaceMethod === InterlaceMethod.NO_INTERLACE)\n      this._png.data = decodeInterlaceNull({\n        data: t,\n        width: this._png.width,\n        height: this._png.height,\n        channels: this._png.channels,\n        depth: this._png.depth\n      });\n    else\n      throw new Error(`Interlace method ${this._interlaceMethod} not supported`);\n    this._hasPalette && (this._png.palette = this._palette), this._hasTransparency && (this._png.transparency = this._transparency);\n  }\n}\nfunction checkBitDepth(e) {\n  if (e !== 1 && e !== 2 && e !== 4 && e !== 8 && e !== 16)\n    throw new Error(`invalid bit depth: ${e}`);\n  return e;\n}\nconst defaultZlibOptions = {\n  level: 3\n};\nclass PngEncoder extends IOBuffer {\n  constructor(t, r = {}) {\n    super();\n    $e(this, \"_png\");\n    $e(this, \"_zlibOptions\");\n    $e(this, \"_colorType\");\n    this._colorType = ColorType.UNKNOWN, this._zlibOptions = { ...defaultZlibOptions, ...r.zlib }, this._png = this._checkData(t), this.setBigEndian();\n  }\n  encode() {\n    if (writeSignature(this), this.encodeIHDR(), this.encodeData(), this._png.text)\n      for (const [t, r] of Object.entries(this._png.text))\n        encodetEXt(this, t, r);\n    return this.encodeIEND(), this.toArray();\n  }\n  // https://www.w3.org/TR/PNG/#11IHDR\n  encodeIHDR() {\n    this.writeUint32(13), this.writeChars(\"IHDR\"), this.writeUint32(this._png.width), this.writeUint32(this._png.height), this.writeByte(this._png.depth), this.writeByte(this._colorType), this.writeByte(CompressionMethod.DEFLATE), this.writeByte(FilterMethod.ADAPTIVE), this.writeByte(InterlaceMethod.NO_INTERLACE), writeCrc(this, 17);\n  }\n  // https://www.w3.org/TR/PNG/#11IEND\n  encodeIEND() {\n    this.writeUint32(0), this.writeChars(\"IEND\"), writeCrc(this, 4);\n  }\n  // https://www.w3.org/TR/PNG/#11IDAT\n  encodeIDAT(t) {\n    this.writeUint32(t.length), this.writeChars(\"IDAT\"), this.writeBytes(t), writeCrc(this, t.length + 4);\n  }\n  encodeData() {\n    const { width: t, height: r, channels: n, depth: a, data: s } = this._png, o = n * t, h = new IOBuffer().setBigEndian();\n    let l = 0;\n    for (let w = 0; w < r; w++)\n      if (h.writeByte(0), a === 8)\n        l = writeDataBytes(s, h, o, l);\n      else if (a === 16)\n        l = writeDataUint16(s, h, o, l);\n      else\n        throw new Error(\"unreachable\");\n    const f = h.toArray(), b = deflate_1(f, this._zlibOptions);\n    this.encodeIDAT(b);\n  }\n  _checkData(t) {\n    const { colorType: r, channels: n, depth: a } = getColorType(t), s = {\n      width: checkInteger(t.width, \"width\"),\n      height: checkInteger(t.height, \"height\"),\n      channels: n,\n      data: t.data,\n      depth: a,\n      text: t.text\n    };\n    this._colorType = r;\n    const o = s.width * s.height * n;\n    if (s.data.length !== o)\n      throw new RangeError(`wrong data size. Found ${s.data.length}, expected ${o}`);\n    return s;\n  }\n}\nfunction checkInteger(e, i) {\n  if (Number.isInteger(e) && e > 0)\n    return e;\n  throw new TypeError(`${i} must be a positive integer`);\n}\nfunction getColorType(e) {\n  const { channels: i = 4, depth: t = 8 } = e;\n  if (i !== 4 && i !== 3 && i !== 2 && i !== 1)\n    throw new RangeError(`unsupported number of channels: ${i}`);\n  if (t !== 8 && t !== 16)\n    throw new RangeError(`unsupported bit depth: ${t}`);\n  const r = {\n    channels: i,\n    depth: t,\n    colorType: ColorType.UNKNOWN\n  };\n  switch (i) {\n    case 4:\n      r.colorType = ColorType.TRUECOLOUR_ALPHA;\n      break;\n    case 3:\n      r.colorType = ColorType.TRUECOLOUR;\n      break;\n    case 1:\n      r.colorType = ColorType.GREYSCALE;\n      break;\n    case 2:\n      r.colorType = ColorType.GREYSCALE_ALPHA;\n      break;\n    default:\n      throw new Error(\"unsupported number of channels\");\n  }\n  return r;\n}\nfunction writeDataBytes(e, i, t, r) {\n  for (let n = 0; n < t; n++)\n    i.writeByte(e[r++]);\n  return r;\n}\nfunction writeDataUint16(e, i, t, r) {\n  for (let n = 0; n < t; n++)\n    i.writeUint16(e[r++]);\n  return r;\n}\nvar ResolutionUnitSpecifier;\n(function(e) {\n  e[e.UNKNOWN = 0] = \"UNKNOWN\", e[e.METRE = 1] = \"METRE\";\n})(ResolutionUnitSpecifier || (ResolutionUnitSpecifier = {}));\nfunction decodePng(e, i) {\n  return new PngDecoder(e, i).decode();\n}\nfunction encodePng$1(e, i) {\n  return new PngEncoder(e, i).encode();\n}\nvar encoder = { exports: {} }, hasRequiredEncoder;\nfunction requireEncoder() {\n  return hasRequiredEncoder || (hasRequiredEncoder = 1, function(e) {\n    function i(r) {\n      var n = Math.floor, a = new Array(64), s = new Array(64), o = new Array(64), h = new Array(64), l, f, b, w, g = new Array(65535), E = new Array(65535), k = new Array(64), A = new Array(64), T = [], C = 0, D = 7, $ = new Array(64), P = new Array(64), z = new Array(64), B = new Array(256), F = new Array(2048), O, N = [\n        0,\n        1,\n        5,\n        6,\n        14,\n        15,\n        27,\n        28,\n        2,\n        4,\n        7,\n        13,\n        16,\n        26,\n        29,\n        42,\n        3,\n        8,\n        12,\n        17,\n        25,\n        30,\n        41,\n        43,\n        9,\n        11,\n        18,\n        24,\n        31,\n        40,\n        44,\n        53,\n        10,\n        19,\n        23,\n        32,\n        39,\n        45,\n        52,\n        54,\n        20,\n        22,\n        33,\n        38,\n        46,\n        51,\n        55,\n        60,\n        21,\n        34,\n        37,\n        47,\n        50,\n        56,\n        59,\n        61,\n        35,\n        36,\n        48,\n        49,\n        57,\n        58,\n        62,\n        63\n      ], G = [0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], V = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], J = [0, 0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 125], Q = [\n        1,\n        2,\n        3,\n        0,\n        4,\n        17,\n        5,\n        18,\n        33,\n        49,\n        65,\n        6,\n        19,\n        81,\n        97,\n        7,\n        34,\n        113,\n        20,\n        50,\n        129,\n        145,\n        161,\n        8,\n        35,\n        66,\n        177,\n        193,\n        21,\n        82,\n        209,\n        240,\n        36,\n        51,\n        98,\n        114,\n        130,\n        9,\n        10,\n        22,\n        23,\n        24,\n        25,\n        26,\n        37,\n        38,\n        39,\n        40,\n        41,\n        42,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57,\n        58,\n        67,\n        68,\n        69,\n        70,\n        71,\n        72,\n        73,\n        74,\n        83,\n        84,\n        85,\n        86,\n        87,\n        88,\n        89,\n        90,\n        99,\n        100,\n        101,\n        102,\n        103,\n        104,\n        105,\n        106,\n        115,\n        116,\n        117,\n        118,\n        119,\n        120,\n        121,\n        122,\n        131,\n        132,\n        133,\n        134,\n        135,\n        136,\n        137,\n        138,\n        146,\n        147,\n        148,\n        149,\n        150,\n        151,\n        152,\n        153,\n        154,\n        162,\n        163,\n        164,\n        165,\n        166,\n        167,\n        168,\n        169,\n        170,\n        178,\n        179,\n        180,\n        181,\n        182,\n        183,\n        184,\n        185,\n        186,\n        194,\n        195,\n        196,\n        197,\n        198,\n        199,\n        200,\n        201,\n        202,\n        210,\n        211,\n        212,\n        213,\n        214,\n        215,\n        216,\n        217,\n        218,\n        225,\n        226,\n        227,\n        228,\n        229,\n        230,\n        231,\n        232,\n        233,\n        234,\n        241,\n        242,\n        243,\n        244,\n        245,\n        246,\n        247,\n        248,\n        249,\n        250\n      ], W = [0, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], ne = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], pe = [0, 0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 119], be = [\n        0,\n        1,\n        2,\n        3,\n        17,\n        4,\n        5,\n        33,\n        49,\n        6,\n        18,\n        65,\n        81,\n        7,\n        97,\n        113,\n        19,\n        34,\n        50,\n        129,\n        8,\n        20,\n        66,\n        145,\n        161,\n        177,\n        193,\n        9,\n        35,\n        51,\n        82,\n        240,\n        21,\n        98,\n        114,\n        209,\n        10,\n        22,\n        36,\n        52,\n        225,\n        37,\n        241,\n        23,\n        24,\n        25,\n        26,\n        38,\n        39,\n        40,\n        41,\n        42,\n        53,\n        54,\n        55,\n        56,\n        57,\n        58,\n        67,\n        68,\n        69,\n        70,\n        71,\n        72,\n        73,\n        74,\n        83,\n        84,\n        85,\n        86,\n        87,\n        88,\n        89,\n        90,\n        99,\n        100,\n        101,\n        102,\n        103,\n        104,\n        105,\n        106,\n        115,\n        116,\n        117,\n        118,\n        119,\n        120,\n        121,\n        122,\n        130,\n        131,\n        132,\n        133,\n        134,\n        135,\n        136,\n        137,\n        138,\n        146,\n        147,\n        148,\n        149,\n        150,\n        151,\n        152,\n        153,\n        154,\n        162,\n        163,\n        164,\n        165,\n        166,\n        167,\n        168,\n        169,\n        170,\n        178,\n        179,\n        180,\n        181,\n        182,\n        183,\n        184,\n        185,\n        186,\n        194,\n        195,\n        196,\n        197,\n        198,\n        199,\n        200,\n        201,\n        202,\n        210,\n        211,\n        212,\n        213,\n        214,\n        215,\n        216,\n        217,\n        218,\n        226,\n        227,\n        228,\n        229,\n        230,\n        231,\n        232,\n        233,\n        234,\n        242,\n        243,\n        244,\n        245,\n        246,\n        247,\n        248,\n        249,\n        250\n      ];\n      function ve(he) {\n        for (var Qe = [\n          16,\n          11,\n          10,\n          16,\n          24,\n          40,\n          51,\n          61,\n          12,\n          12,\n          14,\n          19,\n          26,\n          58,\n          60,\n          55,\n          14,\n          13,\n          16,\n          24,\n          40,\n          57,\n          69,\n          56,\n          14,\n          17,\n          22,\n          29,\n          51,\n          87,\n          80,\n          62,\n          18,\n          22,\n          37,\n          56,\n          68,\n          109,\n          103,\n          77,\n          24,\n          35,\n          55,\n          64,\n          81,\n          104,\n          113,\n          92,\n          49,\n          64,\n          78,\n          87,\n          103,\n          121,\n          120,\n          101,\n          72,\n          92,\n          95,\n          98,\n          112,\n          100,\n          103,\n          99\n        ], Ze = 0; Ze < 64; Ze++) {\n          var He = n((Qe[Ze] * he + 50) / 100);\n          He < 1 ? He = 1 : He > 255 && (He = 255), a[N[Ze]] = He;\n        }\n        for (var De = [\n          17,\n          18,\n          24,\n          47,\n          99,\n          99,\n          99,\n          99,\n          18,\n          21,\n          26,\n          66,\n          99,\n          99,\n          99,\n          99,\n          24,\n          26,\n          56,\n          99,\n          99,\n          99,\n          99,\n          99,\n          47,\n          66,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99,\n          99\n        ], lt = 0; lt < 64; lt++) {\n          var ot = n((De[lt] * he + 50) / 100);\n          ot < 1 ? ot = 1 : ot > 255 && (ot = 255), s[N[lt]] = ot;\n        }\n        for (var Le = [\n          1,\n          1.387039845,\n          1.306562965,\n          1.175875602,\n          1,\n          0.785694958,\n          0.5411961,\n          0.275899379\n        ], ze = 0, je = 0; je < 8; je++)\n          for (var Oe = 0; Oe < 8; Oe++)\n            o[ze] = 1 / (a[N[ze]] * Le[je] * Le[Oe] * 8), h[ze] = 1 / (s[N[ze]] * Le[je] * Le[Oe] * 8), ze++;\n      }\n      function Ee(he, Qe) {\n        for (var Ze = 0, He = 0, De = new Array(), lt = 1; lt <= 16; lt++) {\n          for (var ot = 1; ot <= he[lt]; ot++)\n            De[Qe[He]] = [], De[Qe[He]][0] = Ze, De[Qe[He]][1] = lt, He++, Ze++;\n          Ze *= 2;\n        }\n        return De;\n      }\n      function Ae() {\n        l = Ee(G, V), f = Ee(W, ne), b = Ee(J, Q), w = Ee(pe, be);\n      }\n      function _e() {\n        for (var he = 1, Qe = 2, Ze = 1; Ze <= 15; Ze++) {\n          for (var He = he; He < Qe; He++)\n            E[32767 + He] = Ze, g[32767 + He] = [], g[32767 + He][1] = Ze, g[32767 + He][0] = He;\n          for (var De = -(Qe - 1); De <= -he; De++)\n            E[32767 + De] = Ze, g[32767 + De] = [], g[32767 + De][1] = Ze, g[32767 + De][0] = Qe - 1 + De;\n          he <<= 1, Qe <<= 1;\n        }\n      }\n      function Be() {\n        for (var he = 0; he < 256; he++)\n          F[he] = 19595 * he, F[he + 256 >> 0] = 38470 * he, F[he + 512 >> 0] = 7471 * he + 32768, F[he + 768 >> 0] = -11059 * he, F[he + 1024 >> 0] = -21709 * he, F[he + 1280 >> 0] = 32768 * he + 8421375, F[he + 1536 >> 0] = -27439 * he, F[he + 1792 >> 0] = -5329 * he;\n      }\n      function Me(he) {\n        for (var Qe = he[0], Ze = he[1] - 1; Ze >= 0; )\n          Qe & 1 << Ze && (C |= 1 << D), Ze--, D--, D < 0 && (C == 255 ? (re(255), re(0)) : re(C), D = 7, C = 0);\n      }\n      function re(he) {\n        T.push(he);\n      }\n      function Te(he) {\n        re(he >> 8 & 255), re(he & 255);\n      }\n      function Fe(he, Qe) {\n        var Ze, He, De, lt, ot, Le, ze, je, Oe = 0, st, Z = 8, ue = 64;\n        for (st = 0; st < Z; ++st) {\n          Ze = he[Oe], He = he[Oe + 1], De = he[Oe + 2], lt = he[Oe + 3], ot = he[Oe + 4], Le = he[Oe + 5], ze = he[Oe + 6], je = he[Oe + 7];\n          var xe = Ze + je, ke = Ze - je, te = He + ze, me = He - ze, U = De + Le, ye = De - Le, it = lt + ot, I = lt - ot, fe = xe + it, de = xe - it, H = te + U, ee = te - U;\n          he[Oe] = fe + H, he[Oe + 4] = fe - H;\n          var oe = (ee + de) * 0.707106781;\n          he[Oe + 2] = de + oe, he[Oe + 6] = de - oe, fe = I + ye, H = ye + me, ee = me + ke;\n          var We = (fe - ee) * 0.382683433, M = 0.5411961 * fe + We, _ = 1.306562965 * ee + We, d = H * 0.707106781, u = ke + d, v = ke - d;\n          he[Oe + 5] = v + M, he[Oe + 3] = v - M, he[Oe + 1] = u + _, he[Oe + 7] = u - _, Oe += 8;\n        }\n        for (Oe = 0, st = 0; st < Z; ++st) {\n          Ze = he[Oe], He = he[Oe + 8], De = he[Oe + 16], lt = he[Oe + 24], ot = he[Oe + 32], Le = he[Oe + 40], ze = he[Oe + 48], je = he[Oe + 56];\n          var S = Ze + je, L = Ze - je, q = He + ze, X = He - ze, j = De + Le, ae = De - Le, K = lt + ot, ce = lt - ot, we = S + K, le = S - K, ge = q + j, Ue = q - j;\n          he[Oe] = we + ge, he[Oe + 32] = we - ge;\n          var ie = (Ue + le) * 0.707106781;\n          he[Oe + 16] = le + ie, he[Oe + 48] = le - ie, we = ce + ae, ge = ae + X, Ue = X + L;\n          var Ce = (we - Ue) * 0.382683433, Xe = 0.5411961 * we + Ce, ht = 1.306562965 * Ue + Ce, ft = ge * 0.707106781, dt = L + ft, rt = L - ft;\n          he[Oe + 40] = rt + Xe, he[Oe + 24] = rt - Xe, he[Oe + 8] = dt + ht, he[Oe + 56] = dt - ht, Oe++;\n        }\n        var at;\n        for (st = 0; st < ue; ++st)\n          at = he[st] * Qe[st], k[st] = at > 0 ? at + 0.5 | 0 : at - 0.5 | 0;\n        return k;\n      }\n      function Se() {\n        Te(65504), Te(16), re(74), re(70), re(73), re(70), re(0), re(1), re(1), re(0), Te(1), Te(1), re(0), re(0);\n      }\n      function Ye(he) {\n        if (he) {\n          Te(65505), he[0] === 69 && he[1] === 120 && he[2] === 105 && he[3] === 102 ? Te(he.length + 2) : (Te(he.length + 5 + 2), re(69), re(120), re(105), re(102), re(0));\n          for (var Qe = 0; Qe < he.length; Qe++)\n            re(he[Qe]);\n        }\n      }\n      function Je(he, Qe) {\n        Te(65472), Te(17), re(8), Te(Qe), Te(he), re(3), re(1), re(17), re(0), re(2), re(17), re(1), re(3), re(17), re(1);\n      }\n      function et() {\n        Te(65499), Te(132), re(0);\n        for (var he = 0; he < 64; he++)\n          re(a[he]);\n        re(1);\n        for (var Qe = 0; Qe < 64; Qe++)\n          re(s[Qe]);\n      }\n      function Ve() {\n        Te(65476), Te(418), re(0);\n        for (var he = 0; he < 16; he++)\n          re(G[he + 1]);\n        for (var Qe = 0; Qe <= 11; Qe++)\n          re(V[Qe]);\n        re(16);\n        for (var Ze = 0; Ze < 16; Ze++)\n          re(J[Ze + 1]);\n        for (var He = 0; He <= 161; He++)\n          re(Q[He]);\n        re(1);\n        for (var De = 0; De < 16; De++)\n          re(W[De + 1]);\n        for (var lt = 0; lt <= 11; lt++)\n          re(ne[lt]);\n        re(17);\n        for (var ot = 0; ot < 16; ot++)\n          re(pe[ot + 1]);\n        for (var Le = 0; Le <= 161; Le++)\n          re(be[Le]);\n      }\n      function tt(he) {\n        typeof he > \"u\" || he.constructor !== Array || he.forEach((Qe) => {\n          if (typeof Qe == \"string\") {\n            Te(65534);\n            var Ze = Qe.length;\n            Te(Ze + 2);\n            var He;\n            for (He = 0; He < Ze; He++)\n              re(Qe.charCodeAt(He));\n          }\n        });\n      }\n      function qe() {\n        Te(65498), Te(12), re(3), re(1), re(0), re(2), re(17), re(3), re(17), re(0), re(63), re(0);\n      }\n      function Re(he, Qe, Ze, He, De) {\n        for (var lt = De[0], ot = De[240], Le, ze = 16, je = 63, Oe = 64, st = Fe(he, Qe), Z = 0; Z < Oe; ++Z)\n          A[N[Z]] = st[Z];\n        var ue = A[0] - Ze;\n        Ze = A[0], ue == 0 ? Me(He[0]) : (Le = 32767 + ue, Me(He[E[Le]]), Me(g[Le]));\n        for (var xe = 63; xe > 0 && A[xe] == 0; xe--)\n          ;\n        if (xe == 0)\n          return Me(lt), Ze;\n        for (var ke = 1, te; ke <= xe; ) {\n          for (var me = ke; A[ke] == 0 && ke <= xe; ++ke)\n            ;\n          var U = ke - me;\n          if (U >= ze) {\n            te = U >> 4;\n            for (var ye = 1; ye <= te; ++ye)\n              Me(ot);\n            U = U & 15;\n          }\n          Le = 32767 + A[ke], Me(De[(U << 4) + E[Le]]), Me(g[Le]), ke++;\n        }\n        return xe != je && Me(lt), Ze;\n      }\n      function nt() {\n        for (var he = String.fromCharCode, Qe = 0; Qe < 256; Qe++)\n          B[Qe] = he(Qe);\n      }\n      this.encode = function(he, Qe) {\n        (/* @__PURE__ */ new Date()).getTime(), Qe && Ge(Qe), T = new Array(), C = 0, D = 7, Te(65496), Se(), tt(he.comments), Ye(he.exifBuffer), et(), Je(he.width, he.height), Ve(), qe();\n        var Ze = 0, He = 0, De = 0;\n        C = 0, D = 7, this.encode.displayName = \"_encode_\";\n        for (var lt = he.data, ot = he.width, Le = he.height, ze = ot * 4, je, Oe = 0, st, Z, ue, xe, ke, te, me, U; Oe < Le; ) {\n          for (je = 0; je < ze; ) {\n            for (xe = ze * Oe + je, ke = xe, te = -1, me = 0, U = 0; U < 64; U++)\n              me = U >> 3, te = (U & 7) * 4, ke = xe + me * ze + te, Oe + me >= Le && (ke -= ze * (Oe + 1 + me - Le)), je + te >= ze && (ke -= je + te - ze + 4), st = lt[ke++], Z = lt[ke++], ue = lt[ke++], $[U] = (F[st] + F[Z + 256 >> 0] + F[ue + 512 >> 0] >> 16) - 128, P[U] = (F[st + 768 >> 0] + F[Z + 1024 >> 0] + F[ue + 1280 >> 0] >> 16) - 128, z[U] = (F[st + 1280 >> 0] + F[Z + 1536 >> 0] + F[ue + 1792 >> 0] >> 16) - 128;\n            Ze = Re($, o, Ze, l, b), He = Re(P, h, He, f, w), De = Re(z, h, De, f, w), je += 32;\n          }\n          Oe += 8;\n        }\n        if (D >= 0) {\n          var ye = [];\n          ye[1] = D + 1, ye[0] = (1 << D + 1) - 1, Me(ye);\n        }\n        return Te(65497), Buffer.from(T);\n      };\n      function Ge(he) {\n        if (he <= 0 && (he = 1), he > 100 && (he = 100), O != he) {\n          var Qe = 0;\n          he < 50 ? Qe = Math.floor(5e3 / he) : Qe = Math.floor(200 - he * 2), ve(Qe), O = he;\n        }\n      }\n      function Ne() {\n        var he = (/* @__PURE__ */ new Date()).getTime();\n        r || (r = 50), nt(), Ae(), _e(), Be(), Ge(r), (/* @__PURE__ */ new Date()).getTime() - he;\n      }\n      Ne();\n    }\n    e.exports = t;\n    function t(r, n) {\n      typeof n > \"u\" && (n = 50);\n      var a = new i(n), s = a.encode(r, n);\n      return {\n        data: s,\n        width: r.width,\n        height: r.height\n      };\n    }\n  }(encoder)), encoder.exports;\n}\nvar decoder = { exports: {} }, hasRequiredDecoder;\nfunction requireDecoder() {\n  return hasRequiredDecoder || (hasRequiredDecoder = 1, function(e) {\n    var i = function() {\n      var n = new Int32Array([\n        0,\n        1,\n        8,\n        16,\n        9,\n        2,\n        3,\n        10,\n        17,\n        24,\n        32,\n        25,\n        18,\n        11,\n        4,\n        5,\n        12,\n        19,\n        26,\n        33,\n        40,\n        48,\n        41,\n        34,\n        27,\n        20,\n        13,\n        6,\n        7,\n        14,\n        21,\n        28,\n        35,\n        42,\n        49,\n        56,\n        57,\n        50,\n        43,\n        36,\n        29,\n        22,\n        15,\n        23,\n        30,\n        37,\n        44,\n        51,\n        58,\n        59,\n        52,\n        45,\n        38,\n        31,\n        39,\n        46,\n        53,\n        60,\n        61,\n        54,\n        47,\n        55,\n        62,\n        63\n      ]), a = 4017, s = 799, o = 3406, h = 2276, l = 1567, f = 3784, b = 5793, w = 2896;\n      function g() {\n      }\n      function E(P, z) {\n        for (var B = 0, F = [], O, N, G = 16; G > 0 && !P[G - 1]; )\n          G--;\n        F.push({ children: [], index: 0 });\n        var V = F[0], J;\n        for (O = 0; O < G; O++) {\n          for (N = 0; N < P[O]; N++) {\n            for (V = F.pop(), V.children[V.index] = z[B]; V.index > 0; ) {\n              if (F.length === 0)\n                throw new Error(\"Could not recreate Huffman Table\");\n              V = F.pop();\n            }\n            for (V.index++, F.push(V); F.length <= O; )\n              F.push(J = { children: [], index: 0 }), V.children[V.index] = J.children, V = J;\n            B++;\n          }\n          O + 1 < G && (F.push(J = { children: [], index: 0 }), V.children[V.index] = J.children, V = J);\n        }\n        return F[0].children;\n      }\n      function k(P, z, B, F, O, N, G, V, J, Q) {\n        B.precision, B.samplesPerLine, B.scanLines;\n        var W = B.mcusPerLine, ne = B.progressive;\n        B.maxH, B.maxV;\n        var pe = z, be = 0, ve = 0;\n        function Ee() {\n          if (ve > 0)\n            return ve--, be >> ve & 1;\n          if (be = P[z++], be == 255) {\n            var Le = P[z++];\n            if (Le)\n              throw new Error(\"unexpected marker: \" + (be << 8 | Le).toString(16));\n          }\n          return ve = 7, be >>> 7;\n        }\n        function Ae(Le) {\n          for (var ze = Le, je; (je = Ee()) !== null; ) {\n            if (ze = ze[je], typeof ze == \"number\")\n              return ze;\n            if (typeof ze != \"object\")\n              throw new Error(\"invalid huffman sequence\");\n          }\n          return null;\n        }\n        function _e(Le) {\n          for (var ze = 0; Le > 0; ) {\n            var je = Ee();\n            if (je === null) return;\n            ze = ze << 1 | je, Le--;\n          }\n          return ze;\n        }\n        function Be(Le) {\n          var ze = _e(Le);\n          return ze >= 1 << Le - 1 ? ze : ze + (-1 << Le) + 1;\n        }\n        function Me(Le, ze) {\n          var je = Ae(Le.huffmanTableDC), Oe = je === 0 ? 0 : Be(je);\n          ze[0] = Le.pred += Oe;\n          for (var st = 1; st < 64; ) {\n            var Z = Ae(Le.huffmanTableAC), ue = Z & 15, xe = Z >> 4;\n            if (ue === 0) {\n              if (xe < 15)\n                break;\n              st += 16;\n              continue;\n            }\n            st += xe;\n            var ke = n[st];\n            ze[ke] = Be(ue), st++;\n          }\n        }\n        function re(Le, ze) {\n          var je = Ae(Le.huffmanTableDC), Oe = je === 0 ? 0 : Be(je) << J;\n          ze[0] = Le.pred += Oe;\n        }\n        function Te(Le, ze) {\n          ze[0] |= Ee() << J;\n        }\n        var Fe = 0;\n        function Se(Le, ze) {\n          if (Fe > 0) {\n            Fe--;\n            return;\n          }\n          for (var je = N, Oe = G; je <= Oe; ) {\n            var st = Ae(Le.huffmanTableAC), Z = st & 15, ue = st >> 4;\n            if (Z === 0) {\n              if (ue < 15) {\n                Fe = _e(ue) + (1 << ue) - 1;\n                break;\n              }\n              je += 16;\n              continue;\n            }\n            je += ue;\n            var xe = n[je];\n            ze[xe] = Be(Z) * (1 << J), je++;\n          }\n        }\n        var Ye = 0, Je;\n        function et(Le, ze) {\n          for (var je = N, Oe = G, st = 0; je <= Oe; ) {\n            var Z = n[je], ue = ze[Z] < 0 ? -1 : 1;\n            switch (Ye) {\n              case 0:\n                var xe = Ae(Le.huffmanTableAC), ke = xe & 15, st = xe >> 4;\n                if (ke === 0)\n                  st < 15 ? (Fe = _e(st) + (1 << st), Ye = 4) : (st = 16, Ye = 1);\n                else {\n                  if (ke !== 1)\n                    throw new Error(\"invalid ACn encoding\");\n                  Je = Be(ke), Ye = st ? 2 : 3;\n                }\n                continue;\n              case 1:\n              // skipping r zero items\n              case 2:\n                ze[Z] ? ze[Z] += (Ee() << J) * ue : (st--, st === 0 && (Ye = Ye == 2 ? 3 : 0));\n                break;\n              case 3:\n                ze[Z] ? ze[Z] += (Ee() << J) * ue : (ze[Z] = Je << J, Ye = 0);\n                break;\n              case 4:\n                ze[Z] && (ze[Z] += (Ee() << J) * ue);\n                break;\n            }\n            je++;\n          }\n          Ye === 4 && (Fe--, Fe === 0 && (Ye = 0));\n        }\n        function Ve(Le, ze, je, Oe, st) {\n          var Z = je / W | 0, ue = je % W, xe = Z * Le.v + Oe, ke = ue * Le.h + st;\n          Le.blocks[xe] === void 0 && Q.tolerantDecoding || ze(Le, Le.blocks[xe][ke]);\n        }\n        function tt(Le, ze, je) {\n          var Oe = je / Le.blocksPerLine | 0, st = je % Le.blocksPerLine;\n          Le.blocks[Oe] === void 0 && Q.tolerantDecoding || ze(Le, Le.blocks[Oe][st]);\n        }\n        var qe = F.length, Re, nt, Ge, Ne, he, Qe;\n        ne ? N === 0 ? Qe = V === 0 ? re : Te : Qe = V === 0 ? Se : et : Qe = Me;\n        var Ze = 0, He, De;\n        qe == 1 ? De = F[0].blocksPerLine * F[0].blocksPerColumn : De = W * B.mcusPerColumn, O || (O = De);\n        for (var lt, ot; Ze < De; ) {\n          for (nt = 0; nt < qe; nt++)\n            F[nt].pred = 0;\n          if (Fe = 0, qe == 1)\n            for (Re = F[0], he = 0; he < O; he++)\n              tt(Re, Qe, Ze), Ze++;\n          else\n            for (he = 0; he < O; he++) {\n              for (nt = 0; nt < qe; nt++)\n                for (Re = F[nt], lt = Re.h, ot = Re.v, Ge = 0; Ge < ot; Ge++)\n                  for (Ne = 0; Ne < lt; Ne++)\n                    Ve(Re, Qe, Ze, Ge, Ne);\n              if (Ze++, Ze === De) break;\n            }\n          if (Ze === De)\n            do {\n              if (P[z] === 255 && P[z + 1] !== 0)\n                break;\n              z += 1;\n            } while (z < P.length - 2);\n          if (ve = 0, He = P[z] << 8 | P[z + 1], He < 65280)\n            throw new Error(\"marker was not found\");\n          if (He >= 65488 && He <= 65495)\n            z += 2;\n          else\n            break;\n        }\n        return z - pe;\n      }\n      function A(P, z) {\n        var B = [], F = z.blocksPerLine, O = z.blocksPerColumn, N = F << 3, G = new Int32Array(64), V = new Uint8Array(64);\n        function J(_e, Be, Me) {\n          var re = z.quantizationTable, Te, Fe, Se, Ye, Je, et, Ve, tt, qe, Re = Me, nt;\n          for (nt = 0; nt < 64; nt++)\n            Re[nt] = _e[nt] * re[nt];\n          for (nt = 0; nt < 8; ++nt) {\n            var Ge = 8 * nt;\n            if (Re[1 + Ge] == 0 && Re[2 + Ge] == 0 && Re[3 + Ge] == 0 && Re[4 + Ge] == 0 && Re[5 + Ge] == 0 && Re[6 + Ge] == 0 && Re[7 + Ge] == 0) {\n              qe = b * Re[0 + Ge] + 512 >> 10, Re[0 + Ge] = qe, Re[1 + Ge] = qe, Re[2 + Ge] = qe, Re[3 + Ge] = qe, Re[4 + Ge] = qe, Re[5 + Ge] = qe, Re[6 + Ge] = qe, Re[7 + Ge] = qe;\n              continue;\n            }\n            Te = b * Re[0 + Ge] + 128 >> 8, Fe = b * Re[4 + Ge] + 128 >> 8, Se = Re[2 + Ge], Ye = Re[6 + Ge], Je = w * (Re[1 + Ge] - Re[7 + Ge]) + 128 >> 8, tt = w * (Re[1 + Ge] + Re[7 + Ge]) + 128 >> 8, et = Re[3 + Ge] << 4, Ve = Re[5 + Ge] << 4, qe = Te - Fe + 1 >> 1, Te = Te + Fe + 1 >> 1, Fe = qe, qe = Se * f + Ye * l + 128 >> 8, Se = Se * l - Ye * f + 128 >> 8, Ye = qe, qe = Je - Ve + 1 >> 1, Je = Je + Ve + 1 >> 1, Ve = qe, qe = tt + et + 1 >> 1, et = tt - et + 1 >> 1, tt = qe, qe = Te - Ye + 1 >> 1, Te = Te + Ye + 1 >> 1, Ye = qe, qe = Fe - Se + 1 >> 1, Fe = Fe + Se + 1 >> 1, Se = qe, qe = Je * h + tt * o + 2048 >> 12, Je = Je * o - tt * h + 2048 >> 12, tt = qe, qe = et * s + Ve * a + 2048 >> 12, et = et * a - Ve * s + 2048 >> 12, Ve = qe, Re[0 + Ge] = Te + tt, Re[7 + Ge] = Te - tt, Re[1 + Ge] = Fe + Ve, Re[6 + Ge] = Fe - Ve, Re[2 + Ge] = Se + et, Re[5 + Ge] = Se - et, Re[3 + Ge] = Ye + Je, Re[4 + Ge] = Ye - Je;\n          }\n          for (nt = 0; nt < 8; ++nt) {\n            var Ne = nt;\n            if (Re[8 + Ne] == 0 && Re[16 + Ne] == 0 && Re[24 + Ne] == 0 && Re[32 + Ne] == 0 && Re[40 + Ne] == 0 && Re[48 + Ne] == 0 && Re[56 + Ne] == 0) {\n              qe = b * Me[nt + 0] + 8192 >> 14, Re[0 + Ne] = qe, Re[8 + Ne] = qe, Re[16 + Ne] = qe, Re[24 + Ne] = qe, Re[32 + Ne] = qe, Re[40 + Ne] = qe, Re[48 + Ne] = qe, Re[56 + Ne] = qe;\n              continue;\n            }\n            Te = b * Re[0 + Ne] + 2048 >> 12, Fe = b * Re[32 + Ne] + 2048 >> 12, Se = Re[16 + Ne], Ye = Re[48 + Ne], Je = w * (Re[8 + Ne] - Re[56 + Ne]) + 2048 >> 12, tt = w * (Re[8 + Ne] + Re[56 + Ne]) + 2048 >> 12, et = Re[24 + Ne], Ve = Re[40 + Ne], qe = Te - Fe + 1 >> 1, Te = Te + Fe + 1 >> 1, Fe = qe, qe = Se * f + Ye * l + 2048 >> 12, Se = Se * l - Ye * f + 2048 >> 12, Ye = qe, qe = Je - Ve + 1 >> 1, Je = Je + Ve + 1 >> 1, Ve = qe, qe = tt + et + 1 >> 1, et = tt - et + 1 >> 1, tt = qe, qe = Te - Ye + 1 >> 1, Te = Te + Ye + 1 >> 1, Ye = qe, qe = Fe - Se + 1 >> 1, Fe = Fe + Se + 1 >> 1, Se = qe, qe = Je * h + tt * o + 2048 >> 12, Je = Je * o - tt * h + 2048 >> 12, tt = qe, qe = et * s + Ve * a + 2048 >> 12, et = et * a - Ve * s + 2048 >> 12, Ve = qe, Re[0 + Ne] = Te + tt, Re[56 + Ne] = Te - tt, Re[8 + Ne] = Fe + Ve, Re[48 + Ne] = Fe - Ve, Re[16 + Ne] = Se + et, Re[40 + Ne] = Se - et, Re[24 + Ne] = Ye + Je, Re[32 + Ne] = Ye - Je;\n          }\n          for (nt = 0; nt < 64; ++nt) {\n            var he = 128 + (Re[nt] + 8 >> 4);\n            Be[nt] = he < 0 ? 0 : he > 255 ? 255 : he;\n          }\n        }\n        $(N * O * 8);\n        for (var Q, W, ne = 0; ne < O; ne++) {\n          var pe = ne << 3;\n          for (Q = 0; Q < 8; Q++)\n            B.push(new Uint8Array(N));\n          for (var be = 0; be < F; be++) {\n            J(z.blocks[ne][be], V, G);\n            var ve = 0, Ee = be << 3;\n            for (W = 0; W < 8; W++) {\n              var Ae = B[pe + W];\n              for (Q = 0; Q < 8; Q++)\n                Ae[Ee + Q] = V[ve++];\n            }\n          }\n        }\n        return B;\n      }\n      function T(P) {\n        return P < 0 ? 0 : P > 255 ? 255 : P;\n      }\n      g.prototype = {\n        load: function(z) {\n          var B = new XMLHttpRequest();\n          B.open(\"GET\", z, !0), B.responseType = \"arraybuffer\", B.onload = (function() {\n            var F = new Uint8Array(B.response || B.mozResponseArrayBuffer);\n            this.parse(F), this.onload && this.onload();\n          }).bind(this), B.send(null);\n        },\n        parse: function(z) {\n          var B = this.opts.maxResolutionInMP * 1e3 * 1e3, F = 0;\n          z.length;\n          function O() {\n            var ue = z[F] << 8 | z[F + 1];\n            return F += 2, ue;\n          }\n          function N() {\n            var ue = O(), xe = z.subarray(F, F + ue - 2);\n            return F += xe.length, xe;\n          }\n          function G(ue) {\n            var xe = 1, ke = 1, te, me;\n            for (me in ue.components)\n              ue.components.hasOwnProperty(me) && (te = ue.components[me], xe < te.h && (xe = te.h), ke < te.v && (ke = te.v));\n            var U = Math.ceil(ue.samplesPerLine / 8 / xe), ye = Math.ceil(ue.scanLines / 8 / ke);\n            for (me in ue.components)\n              if (ue.components.hasOwnProperty(me)) {\n                te = ue.components[me];\n                var it = Math.ceil(Math.ceil(ue.samplesPerLine / 8) * te.h / xe), I = Math.ceil(Math.ceil(ue.scanLines / 8) * te.v / ke), fe = U * te.h, de = ye * te.v, H = de * fe, ee = [];\n                $(H * 256);\n                for (var oe = 0; oe < de; oe++) {\n                  for (var We = [], M = 0; M < fe; M++)\n                    We.push(new Int32Array(64));\n                  ee.push(We);\n                }\n                te.blocksPerLine = it, te.blocksPerColumn = I, te.blocks = ee;\n              }\n            ue.maxH = xe, ue.maxV = ke, ue.mcusPerLine = U, ue.mcusPerColumn = ye;\n          }\n          var V = null, J = null, Q, W, ne = [], pe = [], be = [], ve = [], Ee = O(), Ae = -1;\n          if (this.comments = [], Ee != 65496)\n            throw new Error(\"SOI not found\");\n          for (Ee = O(); Ee != 65497; ) {\n            var _e, Be;\n            switch (Ee) {\n              case 65280:\n                break;\n              case 65504:\n              // APP0 (Application Specific)\n              case 65505:\n              // APP1\n              case 65506:\n              // APP2\n              case 65507:\n              // APP3\n              case 65508:\n              // APP4\n              case 65509:\n              // APP5\n              case 65510:\n              // APP6\n              case 65511:\n              // APP7\n              case 65512:\n              // APP8\n              case 65513:\n              // APP9\n              case 65514:\n              // APP10\n              case 65515:\n              // APP11\n              case 65516:\n              // APP12\n              case 65517:\n              // APP13\n              case 65518:\n              // APP14\n              case 65519:\n              // APP15\n              case 65534:\n                var Me = N();\n                if (Ee === 65534) {\n                  var re = String.fromCharCode.apply(null, Me);\n                  this.comments.push(re);\n                }\n                Ee === 65504 && Me[0] === 74 && Me[1] === 70 && Me[2] === 73 && Me[3] === 70 && Me[4] === 0 && (V = {\n                  version: { major: Me[5], minor: Me[6] },\n                  densityUnits: Me[7],\n                  xDensity: Me[8] << 8 | Me[9],\n                  yDensity: Me[10] << 8 | Me[11],\n                  thumbWidth: Me[12],\n                  thumbHeight: Me[13],\n                  thumbData: Me.subarray(14, 14 + 3 * Me[12] * Me[13])\n                }), Ee === 65505 && Me[0] === 69 && Me[1] === 120 && Me[2] === 105 && Me[3] === 102 && Me[4] === 0 && (this.exifBuffer = Me.subarray(5, Me.length)), Ee === 65518 && Me[0] === 65 && Me[1] === 100 && Me[2] === 111 && Me[3] === 98 && Me[4] === 101 && Me[5] === 0 && (J = {\n                  version: Me[6],\n                  flags0: Me[7] << 8 | Me[8],\n                  flags1: Me[9] << 8 | Me[10],\n                  transformCode: Me[11]\n                });\n                break;\n              case 65499:\n                for (var Te = O(), Fe = Te + F - 2; F < Fe; ) {\n                  var Se = z[F++];\n                  $(256);\n                  var Ye = new Int32Array(64);\n                  if (Se >> 4 === 0)\n                    for (Be = 0; Be < 64; Be++) {\n                      var Je = n[Be];\n                      Ye[Je] = z[F++];\n                    }\n                  else if (Se >> 4 === 1)\n                    for (Be = 0; Be < 64; Be++) {\n                      var Je = n[Be];\n                      Ye[Je] = O();\n                    }\n                  else\n                    throw new Error(\"DQT: invalid table spec\");\n                  ne[Se & 15] = Ye;\n                }\n                break;\n              case 65472:\n              // SOF0 (Start of Frame, Baseline DCT)\n              case 65473:\n              // SOF1 (Start of Frame, Extended DCT)\n              case 65474:\n                O(), Q = {}, Q.extended = Ee === 65473, Q.progressive = Ee === 65474, Q.precision = z[F++], Q.scanLines = O(), Q.samplesPerLine = O(), Q.components = {}, Q.componentsOrder = [];\n                var et = Q.scanLines * Q.samplesPerLine;\n                if (et > B) {\n                  var Ve = Math.ceil((et - B) / 1e6);\n                  throw new Error(`maxResolutionInMP limit exceeded by ${Ve}MP`);\n                }\n                var tt = z[F++], qe;\n                for (_e = 0; _e < tt; _e++) {\n                  qe = z[F];\n                  var Re = z[F + 1] >> 4, nt = z[F + 1] & 15, Ge = z[F + 2];\n                  if (Re <= 0 || nt <= 0)\n                    throw new Error(\"Invalid sampling factor, expected values above 0\");\n                  Q.componentsOrder.push(qe), Q.components[qe] = {\n                    h: Re,\n                    v: nt,\n                    quantizationIdx: Ge\n                  }, F += 3;\n                }\n                G(Q), pe.push(Q);\n                break;\n              case 65476:\n                var Ne = O();\n                for (_e = 2; _e < Ne; ) {\n                  var he = z[F++], Qe = new Uint8Array(16), Ze = 0;\n                  for (Be = 0; Be < 16; Be++, F++)\n                    Ze += Qe[Be] = z[F];\n                  $(16 + Ze);\n                  var He = new Uint8Array(Ze);\n                  for (Be = 0; Be < Ze; Be++, F++)\n                    He[Be] = z[F];\n                  _e += 17 + Ze, (he >> 4 === 0 ? ve : be)[he & 15] = E(Qe, He);\n                }\n                break;\n              case 65501:\n                O(), W = O();\n                break;\n              case 65500:\n                O(), O();\n                break;\n              case 65498:\n                O();\n                var De = z[F++], lt = [], ot;\n                for (_e = 0; _e < De; _e++) {\n                  ot = Q.components[z[F++]];\n                  var Le = z[F++];\n                  ot.huffmanTableDC = ve[Le >> 4], ot.huffmanTableAC = be[Le & 15], lt.push(ot);\n                }\n                var ze = z[F++], je = z[F++], Oe = z[F++], st = k(\n                  z,\n                  F,\n                  Q,\n                  lt,\n                  W,\n                  ze,\n                  je,\n                  Oe >> 4,\n                  Oe & 15,\n                  this.opts\n                );\n                F += st;\n                break;\n              case 65535:\n                z[F] !== 255 && F--;\n                break;\n              default:\n                if (z[F - 3] == 255 && z[F - 2] >= 192 && z[F - 2] <= 254) {\n                  F -= 3;\n                  break;\n                } else if (Ee === 224 || Ee == 225) {\n                  if (Ae !== -1)\n                    throw new Error(`first unknown JPEG marker at offset ${Ae.toString(16)}, second unknown JPEG marker ${Ee.toString(16)} at offset ${(F - 1).toString(16)}`);\n                  Ae = F - 1;\n                  const ue = O();\n                  if (z[F + ue - 2] === 255) {\n                    F += ue - 2;\n                    break;\n                  }\n                }\n                throw new Error(\"unknown JPEG marker \" + Ee.toString(16));\n            }\n            Ee = O();\n          }\n          if (pe.length != 1)\n            throw new Error(\"only single frame JPEGs supported\");\n          for (var _e = 0; _e < pe.length; _e++) {\n            var Z = pe[_e].components;\n            for (var Be in Z)\n              Z[Be].quantizationTable = ne[Z[Be].quantizationIdx], delete Z[Be].quantizationIdx;\n          }\n          this.width = Q.samplesPerLine, this.height = Q.scanLines, this.jfif = V, this.adobe = J, this.components = [];\n          for (var _e = 0; _e < Q.componentsOrder.length; _e++) {\n            var ot = Q.components[Q.componentsOrder[_e]];\n            this.components.push({\n              lines: A(Q, ot),\n              scaleX: ot.h / Q.maxH,\n              scaleY: ot.v / Q.maxV\n            });\n          }\n        },\n        getData: function(z, B) {\n          var F = this.width / z, O = this.height / B, N, G, V, J, Q, W, ne, pe, be, ve, Ee = 0, Ae, _e, Be, Me, re, Te, Fe, Se, Ye, Je, et, Ve = z * B * this.components.length;\n          $(Ve);\n          var tt = new Uint8Array(Ve);\n          switch (this.components.length) {\n            case 1:\n              for (N = this.components[0], ve = 0; ve < B; ve++)\n                for (Q = N.lines[0 | ve * N.scaleY * O], be = 0; be < z; be++)\n                  Ae = Q[0 | be * N.scaleX * F], tt[Ee++] = Ae;\n              break;\n            case 2:\n              for (N = this.components[0], G = this.components[1], ve = 0; ve < B; ve++)\n                for (Q = N.lines[0 | ve * N.scaleY * O], W = G.lines[0 | ve * G.scaleY * O], be = 0; be < z; be++)\n                  Ae = Q[0 | be * N.scaleX * F], tt[Ee++] = Ae, Ae = W[0 | be * G.scaleX * F], tt[Ee++] = Ae;\n              break;\n            case 3:\n              for (et = !0, this.adobe && this.adobe.transformCode ? et = !0 : typeof this.opts.colorTransform < \"u\" && (et = !!this.opts.colorTransform), N = this.components[0], G = this.components[1], V = this.components[2], ve = 0; ve < B; ve++)\n                for (Q = N.lines[0 | ve * N.scaleY * O], W = G.lines[0 | ve * G.scaleY * O], ne = V.lines[0 | ve * V.scaleY * O], be = 0; be < z; be++)\n                  et ? (Ae = Q[0 | be * N.scaleX * F], _e = W[0 | be * G.scaleX * F], Be = ne[0 | be * V.scaleX * F], Se = T(Ae + 1.402 * (Be - 128)), Ye = T(Ae - 0.3441363 * (_e - 128) - 0.71413636 * (Be - 128)), Je = T(Ae + 1.772 * (_e - 128))) : (Se = Q[0 | be * N.scaleX * F], Ye = W[0 | be * G.scaleX * F], Je = ne[0 | be * V.scaleX * F]), tt[Ee++] = Se, tt[Ee++] = Ye, tt[Ee++] = Je;\n              break;\n            case 4:\n              if (!this.adobe)\n                throw new Error(\"Unsupported color mode (4 components)\");\n              for (et = !1, this.adobe && this.adobe.transformCode ? et = !0 : typeof this.opts.colorTransform < \"u\" && (et = !!this.opts.colorTransform), N = this.components[0], G = this.components[1], V = this.components[2], J = this.components[3], ve = 0; ve < B; ve++)\n                for (Q = N.lines[0 | ve * N.scaleY * O], W = G.lines[0 | ve * G.scaleY * O], ne = V.lines[0 | ve * V.scaleY * O], pe = J.lines[0 | ve * J.scaleY * O], be = 0; be < z; be++)\n                  et ? (Ae = Q[0 | be * N.scaleX * F], _e = W[0 | be * G.scaleX * F], Be = ne[0 | be * V.scaleX * F], Me = pe[0 | be * J.scaleX * F], re = 255 - T(Ae + 1.402 * (Be - 128)), Te = 255 - T(Ae - 0.3441363 * (_e - 128) - 0.71413636 * (Be - 128)), Fe = 255 - T(Ae + 1.772 * (_e - 128))) : (re = Q[0 | be * N.scaleX * F], Te = W[0 | be * G.scaleX * F], Fe = ne[0 | be * V.scaleX * F], Me = pe[0 | be * J.scaleX * F]), tt[Ee++] = 255 - re, tt[Ee++] = 255 - Te, tt[Ee++] = 255 - Fe, tt[Ee++] = 255 - Me;\n              break;\n            default:\n              throw new Error(\"Unsupported color mode\");\n          }\n          return tt;\n        },\n        copyToImageData: function(z, B) {\n          var F = z.width, O = z.height, N = z.data, G = this.getData(F, O), V = 0, J = 0, Q, W, ne, pe, be, ve, Ee, Ae, _e;\n          switch (this.components.length) {\n            case 1:\n              for (W = 0; W < O; W++)\n                for (Q = 0; Q < F; Q++)\n                  ne = G[V++], N[J++] = ne, N[J++] = ne, N[J++] = ne, B && (N[J++] = 255);\n              break;\n            case 3:\n              for (W = 0; W < O; W++)\n                for (Q = 0; Q < F; Q++)\n                  Ee = G[V++], Ae = G[V++], _e = G[V++], N[J++] = Ee, N[J++] = Ae, N[J++] = _e, B && (N[J++] = 255);\n              break;\n            case 4:\n              for (W = 0; W < O; W++)\n                for (Q = 0; Q < F; Q++)\n                  be = G[V++], ve = G[V++], ne = G[V++], pe = G[V++], Ee = 255 - T(be * (1 - pe / 255) + pe), Ae = 255 - T(ve * (1 - pe / 255) + pe), _e = 255 - T(ne * (1 - pe / 255) + pe), N[J++] = Ee, N[J++] = Ae, N[J++] = _e, B && (N[J++] = 255);\n              break;\n            default:\n              throw new Error(\"Unsupported color mode\");\n          }\n        }\n      };\n      var C = 0, D = 0;\n      function $(P = 0) {\n        var z = C + P;\n        if (z > D) {\n          var B = Math.ceil((z - D) / 1024 / 1024);\n          throw new Error(`maxMemoryUsageInMB limit exceeded by at least ${B}MB`);\n        }\n        C = z;\n      }\n      return g.resetMaxMemoryUsage = function(P) {\n        C = 0, D = P;\n      }, g.getBytesAllocated = function() {\n        return C;\n      }, g.requestMemoryAllocation = $, g;\n    }();\n    e.exports = t;\n    function t(r, n = {}) {\n      var a = {\n        // \"undefined\" means \"Choose whether to transform colors based on the image’s color model.\"\n        colorTransform: void 0,\n        useTArray: !1,\n        formatAsRGBA: !0,\n        tolerantDecoding: !0,\n        maxResolutionInMP: 100,\n        // Don't decode more than 100 megapixels\n        maxMemoryUsageInMB: 512\n        // Don't decode if memory footprint is more than 512MB\n      }, s = { ...a, ...n }, o = new Uint8Array(r), h = new i();\n      h.opts = s, i.resetMaxMemoryUsage(s.maxMemoryUsageInMB * 1024 * 1024), h.parse(o);\n      var l = s.formatAsRGBA ? 4 : 3, f = h.width * h.height * l;\n      try {\n        i.requestMemoryAllocation(f);\n        var b = {\n          width: h.width,\n          height: h.height,\n          exifBuffer: h.exifBuffer,\n          data: s.useTArray ? new Uint8Array(f) : Buffer.alloc(f)\n        };\n        h.comments.length > 0 && (b.comments = h.comments);\n      } catch (w) {\n        throw w instanceof RangeError ? new Error(\"Could not allocate enough memory for the image. Required: \" + f) : w instanceof ReferenceError && w.message === \"Buffer is not defined\" ? new Error(\"Buffer is not globally defined in this environment. Consider setting useTArray to true\") : w;\n      }\n      return h.copyToImageData(b, s.formatAsRGBA), b;\n    }\n  }(decoder)), decoder.exports;\n}\nvar jpegJs, hasRequiredJpegJs;\nfunction requireJpegJs() {\n  if (hasRequiredJpegJs) return jpegJs;\n  hasRequiredJpegJs = 1;\n  var e = requireEncoder(), i = requireDecoder();\n  return jpegJs = {\n    encode: e,\n    decode: i\n  }, jpegJs;\n}\nvar jpegJsExports = requireJpegJs();\nconst jpeg = /* @__PURE__ */ getDefaultExportFromCjs(jpegJsExports);\nlet chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\", lookup = new Uint8Array(256);\nfor (let e = 0; e < chars.length; e++)\n  lookup[chars.charCodeAt(e)] = e;\nfunction encode(e) {\n  let i, t = e.length, r = \"\";\n  for (i = 0; i < t; i += 3)\n    r += chars[e[i] >> 2], r += chars[(e[i] & 3) << 4 | e[i + 1] >> 4], r += chars[(e[i + 1] & 15) << 2 | e[i + 2] >> 6], r += chars[e[i + 2] & 63];\n  return t % 3 === 2 ? r = `${r.substring(0, r.length - 1)}=` : t % 3 === 1 && (r = `${r.substring(0, r.length - 2)}==`), r;\n}\nfunction decode$1(e) {\n  let i = e.length * 0.75, t = e.length, r = 0, n, a, s, o;\n  e[e.length - 1] === \"=\" && (i--, e[e.length - 2] === \"=\" && i--);\n  const h = new Uint8Array(i);\n  for (let l = 0; l < t; l += 4)\n    n = lookup[e.charCodeAt(l)], a = lookup[e.charCodeAt(l + 1)], s = lookup[e.charCodeAt(l + 2)], o = lookup[e.charCodeAt(l + 3)], h[r++] = n << 2 | a >> 4, h[r++] = (a & 15) << 4 | s >> 2, h[r++] = (s & 3) << 6 | o & 63;\n  return h;\n}\nfunction toBase64URL(e, i) {\n  const t = encode(e);\n  return `data:${i};base64,${t}`;\n}\nconst ImageData$1 = self.ImageData, DOMImage = self.Image;\nfunction createCanvas(e, i) {\n  let t = self.document.createElement(\"canvas\");\n  return t.width = e, t.height = i, t;\n}\nfunction fetchBinary(e, { withCredentials: i = !1 } = {}) {\n  return new Promise(function(t, r) {\n    let n = new self.XMLHttpRequest();\n    n.open(\"GET\", e, !0), n.responseType = \"arraybuffer\", n.withCredentials = i, n.onload = function(a) {\n      this.status !== 200 ? r(a) : t(this.response);\n    }, n.onerror = r, n.send();\n  });\n}\nfunction createWriteStream() {\n  throw new Error(\"createWriteStream does not exist in the browser\");\n}\nfunction writeFile() {\n  throw new Error(\"writeFile does not exist in the browser\");\n}\nfunction getType(e) {\n  return e.includes(\"/\") || (e = `image/${e}`), e;\n}\nfunction encodeJpeg(e, i = {}) {\n  const t = {\n    width: e.width,\n    height: e.height,\n    data: e.getRGBAData()\n  };\n  return jpegJsExports.encode(t, i.quality).data;\n}\nfunction encodePng(e, i) {\n  const t = {\n    width: e.width,\n    height: e.height,\n    channels: e.channels,\n    depth: e.bitDepth,\n    data: e.data\n  };\n  return (t.depth === 1 || t.depth === 32) && (t.depth = 8, t.channels = 4, t.data = e.getRGBAData()), encodePng$1(t, i);\n}\nconst exportMethods = {\n  /**\n   * Save the image to disk (Node.js only)\n   * @memberof Image\n   * @instance\n   * @param {string} path\n   * @param {object} [options]\n   * @param {string} [options.format] - One of: png, jpg, bmp (limited support for bmp). If not specified will try to infer from filename\n   * @param {boolean} [options.useCanvas=false] - Force use of the canvas API to save the image instead of a JavaScript implementation\n   * @param {object} [options.encoder] - Specify options for the encoder if applicable.\n   * @return {Promise} - Resolves when the file is fully written\n   */\n  save(e, i = {}) {\n    const { useCanvas: t = !1, encoder: r = void 0 } = i;\n    let { format: n } = i;\n    if (!n) {\n      const a = /\\.(?<format>[a-zA-Z]+)$/.exec(e);\n      a && (n = a.groups.format.toLowerCase());\n    }\n    if (!n)\n      throw new Error(\"file format not provided\");\n    return new Promise((a, s) => {\n      let o, h;\n      switch (n.toLowerCase()) {\n        case \"png\": {\n          t ? o = this.getCanvas().pngStream() : h = encodePng(this, r);\n          break;\n        }\n        case \"jpg\":\n        case \"jpeg\":\n          t ? o = this.getCanvas().jpegStream() : h = encodeJpeg(this, r);\n          break;\n        case \"bmp\":\n          h = srcExports$3.encode(this, r);\n          break;\n        default:\n          throw new RangeError(`invalid output format: ${n}`);\n      }\n      if (o) {\n        let l = createWriteStream();\n        l.on(\"finish\", a), l.on(\"error\", s), o.pipe(l);\n      } else h && writeFile();\n    });\n  },\n  /**\n   * Creates a dataURL string from the image.\n   * @memberof Image\n   * @instance\n   * @param {string} [type='image/png']\n   * @param {object} [options]\n   * @param {boolean} [options.useCanvas=false] - Force use of the canvas API to save the image instead of JavaScript implementation.\n   * @param {object} [options.encoder] - Specify options for the encoder if applicable.\n   * @return {string|Promise<string>}\n   */\n  toDataURL(e = \"image/png\", i = {}) {\n    typeof e == \"object\" && (i = e, e = \"image/png\");\n    const { useCanvas: t = !1, encoder: r = void 0 } = i;\n    e = getType(e);\n    function n(a, s) {\n      const o = a(s, r);\n      return toBase64URL(o, e);\n    }\n    return e === \"image/bmp\" ? n(srcExports$3.encode, this) : e === \"image/png\" && !t ? n(encodePng, this) : e === \"image/jpeg\" && !t ? n(encodeJpeg, this) : this.getCanvas().toDataURL(e);\n  },\n  /**\n   * Encodes the image and returns a buffer\n   * @memberof Image\n   * @instance\n   * @param {object} [options]\n   * @param {string} [options.format='png']\n   * @param {object} [options.encoder] - Specify options for the encoder if applicable.\n   * @return {Uint8Array}\n   */\n  toBuffer(e = {}) {\n    const { format: i = \"png\", encoder: t = void 0 } = e;\n    switch (i.toLowerCase()) {\n      case \"png\":\n        return encodePng(this, t);\n      case \"jpeg\":\n      case \"jpg\":\n        return encodeJpeg(this, t);\n      case \"bmp\":\n        return srcExports$3.encode(this, t);\n      default:\n        throw new RangeError(`invalid output format: ${i}`);\n    }\n  },\n  /**\n   * Creates a base64 string from the image.\n   * @memberof Image\n   * @instance\n   * @param {string} [type='image/png']\n   * @param {object} [options] - Same options as toDataURL\n   * @return {string|Promise<string>}\n   */\n  toBase64(e = \"image/png\", i = {}) {\n    if (i.async)\n      return this.toDataURL(e, i).then(function(t) {\n        return t.substring(t.indexOf(\",\") + 1);\n      });\n    {\n      const t = this.toDataURL(e, i);\n      return t.substring(t.indexOf(\",\") + 1);\n    }\n  },\n  /**\n   * Creates a blob from the image and return a Promise.\n   * This function is only available in the browser.\n   * @memberof Image\n   * @instance\n   * @param {string} [type='image/png'] A String indicating the image format. The default type is image/png.\n   * @param {string} [quality=0.8] A Number between 0 and 1 indicating image quality if the requested type is image/jpeg or image/webp. If this argument is anything else, the default value for image quality is used. Other arguments are ignored.\n   * @return {Promise}\n   */\n  toBlob(e = \"image/png\", i = 0.8) {\n    return canvasToBlob(this.getCanvas(), e, i);\n  },\n  /**\n   * Creates a new canvas element and draw the image inside it\n   * @memberof Image\n   * @instance\n   * @return {Canvas}\n   */\n  getCanvas() {\n    const e = new ImageData$1(\n      this.getRGBAData({ clamped: !0 }),\n      this.width,\n      this.height\n    );\n    let i = createCanvas(this.width, this.height);\n    return i.getContext(\"2d\").putImageData(e, 0, 0), i;\n  }\n};\nfunction setExportMethods(e) {\n  for (const i in exportMethods)\n    e.prototype[i] = exportMethods[i];\n}\nvar hasOwn$1 = { exports: {} };\nconst version = \"1.0.1\", require$$0$2 = {\n  version\n};\nvar hasRequiredHasOwn;\nfunction requireHasOwn() {\n  return hasRequiredHasOwn || (hasRequiredHasOwn = 1, function(e, i) {\n    var t = Object.prototype.hasOwnProperty;\n    e.exports = i = function(n, a) {\n      return t.call(a, n);\n    }, i.version = require$$0$2.version;\n  }(hasOwn$1, hasOwn$1.exports)), hasOwn$1.exports;\n}\nvar hasOwnExports = requireHasOwn();\nconst hasOwn = /* @__PURE__ */ getDefaultExportFromCjs(hasOwnExports);\nlet computedPropertyDescriptor$1 = {\n  configurable: !0,\n  enumerable: !1,\n  get: void 0\n};\nfunction extendMethod(e, i, t = {}) {\n  let { inPlace: r = !1, returnThis: n = !0, partialArgs: a = [] } = t;\n  return r ? Image.prototype[e] = function(...s) {\n    this.computed = null;\n    let o = i.apply(this, [...a, ...s]);\n    return n ? this : o;\n  } : Image.prototype[e] = function(...s) {\n    return i.apply(this, [...a, ...s]);\n  }, Image;\n}\nfunction extendProperty(e, i, t = {}) {\n  let { partialArgs: r = [] } = t;\n  return computedPropertyDescriptor$1.get = function() {\n    if (this.computed === null)\n      this.computed = {};\n    else if (hasOwn(e, this.computed))\n      return this.computed[e];\n    let n = i.apply(this, r);\n    return this.computed[e] = n, n;\n  }, Object.defineProperty(Image.prototype, e, computedPropertyDescriptor$1), Image;\n}\nconst GREY$1 = \"GREY\", RGB$1 = \"RGB\", HSL = \"HSL\", HSV = \"HSV\", CMYK$1 = \"CMYK\", ColorModel = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  CMYK: CMYK$1,\n  GREY: GREY$1,\n  HSL,\n  HSV,\n  RGB: RGB$1\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction getRGBAData(e = {}) {\n  const { clamped: i } = e;\n  this.checkProcessable(\"getRGBAData\", {\n    components: [1, 3],\n    bitDepth: [1, 8, 16, 32]\n  });\n  const t = this.width * this.height * 4;\n  let r = i ? new Uint8ClampedArray(t) : new Uint8Array(t);\n  return this.bitDepth === 1 ? fillDataFromBinary(this, r) : this.bitDepth === 32 ? (this.checkProcessable(\"getRGBAData\", { alpha: 0 }), this.components === 1 ? fillDataFromGrey32(this, r) : this.components === 3 && (this.checkProcessable(\"getRGBAData\", { colorModel: [RGB$1] }), fillDataFromRGB32(this, r))) : this.components === 1 ? fillDataFromGrey(this, r) : this.components === 3 && (this.checkProcessable(\"getRGBAData\", { colorModel: [RGB$1] }), fillDataFromRGB(this, r)), this.alpha === 1 ? (this.checkProcessable(\"getRGBAData\", { bitDepth: [8, 16] }), copyAlpha(this, r)) : fillAlpha(this, r), r;\n}\nfunction fillDataFromBinary(e, i) {\n  for (let t = 0; t < e.size; t++) {\n    const r = e.getBit(t);\n    i[t * 4] = r * 255, i[t * 4 + 1] = r * 255, i[t * 4 + 2] = r * 255;\n  }\n}\nfunction fillDataFromGrey32(e, i) {\n  const t = e.min[0], n = e.max[0] - t;\n  for (let a = 0; a < e.size; a++) {\n    const s = Math.floor(255 * (e.data[a] - t) / n);\n    i[a * 4] = s, i[a * 4 + 1] = s, i[a * 4 + 2] = s;\n  }\n}\nfunction fillDataFromRGB32(e, i) {\n  const t = Math.min(...e.min), n = Math.max(...e.max) - t;\n  for (let a = 0; a < e.size; a++) {\n    const s = Math.floor(255 * (e.data[a * 3] - t) / n), o = Math.floor(255 * (e.data[a * 3 + 1] - t) / n), h = Math.floor(255 * (e.data[a * 3 + 2] - t) / n);\n    i[a * 4] = s, i[a * 4 + 1] = o, i[a * 4 + 2] = h;\n  }\n}\nfunction fillDataFromGrey(e, i) {\n  for (let t = 0; t < e.size; t++)\n    i[t * 4] = e.data[t * e.channels] >>> e.bitDepth - 8, i[t * 4 + 1] = e.data[t * e.channels] >>> e.bitDepth - 8, i[t * 4 + 2] = e.data[t * e.channels] >>> e.bitDepth - 8;\n}\nfunction fillDataFromRGB(e, i) {\n  for (let t = 0; t < e.size; t++)\n    i[t * 4] = e.data[t * e.channels] >>> e.bitDepth - 8, i[t * 4 + 1] = e.data[t * e.channels + 1] >>> e.bitDepth - 8, i[t * 4 + 2] = e.data[t * e.channels + 2] >>> e.bitDepth - 8;\n}\nfunction copyAlpha(e, i) {\n  for (let t = 0; t < e.size; t++)\n    i[t * 4 + 3] = e.data[t * e.channels + e.components] >> e.bitDepth - 8;\n}\nfunction fillAlpha(e, i) {\n  for (let t = 0; t < e.size; t++)\n    i[t * 4 + 3] = 255;\n}\nconst BINARY = \"BINARY\", GREY = \"GREY\", GREYA = \"GREYA\", RGB = \"RGB\", RGBA = \"RGBA\", CMYK = \"CMYK\", CMYKA = \"CMYKA\", kinds = {};\nkinds[BINARY] = {\n  components: 1,\n  alpha: 0,\n  bitDepth: 1,\n  colorModel: GREY$1\n};\nkinds[GREYA] = {\n  components: 1,\n  alpha: 1,\n  bitDepth: 8,\n  colorModel: GREY$1\n};\nkinds[GREY] = {\n  components: 1,\n  alpha: 0,\n  bitDepth: 8,\n  colorModel: GREY$1\n};\nkinds[RGBA] = {\n  components: 3,\n  alpha: 1,\n  bitDepth: 8,\n  colorModel: RGB$1\n};\nkinds[RGB] = {\n  components: 3,\n  alpha: 0,\n  bitDepth: 8,\n  colorModel: RGB$1\n};\nkinds[CMYK] = {\n  components: 4,\n  alpha: 0,\n  bitDepth: 8,\n  colorModel: CMYK$1\n};\nkinds[CMYKA] = {\n  components: 4,\n  alpha: 1,\n  bitDepth: 8,\n  colorModel: CMYK$1\n};\nfunction getKind(e) {\n  const i = kinds[e];\n  if (!i)\n    throw new RangeError(`invalid image kind: ${e}`);\n  return i;\n}\nconst validBitDepth = [1, 8, 16, 32];\nfunction verifyKindDefinition(e) {\n  const { components: i, alpha: t, bitDepth: r, colorModel: n } = e;\n  if (!Number.isInteger(i) || i <= 0)\n    throw new RangeError(\n      `invalid components: ${i}. Must be a positive integer`\n    );\n  if (t !== 0 && t !== 1 && typeof t != \"boolean\")\n    throw new TypeError(`invalid alpha: ${t}: must be a boolean, 0 or 1`);\n  if (!validBitDepth.includes(r))\n    throw new RangeError(\n      `invalid bitDepth: ${r}. Must be one of ${validBitDepth.join(\n        \", \"\n      )}`\n    );\n  if (!ColorModel[n])\n    throw new RangeError(\n      `invalid colorModel: ${n}. Must be one of ${Object.keys(\n        ColorModel\n      ).join(\", \")}`\n    );\n}\nfunction getTheoreticalPixelArraySize(e, i, t) {\n  let r = i * e;\n  return t === 1 && (r = Math.ceil(r / 8)), r;\n}\nfunction createPixelArray(e, i, t, r, n, a) {\n  const s = r * e;\n  let o;\n  switch (n) {\n    case 1:\n      o = new Uint8Array(Math.ceil(s / 8));\n      break;\n    case 8:\n      o = new Uint8Array(s);\n      break;\n    case 16:\n      o = new Uint16Array(s);\n      break;\n    case 32:\n      o = new Float32Array(s);\n      break;\n    default:\n      throw new Error(`Cannot create pixel array for bit depth ${n}`);\n  }\n  if (t)\n    for (let h = i; h < o.length; h += r)\n      o[h] = a;\n  return o;\n}\nvar src$4 = {}, IOBuffer_1, hasRequiredIOBuffer;\nfunction requireIOBuffer() {\n  if (hasRequiredIOBuffer) return IOBuffer_1;\n  hasRequiredIOBuffer = 1;\n  const e = 1024 * 8, i = [];\n  class t {\n    constructor(n, a) {\n      a = a || {}, n === void 0 && (n = e), typeof n == \"number\" && (n = new ArrayBuffer(n));\n      let s = n.byteLength;\n      const o = a.offset ? a.offset >>> 0 : 0;\n      n.buffer && (s = n.byteLength - o, n.byteLength !== n.buffer.byteLength ? n = n.buffer.slice(n.byteOffset + o, n.byteOffset + n.byteLength) : o ? n = n.buffer.slice(o) : n = n.buffer), this.buffer = n, this.length = s, this.byteLength = s, this.byteOffset = 0, this.offset = 0, this.littleEndian = !0, this._data = new DataView(this.buffer), this._increment = s || e, this._mark = 0;\n    }\n    available(n) {\n      return n === void 0 && (n = 1), this.offset + n <= this.length;\n    }\n    isLittleEndian() {\n      return this.littleEndian;\n    }\n    setLittleEndian() {\n      this.littleEndian = !0;\n    }\n    isBigEndian() {\n      return !this.littleEndian;\n    }\n    setBigEndian() {\n      this.littleEndian = !1;\n    }\n    skip(n) {\n      n === void 0 && (n = 1), this.offset += n;\n    }\n    seek(n) {\n      this.offset = n;\n    }\n    mark() {\n      this._mark = this.offset;\n    }\n    reset() {\n      this.offset = this._mark;\n    }\n    rewind() {\n      this.offset = 0;\n    }\n    ensureAvailable(n) {\n      if (n === void 0 && (n = 1), !this.available(n)) {\n        const a = this._increment + this._increment;\n        this._increment = a;\n        const s = this.length + a, o = new Uint8Array(s);\n        o.set(new Uint8Array(this.buffer)), this.buffer = o.buffer, this.length = s, this._data = new DataView(this.buffer);\n      }\n    }\n    readBoolean() {\n      return this.readUint8() !== 0;\n    }\n    readInt8() {\n      return this._data.getInt8(this.offset++);\n    }\n    readUint8() {\n      return this._data.getUint8(this.offset++);\n    }\n    readByte() {\n      return this.readUint8();\n    }\n    readBytes(n) {\n      n === void 0 && (n = 1);\n      for (var a = new Uint8Array(n), s = 0; s < n; s++)\n        a[s] = this.readByte();\n      return a;\n    }\n    readInt16() {\n      var n = this._data.getInt16(this.offset, this.littleEndian);\n      return this.offset += 2, n;\n    }\n    readUint16() {\n      var n = this._data.getUint16(this.offset, this.littleEndian);\n      return this.offset += 2, n;\n    }\n    readInt32() {\n      var n = this._data.getInt32(this.offset, this.littleEndian);\n      return this.offset += 4, n;\n    }\n    readUint32() {\n      var n = this._data.getUint32(this.offset, this.littleEndian);\n      return this.offset += 4, n;\n    }\n    readFloat32() {\n      var n = this._data.getFloat32(this.offset, this.littleEndian);\n      return this.offset += 4, n;\n    }\n    readFloat64() {\n      var n = this._data.getFloat64(this.offset, this.littleEndian);\n      return this.offset += 8, n;\n    }\n    readChar() {\n      return String.fromCharCode(this.readInt8());\n    }\n    readChars(n) {\n      n === void 0 && (n = 1), i.length = n;\n      for (var a = 0; a < n; a++)\n        i[a] = this.readChar();\n      return i.join(\"\");\n    }\n    writeBoolean(n) {\n      this.writeUint8(n ? 255 : 0);\n    }\n    writeInt8(n) {\n      this.ensureAvailable(1), this._data.setInt8(this.offset++, n);\n    }\n    writeUint8(n) {\n      this.ensureAvailable(1), this._data.setUint8(this.offset++, n);\n    }\n    writeByte(n) {\n      this.writeUint8(n);\n    }\n    writeBytes(n) {\n      this.ensureAvailable(n.length);\n      for (var a = 0; a < n.length; a++)\n        this._data.setUint8(this.offset++, n[a]);\n    }\n    writeInt16(n) {\n      this.ensureAvailable(2), this._data.setInt16(this.offset, n, this.littleEndian), this.offset += 2;\n    }\n    writeUint16(n) {\n      this.ensureAvailable(2), this._data.setUint16(this.offset, n, this.littleEndian), this.offset += 2;\n    }\n    writeInt32(n) {\n      this.ensureAvailable(4), this._data.setInt32(this.offset, n, this.littleEndian), this.offset += 4;\n    }\n    writeUint32(n) {\n      this.ensureAvailable(4), this._data.setUint32(this.offset, n, this.littleEndian), this.offset += 4;\n    }\n    writeFloat32(n) {\n      this.ensureAvailable(4), this._data.setFloat32(this.offset, n, this.littleEndian), this.offset += 4;\n    }\n    writeFloat64(n) {\n      this.ensureAvailable(8), this._data.setFloat64(this.offset, n, this.littleEndian), this.offset += 8;\n    }\n    writeChar(n) {\n      this.writeUint8(n.charCodeAt(0));\n    }\n    writeChars(n) {\n      for (var a = 0; a < n.length; a++)\n        this.writeUint8(n.charCodeAt(a));\n    }\n    toArray() {\n      return new Uint8Array(this.buffer, 0, this.offset);\n    }\n  }\n  return IOBuffer_1 = t, IOBuffer_1;\n}\nvar src$3 = {}, standard$1, hasRequiredStandard;\nfunction requireStandard() {\n  if (hasRequiredStandard) return standard$1;\n  hasRequiredStandard = 1;\n  const e = {\n    // Baseline tags\n    254: \"NewSubfileType\",\n    255: \"SubfileType\",\n    256: \"ImageWidth\",\n    257: \"ImageLength\",\n    258: \"BitsPerSample\",\n    259: \"Compression\",\n    262: \"PhotometricInterpretation\",\n    263: \"Threshholding\",\n    264: \"CellWidth\",\n    265: \"CellLength\",\n    266: \"FillOrder\",\n    270: \"ImageDescription\",\n    271: \"Make\",\n    272: \"Model\",\n    273: \"StripOffsets\",\n    274: \"Orientation\",\n    277: \"SamplesPerPixel\",\n    278: \"RowsPerStrip\",\n    279: \"StripByteCounts\",\n    280: \"MinSampleValue\",\n    281: \"MaxSampleValue\",\n    282: \"XResolution\",\n    283: \"YResolution\",\n    284: \"PlanarConfiguration\",\n    288: \"FreeOffsets\",\n    289: \"FreeByteCounts\",\n    290: \"GrayResponseUnit\",\n    291: \"GrayResponseCurve\",\n    296: \"ResolutionUnit\",\n    305: \"Software\",\n    306: \"DateTime\",\n    315: \"Artist\",\n    316: \"HostComputer\",\n    320: \"ColorMap\",\n    338: \"ExtraSamples\",\n    33432: \"Copyright\",\n    // Extension tags\n    269: \"DocumentName\",\n    285: \"PageName\",\n    286: \"XPosition\",\n    287: \"YPosition\",\n    292: \"T4Options\",\n    293: \"T6Options\",\n    297: \"PageNumber\",\n    301: \"TransferFunction\",\n    317: \"Predictor\",\n    318: \"WhitePoint\",\n    319: \"PrimaryChromaticities\",\n    321: \"HalftoneHints\",\n    322: \"TileWidth\",\n    323: \"TileLength\",\n    324: \"TileOffsets\",\n    325: \"TileByteCounts\",\n    326: \"BadFaxLines\",\n    327: \"CleanFaxData\",\n    328: \"ConsecutiveBadFaxLines\",\n    330: \"SubIFDs\",\n    332: \"InkSet\",\n    333: \"InkNames\",\n    334: \"NumberOfInks\",\n    336: \"DotRange\",\n    337: \"TargetPrinter\",\n    339: \"SampleFormat\",\n    340: \"SMinSampleValue\",\n    341: \"SMaxSampleValue\",\n    342: \"TransferRange\",\n    343: \"ClipPath\",\n    344: \"XClipPathUnits\",\n    345: \"YClipPathUnits\",\n    346: \"Indexed\",\n    347: \"JPEGTables\",\n    351: \"OPIProxy\",\n    400: \"GlobalParametersIFD\",\n    401: \"ProfileType\",\n    402: \"FaxProfile\",\n    403: \"CodingMethods\",\n    404: \"VersionYear\",\n    405: \"ModeNumber\",\n    433: \"Decode\",\n    434: \"DefaultImageColor\",\n    512: \"JPEGProc\",\n    513: \"JPEGInterchangeFormat\",\n    514: \"JPEGInterchangeFormatLength\",\n    515: \"JPEGRestartInterval\",\n    517: \"JPEGLosslessPredictors\",\n    518: \"JPEGPointTransforms\",\n    519: \"JPEGQTables\",\n    520: \"JPEGDCTables\",\n    521: \"JPEGACTables\",\n    529: \"YCbCrCoefficients\",\n    530: \"YCbCrSubSampling\",\n    531: \"YCbCrPositioning\",\n    532: \"ReferenceBlackWhite\",\n    559: \"StripRowCounts\",\n    700: \"XMP\",\n    32781: \"ImageID\",\n    34732: \"ImageLayer\",\n    // Private tags\n    32932: \"WangAnnotatio\",\n    33445: \"MDFileTag\",\n    33446: \"MDScalePixel\",\n    33447: \"MDColorTable\",\n    33448: \"MDLabName\",\n    33449: \"MDSampleInfo\",\n    33450: \"MDPrepDate\",\n    33451: \"MDPrepTime\",\n    33452: \"MDFileUnits\",\n    33550: \"ModelPixelScaleTag\",\n    33723: \"IPTC\",\n    33918: \"INGRPacketDataTag\",\n    33919: \"INGRFlagRegisters\",\n    33920: \"IrasBTransformationMatrix\",\n    33922: \"ModelTiepointTag\",\n    34264: \"ModelTransformationTag\",\n    34377: \"Photoshop\",\n    34665: \"ExifIFD\",\n    34675: \"ICCProfile\",\n    34735: \"GeoKeyDirectoryTag\",\n    34736: \"GeoDoubleParamsTag\",\n    34737: \"GeoAsciiParamsTag\",\n    34853: \"GPSIFD\",\n    34908: \"HylaFAXFaxRecvParams\",\n    34909: \"HylaFAXFaxSubAddress\",\n    34910: \"HylaFAXFaxRecvTime\",\n    37724: \"ImageSourceData\",\n    40965: \"InteroperabilityIFD\",\n    42112: \"GDAL_METADATA\",\n    42113: \"GDAL_NODATA\",\n    50215: \"OceScanjobDescription\",\n    50216: \"OceApplicationSelector\",\n    50217: \"OceIdentificationNumber\",\n    50218: \"OceImageLogicCharacteristics\",\n    50706: \"DNGVersion\",\n    50707: \"DNGBackwardVersion\",\n    50708: \"UniqueCameraModel\",\n    50709: \"LocalizedCameraModel\",\n    50710: \"CFAPlaneColor\",\n    50711: \"CFALayout\",\n    50712: \"LinearizationTable\",\n    50713: \"BlackLevelRepeatDim\",\n    50714: \"BlackLevel\",\n    50715: \"BlackLevelDeltaH\",\n    50716: \"BlackLevelDeltaV\",\n    50717: \"WhiteLevel\",\n    50718: \"DefaultScale\",\n    50719: \"DefaultCropOrigin\",\n    50720: \"DefaultCropSize\",\n    50721: \"ColorMatrix1\",\n    50722: \"ColorMatrix2\",\n    50723: \"CameraCalibration1\",\n    50724: \"CameraCalibration2\",\n    50725: \"ReductionMatrix1\",\n    50726: \"ReductionMatrix2\",\n    50727: \"AnalogBalance\",\n    50728: \"AsShotNeutral\",\n    50729: \"AsShotWhiteXY\",\n    50730: \"BaselineExposure\",\n    50731: \"BaselineNoise\",\n    50732: \"BaselineSharpness\",\n    50733: \"BayerGreenSplit\",\n    50734: \"LinearResponseLimit\",\n    50735: \"CameraSerialNumber\",\n    50736: \"LensInfo\",\n    50737: \"ChromaBlurRadius\",\n    50738: \"AntiAliasStrength\",\n    50740: \"DNGPrivateData\",\n    50741: \"MakerNoteSafety\",\n    50778: \"CalibrationIlluminant1\",\n    50779: \"CalibrationIlluminant2\",\n    50780: \"BestQualityScale\",\n    50784: \"AliasLayerMetadata\"\n  }, i = {};\n  for (var t in e)\n    i[e[t]] = t;\n  return standard$1 = {\n    tagsById: e,\n    tagsByName: i\n  }, standard$1;\n}\nvar exif$1, hasRequiredExif;\nfunction requireExif() {\n  if (hasRequiredExif) return exif$1;\n  hasRequiredExif = 1;\n  const e = {\n    33434: \"ExposureTime\",\n    33437: \"FNumber\",\n    34850: \"ExposureProgram\",\n    34852: \"SpectralSensitivity\",\n    34855: \"ISOSpeedRatings\",\n    34856: \"OECF\",\n    34864: \"SensitivityType\",\n    34865: \"StandardOutputSensitivity\",\n    34866: \"RecommendedExposureIndex\",\n    34867: \"ISOSpeed\",\n    34868: \"ISOSpeedLatitudeyyy\",\n    34869: \"ISOSpeedLatitudezzz\",\n    36864: \"ExifVersion\",\n    36867: \"DateTimeOriginal\",\n    36868: \"DateTimeDigitized\",\n    37121: \"ComponentsConfiguration\",\n    37122: \"CompressedBitsPerPixel\",\n    37377: \"ShutterSpeedValue\",\n    37378: \"ApertureValue\",\n    37379: \"BrightnessValue\",\n    37380: \"ExposureBiasValue\",\n    37381: \"MaxApertureValue\",\n    37382: \"SubjectDistance\",\n    37383: \"MeteringMode\",\n    37384: \"LightSource\",\n    37385: \"Flash\",\n    37386: \"FocalLength\",\n    37396: \"SubjectArea\",\n    37500: \"MakerNote\",\n    37510: \"UserComment\",\n    37520: \"SubsecTime\",\n    37521: \"SubsecTimeOriginal\",\n    37522: \"SubsecTimeDigitized\",\n    40960: \"FlashpixVersion\",\n    40961: \"ColorSpace\",\n    40962: \"PixelXDimension\",\n    40963: \"PixelYDimension\",\n    40964: \"RelatedSoundFile\",\n    41483: \"FlashEnergy\",\n    41484: \"SpatialFrequencyResponse\",\n    41486: \"FocalPlaneXResolution\",\n    41487: \"FocalPlaneYResolution\",\n    41488: \"FocalPlaneResolutionUnit\",\n    41492: \"SubjectLocation\",\n    41493: \"ExposureIndex\",\n    41495: \"SensingMethod\",\n    41728: \"FileSource\",\n    41729: \"SceneType\",\n    41730: \"CFAPattern\",\n    41985: \"CustomRendered\",\n    41986: \"ExposureMode\",\n    41987: \"WhiteBalance\",\n    41988: \"DigitalZoomRatio\",\n    41989: \"FocalLengthIn35mmFilm\",\n    41990: \"SceneCaptureType\",\n    41991: \"GainControl\",\n    41992: \"Contrast\",\n    41993: \"Saturation\",\n    41994: \"Sharpness\",\n    41995: \"DeviceSettingDescription\",\n    41996: \"SubjectDistanceRange\",\n    42016: \"ImageUniqueID\",\n    42032: \"CameraOwnerName\",\n    42033: \"BodySerialNumber\",\n    42034: \"LensSpecification\",\n    42035: \"LensMake\",\n    42036: \"LensModel\",\n    42037: \"LensSerialNumber\",\n    42240: \"Gamma\"\n  }, i = {};\n  for (var t in e)\n    i[e[t]] = t;\n  return exif$1 = {\n    tagsById: e,\n    tagsByName: i\n  }, exif$1;\n}\nvar gps$1, hasRequiredGps;\nfunction requireGps() {\n  if (hasRequiredGps) return gps$1;\n  hasRequiredGps = 1;\n  const e = {\n    0: \"GPSVersionID\",\n    1: \"GPSLatitudeRef\",\n    2: \"GPSLatitude\",\n    3: \"GPSLongitudeRef\",\n    4: \"GPSLongitude\",\n    5: \"GPSAltitudeRef\",\n    6: \"GPSAltitude\",\n    7: \"GPSTimeStamp\",\n    8: \"GPSSatellites\",\n    9: \"GPSStatus\",\n    10: \"GPSMeasureMode\",\n    11: \"GPSDOP\",\n    12: \"GPSSpeedRef\",\n    13: \"GPSSpeed\",\n    14: \"GPSTrackRef\",\n    15: \"GPSTrack\",\n    16: \"GPSImgDirectionRef\",\n    17: \"GPSImgDirection\",\n    18: \"GPSMapDatum\",\n    19: \"GPSDestLatitudeRef\",\n    20: \"GPSDestLatitude\",\n    21: \"GPSDestLongitudeRef\",\n    22: \"GPSDestLongitude\",\n    23: \"GPSDestBearingRef\",\n    24: \"GPSDestBearing\",\n    25: \"GPSDestDistanceRef\",\n    26: \"GPSDestDistance\",\n    27: \"GPSProcessingMethod\",\n    28: \"GPSAreaInformation\",\n    29: \"GPSDateStamp\",\n    30: \"GPSDifferential\",\n    31: \"GPSHPositioningError\"\n  }, i = {};\n  for (var t in e)\n    i[e[t]] = t;\n  return gps$1 = {\n    tagsById: e,\n    tagsByName: i\n  }, gps$1;\n}\nvar ifd, hasRequiredIfd;\nfunction requireIfd() {\n  if (hasRequiredIfd) return ifd;\n  hasRequiredIfd = 1;\n  const e = {\n    standard: requireStandard(),\n    exif: requireExif(),\n    gps: requireGps()\n  };\n  class i {\n    constructor(r) {\n      if (!r)\n        throw new Error(\"missing kind\");\n      this.data = null, this.fields = /* @__PURE__ */ new Map(), this.kind = r, this._map = null;\n    }\n    get(r) {\n      if (typeof r == \"number\")\n        return this.fields.get(r);\n      if (typeof r == \"string\")\n        return this.fields.get(e[this.kind].tagsByName[r]);\n      throw new Error(\"expected a number or string\");\n    }\n    get map() {\n      if (!this._map) {\n        this._map = {};\n        const n = e[this.kind].tagsById;\n        for (var r of this.fields.keys())\n          n[r] && (this._map[n[r]] = this.fields.get(r));\n      }\n      return this._map;\n    }\n  }\n  return ifd = i, ifd;\n}\nvar tiffIfd, hasRequiredTiffIfd;\nfunction requireTiffIfd() {\n  if (hasRequiredTiffIfd) return tiffIfd;\n  hasRequiredTiffIfd = 1;\n  const e = requireIfd(), i = /^(\\d{4}):(\\d{2}):(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})$/;\n  class t extends e {\n    constructor() {\n      super(\"standard\");\n    }\n    // Custom fields\n    get size() {\n      return this.width * this.height;\n    }\n    get width() {\n      return this.imageWidth;\n    }\n    get height() {\n      return this.imageLength;\n    }\n    get components() {\n      return this.samplesPerPixel;\n    }\n    get date() {\n      var a = /* @__PURE__ */ new Date(), s = i.exec(this.dateTime);\n      return a.setFullYear(s[1], s[2] - 1, s[3]), a.setHours(s[4], s[5], s[6]), a;\n    }\n    // IFD fields\n    get newSubfileType() {\n      return this.get(254);\n    }\n    get imageWidth() {\n      return this.get(256);\n    }\n    get imageLength() {\n      return this.get(257);\n    }\n    get bitsPerSample() {\n      return this.get(258);\n    }\n    get compression() {\n      return this.get(259) || 1;\n    }\n    get type() {\n      return this.get(262);\n    }\n    get fillOrder() {\n      return this.get(266) || 1;\n    }\n    get documentName() {\n      return this.get(269);\n    }\n    get imageDescription() {\n      return this.get(270);\n    }\n    get stripOffsets() {\n      return r(this.get(273));\n    }\n    get orientation() {\n      return this.get(274);\n    }\n    get samplesPerPixel() {\n      return this.get(277);\n    }\n    get rowsPerStrip() {\n      return this.get(278);\n    }\n    get stripByteCounts() {\n      return r(this.get(279));\n    }\n    get minSampleValue() {\n      return this.get(280) || 0;\n    }\n    get maxSampleValue() {\n      return this.get(281) || Math.pow(2, this.bitsPerSample) - 1;\n    }\n    get xResolution() {\n      return this.get(282);\n    }\n    get yResolution() {\n      return this.get(283);\n    }\n    get planarConfiguration() {\n      return this.get(284) || 1;\n    }\n    get resolutionUnit() {\n      return this.get(296) || 2;\n    }\n    get dateTime() {\n      return this.get(306);\n    }\n    get predictor() {\n      return this.get(317) || 1;\n    }\n    get sampleFormat() {\n      return this.get(339) || 1;\n    }\n    get sMinSampleValue() {\n      return this.get(340) || this.minSampleValue;\n    }\n    get sMaxSampleValue() {\n      return this.get(341) || this.maxSampleValue;\n    }\n  }\n  function r(n) {\n    return typeof n == \"number\" ? [n] : n;\n  }\n  return tiffIfd = t, tiffIfd;\n}\nvar ifdValue = {}, hasRequiredIfdValue;\nfunction requireIfdValue() {\n  if (hasRequiredIfdValue) return ifdValue;\n  hasRequiredIfdValue = 1;\n  var e = /* @__PURE__ */ new Map([\n    [1, [1, i]],\n    // BYTE\n    [2, [1, t]],\n    // ASCII\n    [3, [2, r]],\n    // SHORT\n    [4, [4, n]],\n    // LONG\n    [5, [8, a]],\n    // RATIONAL\n    [6, [1, s]],\n    // SBYTE\n    [7, [1, i]],\n    // UNDEFINED\n    [8, [2, o]],\n    // SSHORT\n    [9, [4, h]],\n    // SLONG\n    [10, [8, l]],\n    // SRATIONAL\n    [11, [4, f]],\n    // FLOAT\n    [12, [8, b]]\n    // DOUBLE\n  ]);\n  ifdValue.getByteLength = function(w, g) {\n    return e.get(w)[0] * g;\n  }, ifdValue.readData = function(w, g, E) {\n    return e.get(g)[1](w, E);\n  };\n  function i(w, g) {\n    if (g === 1) return w.readUint8();\n    for (var E = new Uint8Array(g), k = 0; k < g; k++)\n      E[k] = w.readUint8();\n    return E;\n  }\n  function t(w, g) {\n    for (var E = [], k = \"\", A = 0; A < g; A++) {\n      var T = String.fromCharCode(w.readUint8());\n      T === \"\\0\" ? (E.push(k), k = \"\") : k += T;\n    }\n    return E.length === 1 ? E[0] : E;\n  }\n  function r(w, g) {\n    if (g === 1) return w.readUint16();\n    for (var E = new Uint16Array(g), k = 0; k < g; k++)\n      E[k] = w.readUint16();\n    return E;\n  }\n  function n(w, g) {\n    if (g === 1) return w.readUint32();\n    for (var E = new Uint32Array(g), k = 0; k < g; k++)\n      E[k] = w.readUint32();\n    return E;\n  }\n  function a(w, g) {\n    if (g === 1)\n      return w.readUint32() / w.readUint32();\n    for (var E = new Array(g), k = 0; k < g; k++)\n      E[k] = w.readUint32() / w.readUint32();\n    return E;\n  }\n  function s(w, g) {\n    if (g === 1) return w.readInt8();\n    for (var E = new Int8Array(g), k = 0; k < g; k++)\n      E[k] = w.readInt8();\n    return E;\n  }\n  function o(w, g) {\n    if (g === 1) return w.readInt16();\n    for (var E = new Int16Array(g), k = 0; k < g; k++)\n      E[k] = w.readInt16();\n    return E;\n  }\n  function h(w, g) {\n    if (g === 1) return w.readInt32();\n    for (var E = new Int32Array(g), k = 0; k < g; k++)\n      E[k] = w.readInt32();\n    return E;\n  }\n  function l(w, g) {\n    if (g === 1)\n      return w.readInt32() / w.readInt32();\n    for (var E = new Array(g), k = 0; k < g; k++)\n      E[k] = w.readInt32() / w.readInt32();\n    return E;\n  }\n  function f(w, g) {\n    if (g === 1) return w.readFloat32();\n    for (var E = new Float32Array(g), k = 0; k < g; k++)\n      E[k] = w.readFloat32();\n    return E;\n  }\n  function b(w, g) {\n    if (g === 1) return w.readFloat64();\n    for (var E = new Float64Array(g), k = 0; k < g; k++)\n      E[k] = w.readFloat64();\n    return E;\n  }\n  return ifdValue;\n}\nvar tiffDecoder, hasRequiredTiffDecoder;\nfunction requireTiffDecoder() {\n  if (hasRequiredTiffDecoder) return tiffDecoder;\n  hasRequiredTiffDecoder = 1;\n  const e = requireIOBuffer(), i = requireIfd(), t = requireTiffIfd(), r = requireIfdValue(), n = {\n    ignoreImageData: !1,\n    onlyFirst: !1\n  };\n  class a extends e {\n    constructor(g, E) {\n      super(g, E), this._nextIFD = 0;\n    }\n    decode(g) {\n      g = Object.assign({}, n, g);\n      const E = [];\n      for (this.decodeHeader(); this._nextIFD; )\n        if (E.push(this.decodeIFD(g)), g.onlyFirst)\n          return E[0];\n      return E;\n    }\n    decodeHeader() {\n      let g = this.readUint16();\n      if (g === 18761)\n        this.setLittleEndian();\n      else if (g === 19789)\n        this.setBigEndian();\n      else\n        throw new Error(\"invalid byte order: 0x\" + g.toString(16));\n      if (g = this.readUint16(), g !== 42)\n        throw new Error(\"not a TIFF file\");\n      this._nextIFD = this.readUint32();\n    }\n    decodeIFD(g) {\n      this.seek(this._nextIFD);\n      var E;\n      g.kind ? E = new i(g.kind) : E = new t();\n      const k = this.readUint16();\n      for (var A = 0; A < k; A++)\n        this.decodeIFDEntry(E);\n      return g.ignoreImageData || this.decodeImageData(E), this._nextIFD = this.readUint32(), E;\n    }\n    decodeIFDEntry(g) {\n      const E = this.offset, k = this.readUint16(), A = this.readUint16(), T = this.readUint32();\n      if (A < 1 || A > 12) {\n        this.skip(4);\n        return;\n      }\n      r.getByteLength(A, T) > 4 && this.seek(this.readUint32());\n      const D = r.readData(this, A, T);\n      if (g.fields.set(k, D), k === 34665 || k === 34853) {\n        let $ = this.offset, P;\n        k === 34665 ? P = \"exif\" : k === 34853 && (P = \"gps\"), this._nextIFD = D, g[P] = this.decodeIFD({\n          kind: P,\n          ignoreImageData: !0\n        }), this.offset = $;\n      }\n      this.seek(E), this.skip(12);\n    }\n    decodeImageData(g) {\n      const E = g.orientation;\n      switch (E && E !== 1 && f(\"orientation\", E), g.type) {\n        case 1:\n        // BlackIsZero\n        case 2:\n          this.readStripData(g);\n          break;\n        default:\n          f(\"image type\", g.type);\n          break;\n      }\n    }\n    readStripData(g) {\n      const E = g.width, k = g.height, A = b(g.bitsPerSample), T = g.sampleFormat;\n      let C = E * k;\n      const D = s(C, 1, A, T), $ = g.compression, z = g.rowsPerStrip * E, B = g.stripOffsets, F = g.stripByteCounts;\n      for (var O = 0, N = 0; N < B.length; N++) {\n        var G = this.getStripData($, B[N], F[N]), V = C > z ? z : C;\n        C -= V, A === 8 ? O = o(D, G, O, V) : A === 16 ? O = h(D, G, O, V, this.isLittleEndian()) : A === 32 && T === 3 ? O = l(D, G, O, V, this.isLittleEndian()) : f(\"bitDepth\", A);\n      }\n      g.data = D;\n    }\n    getStripData(g, E, k) {\n      switch (g) {\n        case 1:\n          return new DataView(this.buffer, E, k);\n        case 2:\n        // CCITT Group 3 1-Dimensional Modified Huffman run length encoding\n        case 32773:\n          return f(\"Compression\", g);\n        default:\n          throw new Error(\"invalid compression: \" + g);\n      }\n    }\n  }\n  tiffDecoder = a;\n  function s(w, g, E, k) {\n    return E === 8 ? new Uint8Array(w * g) : E === 16 ? new Uint16Array(w * g) : E === 32 && k === 3 ? new Float32Array(w * g) : f(\"bit depth / sample format\", E + \" / \" + k);\n  }\n  function o(w, g, E, k) {\n    for (var A = 0; A < k; A++)\n      w[E++] = g.getUint8(A);\n    return E;\n  }\n  function h(w, g, E, k, A) {\n    for (var T = 0; T < k * 2; T += 2)\n      w[E++] = g.getUint16(T, A);\n    return E;\n  }\n  function l(w, g, E, k, A) {\n    for (var T = 0; T < k * 4; T += 4)\n      w[E++] = g.getFloat32(T, A);\n    return E;\n  }\n  function f(w, g) {\n    throw new Error(\"Unsupported \" + w + \": \" + g);\n  }\n  function b(w) {\n    if (w.length) {\n      const E = w;\n      w = E[0];\n      for (var g = 0; g < E.length; g++)\n        E[g] !== w && f(\"bit depth\", E);\n    }\n    return w;\n  }\n  return tiffDecoder;\n}\nvar decode, hasRequiredDecode$1;\nfunction requireDecode$1() {\n  if (hasRequiredDecode$1) return decode;\n  hasRequiredDecode$1 = 1;\n  const e = requireTiffDecoder();\n  return decode = function(t, r) {\n    return new e(t, r).decode(r);\n  }, decode;\n}\nvar hasRequiredSrc$4;\nfunction requireSrc$4() {\n  return hasRequiredSrc$4 || (hasRequiredSrc$4 = 1, src$3.decode = requireDecode$1()), src$3;\n}\nvar decode_1, hasRequiredDecode;\nfunction requireDecode() {\n  if (hasRequiredDecode) return decode_1;\n  hasRequiredDecode = 1;\n  const e = requireIOBuffer(), i = requireSrc$4();\n  function t(r) {\n    const n = new e(r), a = {};\n    if (n.setBigEndian(), n.readUint16() !== 65496)\n      throw new Error(\"SOI marker not found. Not a valid JPEG file\");\n    if (n.readUint16() === 65505) {\n      n.readUint16();\n      const h = n.readBytes(6);\n      if (h[0] === 69 && // E\n      h[1] === 120 && // x\n      h[2] === 105 && // i\n      h[3] === 102 && // f\n      h[4] === 0 && h[5] === 0) {\n        const l = i.decode(n, {\n          onlyFirst: !0,\n          ignoreImageData: !0,\n          offset: n.offset\n        });\n        a.exif = l;\n      }\n    }\n    return a;\n  }\n  return decode_1 = t, decode_1;\n}\nvar hasRequiredSrc$3;\nfunction requireSrc$3() {\n  return hasRequiredSrc$3 || (hasRequiredSrc$3 = 1, src$4.decode = requireDecode()), src$4;\n}\nvar srcExports$2 = requireSrc$3(), imageType$1 = { exports: {} }, fileType = { exports: {} }, hasRequiredFileType;\nfunction requireFileType() {\n  return hasRequiredFileType || (hasRequiredFileType = 1, function(module) {\n    const toBytes = (e) => [...e].map((i) => i.charCodeAt(0)), xpiZipFilename = toBytes(\"META-INF/mozilla.rsa\"), oxmlContentTypes = toBytes(\"[Content_Types].xml\"), oxmlRels = toBytes(\"_rels/.rels\");\n    function readUInt64LE(e, i = 0) {\n      let t = e[i], r = 1, n = 0;\n      for (; ++n < 8; )\n        r *= 256, t += e[i + n] * r;\n      return t;\n    }\n    const fileType = (e) => {\n      if (!(e instanceof Uint8Array || e instanceof ArrayBuffer || Buffer.isBuffer(e)))\n        throw new TypeError(`Expected the \\`input\\` argument to be of type \\`Uint8Array\\` or \\`Buffer\\` or \\`ArrayBuffer\\`, got \\`${typeof e}\\``);\n      const i = e instanceof Uint8Array ? e : new Uint8Array(e);\n      if (!(i && i.length > 1))\n        return null;\n      const t = (n, a) => {\n        a = Object.assign({\n          offset: 0\n        }, a);\n        for (let s = 0; s < n.length; s++)\n          if (a.mask) {\n            if (n[s] !== (a.mask[s] & i[s + a.offset]))\n              return !1;\n          } else if (n[s] !== i[s + a.offset])\n            return !1;\n        return !0;\n      }, r = (n, a) => t(toBytes(n), a);\n      if (t([255, 216, 255]))\n        return {\n          ext: \"jpg\",\n          mime: \"image/jpeg\"\n        };\n      if (t([137, 80, 78, 71, 13, 10, 26, 10]))\n        return {\n          ext: \"png\",\n          mime: \"image/png\"\n        };\n      if (t([71, 73, 70]))\n        return {\n          ext: \"gif\",\n          mime: \"image/gif\"\n        };\n      if (t([87, 69, 66, 80], { offset: 8 }))\n        return {\n          ext: \"webp\",\n          mime: \"image/webp\"\n        };\n      if (t([70, 76, 73, 70]))\n        return {\n          ext: \"flif\",\n          mime: \"image/flif\"\n        };\n      if ((t([73, 73, 42, 0]) || t([77, 77, 0, 42])) && t([67, 82], { offset: 8 }))\n        return {\n          ext: \"cr2\",\n          mime: \"image/x-canon-cr2\"\n        };\n      if (t([73, 73, 42, 0]) || t([77, 77, 0, 42]))\n        return {\n          ext: \"tif\",\n          mime: \"image/tiff\"\n        };\n      if (t([66, 77]))\n        return {\n          ext: \"bmp\",\n          mime: \"image/bmp\"\n        };\n      if (t([73, 73, 188]))\n        return {\n          ext: \"jxr\",\n          mime: \"image/vnd.ms-photo\"\n        };\n      if (t([56, 66, 80, 83]))\n        return {\n          ext: \"psd\",\n          mime: \"image/vnd.adobe.photoshop\"\n        };\n      if (t([80, 75, 3, 4])) {\n        if (t([109, 105, 109, 101, 116, 121, 112, 101, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 101, 112, 117, 98, 43, 122, 105, 112], { offset: 30 }))\n          return {\n            ext: \"epub\",\n            mime: \"application/epub+zip\"\n          };\n        if (t(xpiZipFilename, { offset: 30 }))\n          return {\n            ext: \"xpi\",\n            mime: \"application/x-xpinstall\"\n          };\n        if (r(\"mimetypeapplication/vnd.oasis.opendocument.text\", { offset: 30 }))\n          return {\n            ext: \"odt\",\n            mime: \"application/vnd.oasis.opendocument.text\"\n          };\n        if (r(\"mimetypeapplication/vnd.oasis.opendocument.spreadsheet\", { offset: 30 }))\n          return {\n            ext: \"ods\",\n            mime: \"application/vnd.oasis.opendocument.spreadsheet\"\n          };\n        if (r(\"mimetypeapplication/vnd.oasis.opendocument.presentation\", { offset: 30 }))\n          return {\n            ext: \"odp\",\n            mime: \"application/vnd.oasis.opendocument.presentation\"\n          };\n        const n = (h, l = 0) => h.findIndex((f, b, w) => b >= l && w[b] === 80 && w[b + 1] === 75 && w[b + 2] === 3 && w[b + 3] === 4);\n        let a = 0, s = !1, o = null;\n        do {\n          const h = a + 30;\n          if (s || (s = t(oxmlContentTypes, { offset: h }) || t(oxmlRels, { offset: h })), o || (r(\"word/\", { offset: h }) ? o = {\n            ext: \"docx\",\n            mime: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n          } : r(\"ppt/\", { offset: h }) ? o = {\n            ext: \"pptx\",\n            mime: \"application/vnd.openxmlformats-officedocument.presentationml.presentation\"\n          } : r(\"xl/\", { offset: h }) && (o = {\n            ext: \"xlsx\",\n            mime: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n          })), s && o)\n            return o;\n          a = n(i, h);\n        } while (a >= 0);\n        if (o)\n          return o;\n      }\n      if (t([80, 75]) && (i[2] === 3 || i[2] === 5 || i[2] === 7) && (i[3] === 4 || i[3] === 6 || i[3] === 8))\n        return {\n          ext: \"zip\",\n          mime: \"application/zip\"\n        };\n      if (t([117, 115, 116, 97, 114], { offset: 257 }))\n        return {\n          ext: \"tar\",\n          mime: \"application/x-tar\"\n        };\n      if (t([82, 97, 114, 33, 26, 7]) && (i[6] === 0 || i[6] === 1))\n        return {\n          ext: \"rar\",\n          mime: \"application/x-rar-compressed\"\n        };\n      if (t([31, 139, 8]))\n        return {\n          ext: \"gz\",\n          mime: \"application/gzip\"\n        };\n      if (t([66, 90, 104]))\n        return {\n          ext: \"bz2\",\n          mime: \"application/x-bzip2\"\n        };\n      if (t([55, 122, 188, 175, 39, 28]))\n        return {\n          ext: \"7z\",\n          mime: \"application/x-7z-compressed\"\n        };\n      if (t([120, 1]))\n        return {\n          ext: \"dmg\",\n          mime: \"application/x-apple-diskimage\"\n        };\n      if (t([51, 103, 112, 53]) || // 3gp5\n      t([0, 0, 0]) && t([102, 116, 121, 112], { offset: 4 }) && (t([109, 112, 52, 49], { offset: 8 }) || // MP41\n      t([109, 112, 52, 50], { offset: 8 }) || // MP42\n      t([105, 115, 111, 109], { offset: 8 }) || // ISOM\n      t([105, 115, 111, 50], { offset: 8 }) || // ISO2\n      t([109, 109, 112, 52], { offset: 8 }) || // MMP4\n      t([77, 52, 86], { offset: 8 }) || // M4V\n      t([100, 97, 115, 104], { offset: 8 })))\n        return {\n          ext: \"mp4\",\n          mime: \"video/mp4\"\n        };\n      if (t([77, 84, 104, 100]))\n        return {\n          ext: \"mid\",\n          mime: \"audio/midi\"\n        };\n      if (t([26, 69, 223, 163])) {\n        const n = i.subarray(4, 4100), a = n.findIndex((s, o, h) => h[o] === 66 && h[o + 1] === 130);\n        if (a !== -1) {\n          const s = a + 3, o = (h) => [...h].every((l, f) => n[s + f] === l.charCodeAt(0));\n          if (o(\"matroska\"))\n            return {\n              ext: \"mkv\",\n              mime: \"video/x-matroska\"\n            };\n          if (o(\"webm\"))\n            return {\n              ext: \"webm\",\n              mime: \"video/webm\"\n            };\n        }\n      }\n      if (t([0, 0, 0, 20, 102, 116, 121, 112, 113, 116, 32, 32]) || t([102, 114, 101, 101], { offset: 4 }) || // Type: `free`\n      t([102, 116, 121, 112, 113, 116, 32, 32], { offset: 4 }) || t([109, 100, 97, 116], { offset: 4 }) || // MJPEG\n      t([109, 111, 111, 118], { offset: 4 }) || // Type: `moov`\n      t([119, 105, 100, 101], { offset: 4 }))\n        return {\n          ext: \"mov\",\n          mime: \"video/quicktime\"\n        };\n      if (t([82, 73, 70, 70])) {\n        if (t([65, 86, 73], { offset: 8 }))\n          return {\n            ext: \"avi\",\n            mime: \"video/vnd.avi\"\n          };\n        if (t([87, 65, 86, 69], { offset: 8 }))\n          return {\n            ext: \"wav\",\n            mime: \"audio/vnd.wave\"\n          };\n        if (t([81, 76, 67, 77], { offset: 8 }))\n          return {\n            ext: \"qcp\",\n            mime: \"audio/qcelp\"\n          };\n      }\n      if (t([48, 38, 178, 117, 142, 102, 207, 17, 166, 217])) {\n        let n = 30;\n        do {\n          const a = readUInt64LE(i, n + 16);\n          if (t([145, 7, 220, 183, 183, 169, 207, 17, 142, 230, 0, 192, 12, 32, 83, 101], { offset: n })) {\n            if (t([64, 158, 105, 248, 77, 91, 207, 17, 168, 253, 0, 128, 95, 92, 68, 43], { offset: n + 24 }))\n              return {\n                ext: \"wma\",\n                mime: \"audio/x-ms-wma\"\n              };\n            if (t([192, 239, 25, 188, 77, 91, 207, 17, 168, 253, 0, 128, 95, 92, 68, 43], { offset: n + 24 }))\n              return {\n                ext: \"wmv\",\n                mime: \"video/x-ms-asf\"\n              };\n            break;\n          }\n          n += a;\n        } while (n + 24 <= i.length);\n        return {\n          ext: \"asf\",\n          mime: \"application/vnd.ms-asf\"\n        };\n      }\n      if (t([0, 0, 1, 186]) || t([0, 0, 1, 179]))\n        return {\n          ext: \"mpg\",\n          mime: \"video/mpeg\"\n        };\n      if (t([102, 116, 121, 112, 51, 103], { offset: 4 }))\n        return {\n          ext: \"3gp\",\n          mime: \"video/3gpp\"\n        };\n      for (let n = 0; n < 2 && n < i.length - 16; n++) {\n        if (t([73, 68, 51], { offset: n }) || // ID3 header\n        t([255, 226], { offset: n, mask: [255, 226] }))\n          return {\n            ext: \"mp3\",\n            mime: \"audio/mpeg\"\n          };\n        if (t([255, 228], { offset: n, mask: [255, 228] }))\n          return {\n            ext: \"mp2\",\n            mime: \"audio/mpeg\"\n          };\n        if (t([255, 248], { offset: n, mask: [255, 252] }))\n          return {\n            ext: \"mp2\",\n            mime: \"audio/mpeg\"\n          };\n        if (t([255, 240], { offset: n, mask: [255, 252] }))\n          return {\n            ext: \"mp4\",\n            mime: \"audio/mpeg\"\n          };\n      }\n      if (t([102, 116, 121, 112, 77, 52, 65], { offset: 4 }))\n        return {\n          // MPEG-4 layer 3 (audio)\n          ext: \"m4a\",\n          mime: \"audio/mp4\"\n          // RFC 4337\n        };\n      if (t([79, 112, 117, 115, 72, 101, 97, 100], { offset: 28 }))\n        return {\n          ext: \"opus\",\n          mime: \"audio/opus\"\n        };\n      if (t([79, 103, 103, 83]))\n        return t([128, 116, 104, 101, 111, 114, 97], { offset: 28 }) ? {\n          ext: \"ogv\",\n          mime: \"video/ogg\"\n        } : t([1, 118, 105, 100, 101, 111, 0], { offset: 28 }) ? {\n          ext: \"ogm\",\n          mime: \"video/ogg\"\n        } : t([127, 70, 76, 65, 67], { offset: 28 }) ? {\n          ext: \"oga\",\n          mime: \"audio/ogg\"\n        } : t([83, 112, 101, 101, 120, 32, 32], { offset: 28 }) ? {\n          ext: \"spx\",\n          mime: \"audio/ogg\"\n        } : t([1, 118, 111, 114, 98, 105, 115], { offset: 28 }) ? {\n          ext: \"ogg\",\n          mime: \"audio/ogg\"\n        } : {\n          ext: \"ogx\",\n          mime: \"application/ogg\"\n        };\n      if (t([102, 76, 97, 67]))\n        return {\n          ext: \"flac\",\n          mime: \"audio/x-flac\"\n        };\n      if (t([77, 65, 67, 32]))\n        return {\n          ext: \"ape\",\n          mime: \"audio/ape\"\n        };\n      if (t([119, 118, 112, 107]))\n        return {\n          ext: \"wv\",\n          mime: \"audio/wavpack\"\n        };\n      if (t([35, 33, 65, 77, 82, 10]))\n        return {\n          ext: \"amr\",\n          mime: \"audio/amr\"\n        };\n      if (t([37, 80, 68, 70]))\n        return {\n          ext: \"pdf\",\n          mime: \"application/pdf\"\n        };\n      if (t([77, 90]))\n        return {\n          ext: \"exe\",\n          mime: \"application/x-msdownload\"\n        };\n      if ((i[0] === 67 || i[0] === 70) && t([87, 83], { offset: 1 }))\n        return {\n          ext: \"swf\",\n          mime: \"application/x-shockwave-flash\"\n        };\n      if (t([123, 92, 114, 116, 102]))\n        return {\n          ext: \"rtf\",\n          mime: \"application/rtf\"\n        };\n      if (t([0, 97, 115, 109]))\n        return {\n          ext: \"wasm\",\n          mime: \"application/wasm\"\n        };\n      if (t([119, 79, 70, 70]) && (t([0, 1, 0, 0], { offset: 4 }) || t([79, 84, 84, 79], { offset: 4 })))\n        return {\n          ext: \"woff\",\n          mime: \"font/woff\"\n        };\n      if (t([119, 79, 70, 50]) && (t([0, 1, 0, 0], { offset: 4 }) || t([79, 84, 84, 79], { offset: 4 })))\n        return {\n          ext: \"woff2\",\n          mime: \"font/woff2\"\n        };\n      if (t([76, 80], { offset: 34 }) && (t([0, 0, 1], { offset: 8 }) || t([1, 0, 2], { offset: 8 }) || t([2, 0, 2], { offset: 8 })))\n        return {\n          ext: \"eot\",\n          mime: \"application/vnd.ms-fontobject\"\n        };\n      if (t([0, 1, 0, 0, 0]))\n        return {\n          ext: \"ttf\",\n          mime: \"font/ttf\"\n        };\n      if (t([79, 84, 84, 79, 0]))\n        return {\n          ext: \"otf\",\n          mime: \"font/otf\"\n        };\n      if (t([0, 0, 1, 0]))\n        return {\n          ext: \"ico\",\n          mime: \"image/x-icon\"\n        };\n      if (t([0, 0, 2, 0]))\n        return {\n          ext: \"cur\",\n          mime: \"image/x-icon\"\n        };\n      if (t([70, 76, 86, 1]))\n        return {\n          ext: \"flv\",\n          mime: \"video/x-flv\"\n        };\n      if (t([37, 33]))\n        return {\n          ext: \"ps\",\n          mime: \"application/postscript\"\n        };\n      if (t([253, 55, 122, 88, 90, 0]))\n        return {\n          ext: \"xz\",\n          mime: \"application/x-xz\"\n        };\n      if (t([83, 81, 76, 105]))\n        return {\n          ext: \"sqlite\",\n          mime: \"application/x-sqlite3\"\n        };\n      if (t([78, 69, 83, 26]))\n        return {\n          ext: \"nes\",\n          mime: \"application/x-nintendo-nes-rom\"\n        };\n      if (t([67, 114, 50, 52]))\n        return {\n          ext: \"crx\",\n          mime: \"application/x-google-chrome-extension\"\n        };\n      if (t([77, 83, 67, 70]) || t([73, 83, 99, 40]))\n        return {\n          ext: \"cab\",\n          mime: \"application/vnd.ms-cab-compressed\"\n        };\n      if (t([33, 60, 97, 114, 99, 104, 62, 10, 100, 101, 98, 105, 97, 110, 45, 98, 105, 110, 97, 114, 121]))\n        return {\n          ext: \"deb\",\n          mime: \"application/x-deb\"\n        };\n      if (t([33, 60, 97, 114, 99, 104, 62]))\n        return {\n          ext: \"ar\",\n          mime: \"application/x-unix-archive\"\n        };\n      if (t([237, 171, 238, 219]))\n        return {\n          ext: \"rpm\",\n          mime: \"application/x-rpm\"\n        };\n      if (t([31, 160]) || t([31, 157]))\n        return {\n          ext: \"Z\",\n          mime: \"application/x-compress\"\n        };\n      if (t([76, 90, 73, 80]))\n        return {\n          ext: \"lz\",\n          mime: \"application/x-lzip\"\n        };\n      if (t([208, 207, 17, 224, 161, 177, 26, 225]))\n        return {\n          ext: \"msi\",\n          mime: \"application/x-msi\"\n        };\n      if (t([6, 14, 43, 52, 2, 5, 1, 1, 13, 1, 2, 1, 1, 2]))\n        return {\n          ext: \"mxf\",\n          mime: \"application/mxf\"\n        };\n      if (t([71], { offset: 4 }) && (t([71], { offset: 192 }) || t([71], { offset: 196 })))\n        return {\n          ext: \"mts\",\n          mime: \"video/mp2t\"\n        };\n      if (t([66, 76, 69, 78, 68, 69, 82]))\n        return {\n          ext: \"blend\",\n          mime: \"application/x-blender\"\n        };\n      if (t([66, 80, 71, 251]))\n        return {\n          ext: \"bpg\",\n          mime: \"image/bpg\"\n        };\n      if (t([0, 0, 0, 12, 106, 80, 32, 32, 13, 10, 135, 10])) {\n        if (t([106, 112, 50, 32], { offset: 20 }))\n          return {\n            ext: \"jp2\",\n            mime: \"image/jp2\"\n          };\n        if (t([106, 112, 120, 32], { offset: 20 }))\n          return {\n            ext: \"jpx\",\n            mime: \"image/jpx\"\n          };\n        if (t([106, 112, 109, 32], { offset: 20 }))\n          return {\n            ext: \"jpm\",\n            mime: \"image/jpm\"\n          };\n        if (t([109, 106, 112, 50], { offset: 20 }))\n          return {\n            ext: \"mj2\",\n            mime: \"image/mj2\"\n          };\n      }\n      if (t([70, 79, 82, 77]))\n        return {\n          ext: \"aif\",\n          mime: \"audio/aiff\"\n        };\n      if (r(\"<?xml \"))\n        return {\n          ext: \"xml\",\n          mime: \"application/xml\"\n        };\n      if (t([66, 79, 79, 75, 77, 79, 66, 73], { offset: 60 }))\n        return {\n          ext: \"mobi\",\n          mime: \"application/x-mobipocket-ebook\"\n        };\n      if (t([102, 116, 121, 112], { offset: 4 })) {\n        if (t([109, 105, 102, 49], { offset: 8 }))\n          return {\n            ext: \"heic\",\n            mime: \"image/heif\"\n          };\n        if (t([109, 115, 102, 49], { offset: 8 }))\n          return {\n            ext: \"heic\",\n            mime: \"image/heif-sequence\"\n          };\n        if (t([104, 101, 105, 99], { offset: 8 }) || t([104, 101, 105, 120], { offset: 8 }))\n          return {\n            ext: \"heic\",\n            mime: \"image/heic\"\n          };\n        if (t([104, 101, 118, 99], { offset: 8 }) || t([104, 101, 118, 120], { offset: 8 }))\n          return {\n            ext: \"heic\",\n            mime: \"image/heic-sequence\"\n          };\n      }\n      return t([171, 75, 84, 88, 32, 49, 49, 187, 13, 10, 26, 10]) ? {\n        ext: \"ktx\",\n        mime: \"image/ktx\"\n      } : t([68, 73, 67, 77], { offset: 128 }) ? {\n        ext: \"dcm\",\n        mime: \"application/dicom\"\n      } : t([77, 80, 43]) ? {\n        ext: \"mpc\",\n        mime: \"audio/x-musepack\"\n      } : t([77, 80, 67, 75]) ? {\n        ext: \"mpc\",\n        mime: \"audio/x-musepack\"\n      } : t([66, 69, 71, 73, 78, 58]) ? {\n        ext: \"ics\",\n        mime: \"text/calendar\"\n      } : t([103, 108, 84, 70, 2, 0, 0, 0]) ? {\n        ext: \"glb\",\n        mime: \"model/gltf-binary\"\n      } : t([212, 195, 178, 161]) || t([161, 178, 195, 212]) ? {\n        ext: \"pcap\",\n        mime: \"application/vnd.tcpdump.pcap\"\n      } : null;\n    };\n    module.exports = fileType, module.exports.default = fileType, Object.defineProperty(fileType, \"minimumBytes\", { value: 4100 }), module.exports.stream = (readableStream) => new Promise((resolve, reject) => {\n      const stream = eval(\"require\")(\"stream\");\n      readableStream.once(\"readable\", () => {\n        const e = new stream.PassThrough(), i = readableStream.read(module.exports.minimumBytes) || readableStream.read();\n        try {\n          e.fileType = fileType(i);\n        } catch (t) {\n          reject(t);\n        }\n        readableStream.unshift(i), stream.pipeline ? resolve(stream.pipeline(readableStream, e, () => {\n        })) : resolve(readableStream.pipe(e));\n      });\n    });\n  }(fileType)), fileType.exports;\n}\nvar hasRequiredImageType;\nfunction requireImageType() {\n  if (hasRequiredImageType) return imageType$1.exports;\n  hasRequiredImageType = 1;\n  const e = requireFileType(), i = /* @__PURE__ */ new Set([\n    \"jpg\",\n    \"png\",\n    \"gif\",\n    \"webp\",\n    \"flif\",\n    \"cr2\",\n    \"tif\",\n    \"bmp\",\n    \"jxr\",\n    \"psd\",\n    \"ico\",\n    \"bpg\",\n    \"jp2\",\n    \"jpm\",\n    \"jpx\",\n    \"heic\",\n    \"cur\",\n    \"dcm\"\n  ]), t = (r) => {\n    const n = e(r);\n    return i.has(n && n.ext) ? n : null;\n  };\n  return imageType$1.exports = t, imageType$1.exports.default = t, Object.defineProperty(t, \"minimumBytes\", { value: e.minimumBytes }), imageType$1.exports;\n}\nvar imageTypeExports = requireImageType();\nconst imageType = /* @__PURE__ */ getDefaultExportFromCjs(imageTypeExports);\nfunction guessStripByteCounts(e) {\n  if (e.compression !== 1)\n    throw new Error(\"missing mandatory StripByteCounts field in compressed image\");\n  const i = e.rowsPerStrip * e.width * e.samplesPerPixel * (e.bitsPerSample / 8);\n  return new Array(e.stripOffsets.length).fill(i);\n}\nfunction applyHorizontalDifferencing8Bit(e, i, t) {\n  let r = 0;\n  for (; r < e.length; ) {\n    for (let n = t; n < i * t; n += t)\n      for (let a = 0; a < t; a++)\n        e[r + n + a] = e[r + n + a] + e[r + n - (t - a)] & 255;\n    r += i * t;\n  }\n}\nfunction applyHorizontalDifferencing16Bit(e, i, t) {\n  let r = 0;\n  for (; r < e.length; ) {\n    for (let n = t; n < i * t; n += t)\n      for (let a = 0; a < t; a++)\n        e[r + n + a] = e[r + n + a] + e[r + n - (t - a)] & 65535;\n    r += i * t;\n  }\n}\nconst tagsById$2 = {\n  33434: \"ExposureTime\",\n  33437: \"FNumber\",\n  34850: \"ExposureProgram\",\n  34852: \"SpectralSensitivity\",\n  34855: \"ISOSpeedRatings\",\n  34856: \"OECF\",\n  34864: \"SensitivityType\",\n  34865: \"StandardOutputSensitivity\",\n  34866: \"RecommendedExposureIndex\",\n  34867: \"ISOSpeed\",\n  34868: \"ISOSpeedLatitudeyyy\",\n  34869: \"ISOSpeedLatitudezzz\",\n  36864: \"ExifVersion\",\n  36867: \"DateTimeOriginal\",\n  36868: \"DateTimeDigitized\",\n  37121: \"ComponentsConfiguration\",\n  37122: \"CompressedBitsPerPixel\",\n  37377: \"ShutterSpeedValue\",\n  37378: \"ApertureValue\",\n  37379: \"BrightnessValue\",\n  37380: \"ExposureBiasValue\",\n  37381: \"MaxApertureValue\",\n  37382: \"SubjectDistance\",\n  37383: \"MeteringMode\",\n  37384: \"LightSource\",\n  37385: \"Flash\",\n  37386: \"FocalLength\",\n  37396: \"SubjectArea\",\n  37500: \"MakerNote\",\n  37510: \"UserComment\",\n  37520: \"SubsecTime\",\n  37521: \"SubsecTimeOriginal\",\n  37522: \"SubsecTimeDigitized\",\n  40960: \"FlashpixVersion\",\n  40961: \"ColorSpace\",\n  40962: \"PixelXDimension\",\n  40963: \"PixelYDimension\",\n  40964: \"RelatedSoundFile\",\n  41483: \"FlashEnergy\",\n  41484: \"SpatialFrequencyResponse\",\n  41486: \"FocalPlaneXResolution\",\n  41487: \"FocalPlaneYResolution\",\n  41488: \"FocalPlaneResolutionUnit\",\n  41492: \"SubjectLocation\",\n  41493: \"ExposureIndex\",\n  41495: \"SensingMethod\",\n  41728: \"FileSource\",\n  41729: \"SceneType\",\n  41730: \"CFAPattern\",\n  41985: \"CustomRendered\",\n  41986: \"ExposureMode\",\n  41987: \"WhiteBalance\",\n  41988: \"DigitalZoomRatio\",\n  41989: \"FocalLengthIn35mmFilm\",\n  41990: \"SceneCaptureType\",\n  41991: \"GainControl\",\n  41992: \"Contrast\",\n  41993: \"Saturation\",\n  41994: \"Sharpness\",\n  41995: \"DeviceSettingDescription\",\n  41996: \"SubjectDistanceRange\",\n  42016: \"ImageUniqueID\",\n  42032: \"CameraOwnerName\",\n  42033: \"BodySerialNumber\",\n  42034: \"LensSpecification\",\n  42035: \"LensMake\",\n  42036: \"LensModel\",\n  42037: \"LensSerialNumber\",\n  42240: \"Gamma\"\n}, tagsByName$2 = {};\nfor (let e in tagsById$2)\n  tagsByName$2[tagsById$2[e]] = Number(e);\nconst exif = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  tagsById: tagsById$2,\n  tagsByName: tagsByName$2\n}, Symbol.toStringTag, { value: \"Module\" })), tagsById$1 = {\n  0: \"GPSVersionID\",\n  1: \"GPSLatitudeRef\",\n  2: \"GPSLatitude\",\n  3: \"GPSLongitudeRef\",\n  4: \"GPSLongitude\",\n  5: \"GPSAltitudeRef\",\n  6: \"GPSAltitude\",\n  7: \"GPSTimeStamp\",\n  8: \"GPSSatellites\",\n  9: \"GPSStatus\",\n  10: \"GPSMeasureMode\",\n  11: \"GPSDOP\",\n  12: \"GPSSpeedRef\",\n  13: \"GPSSpeed\",\n  14: \"GPSTrackRef\",\n  15: \"GPSTrack\",\n  16: \"GPSImgDirectionRef\",\n  17: \"GPSImgDirection\",\n  18: \"GPSMapDatum\",\n  19: \"GPSDestLatitudeRef\",\n  20: \"GPSDestLatitude\",\n  21: \"GPSDestLongitudeRef\",\n  22: \"GPSDestLongitude\",\n  23: \"GPSDestBearingRef\",\n  24: \"GPSDestBearing\",\n  25: \"GPSDestDistanceRef\",\n  26: \"GPSDestDistance\",\n  27: \"GPSProcessingMethod\",\n  28: \"GPSAreaInformation\",\n  29: \"GPSDateStamp\",\n  30: \"GPSDifferential\",\n  31: \"GPSHPositioningError\"\n}, tagsByName$1 = {};\nfor (let e in tagsById$1)\n  tagsByName$1[tagsById$1[e]] = Number(e);\nconst gps = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  tagsById: tagsById$1,\n  tagsByName: tagsByName$1\n}, Symbol.toStringTag, { value: \"Module\" })), tagsById = {\n  // Baseline tags\n  254: \"NewSubfileType\",\n  255: \"SubfileType\",\n  256: \"ImageWidth\",\n  257: \"ImageLength\",\n  258: \"BitsPerSample\",\n  259: \"Compression\",\n  262: \"PhotometricInterpretation\",\n  263: \"Threshholding\",\n  264: \"CellWidth\",\n  265: \"CellLength\",\n  266: \"FillOrder\",\n  270: \"ImageDescription\",\n  271: \"Make\",\n  272: \"Model\",\n  273: \"StripOffsets\",\n  274: \"Orientation\",\n  277: \"SamplesPerPixel\",\n  278: \"RowsPerStrip\",\n  279: \"StripByteCounts\",\n  280: \"MinSampleValue\",\n  281: \"MaxSampleValue\",\n  282: \"XResolution\",\n  283: \"YResolution\",\n  284: \"PlanarConfiguration\",\n  288: \"FreeOffsets\",\n  289: \"FreeByteCounts\",\n  290: \"GrayResponseUnit\",\n  291: \"GrayResponseCurve\",\n  296: \"ResolutionUnit\",\n  305: \"Software\",\n  306: \"DateTime\",\n  315: \"Artist\",\n  316: \"HostComputer\",\n  320: \"ColorMap\",\n  338: \"ExtraSamples\",\n  33432: \"Copyright\",\n  // Extension tags\n  269: \"DocumentName\",\n  285: \"PageName\",\n  286: \"XPosition\",\n  287: \"YPosition\",\n  292: \"T4Options\",\n  293: \"T6Options\",\n  297: \"PageNumber\",\n  301: \"TransferFunction\",\n  317: \"Predictor\",\n  318: \"WhitePoint\",\n  319: \"PrimaryChromaticities\",\n  321: \"HalftoneHints\",\n  322: \"TileWidth\",\n  323: \"TileLength\",\n  324: \"TileOffsets\",\n  325: \"TileByteCounts\",\n  326: \"BadFaxLines\",\n  327: \"CleanFaxData\",\n  328: \"ConsecutiveBadFaxLines\",\n  330: \"SubIFDs\",\n  332: \"InkSet\",\n  333: \"InkNames\",\n  334: \"NumberOfInks\",\n  336: \"DotRange\",\n  337: \"TargetPrinter\",\n  339: \"SampleFormat\",\n  340: \"SMinSampleValue\",\n  341: \"SMaxSampleValue\",\n  342: \"TransferRange\",\n  343: \"ClipPath\",\n  344: \"XClipPathUnits\",\n  345: \"YClipPathUnits\",\n  346: \"Indexed\",\n  347: \"JPEGTables\",\n  351: \"OPIProxy\",\n  400: \"GlobalParametersIFD\",\n  401: \"ProfileType\",\n  402: \"FaxProfile\",\n  403: \"CodingMethods\",\n  404: \"VersionYear\",\n  405: \"ModeNumber\",\n  433: \"Decode\",\n  434: \"DefaultImageColor\",\n  512: \"JPEGProc\",\n  513: \"JPEGInterchangeFormat\",\n  514: \"JPEGInterchangeFormatLength\",\n  515: \"JPEGRestartInterval\",\n  517: \"JPEGLosslessPredictors\",\n  518: \"JPEGPointTransforms\",\n  519: \"JPEGQTables\",\n  520: \"JPEGDCTables\",\n  521: \"JPEGACTables\",\n  529: \"YCbCrCoefficients\",\n  530: \"YCbCrSubSampling\",\n  531: \"YCbCrPositioning\",\n  532: \"ReferenceBlackWhite\",\n  559: \"StripRowCounts\",\n  700: \"XMP\",\n  32781: \"ImageID\",\n  34732: \"ImageLayer\",\n  // Private tags\n  32932: \"WangAnnotatio\",\n  33445: \"MDFileTag\",\n  33446: \"MDScalePixel\",\n  33447: \"MDColorTable\",\n  33448: \"MDLabName\",\n  33449: \"MDSampleInfo\",\n  33450: \"MDPrepDate\",\n  33451: \"MDPrepTime\",\n  33452: \"MDFileUnits\",\n  33550: \"ModelPixelScaleTag\",\n  33723: \"IPTC\",\n  33918: \"INGRPacketDataTag\",\n  33919: \"INGRFlagRegisters\",\n  33920: \"IrasBTransformationMatrix\",\n  33922: \"ModelTiepointTag\",\n  34264: \"ModelTransformationTag\",\n  34377: \"Photoshop\",\n  34665: \"ExifIFD\",\n  34675: \"ICCProfile\",\n  34735: \"GeoKeyDirectoryTag\",\n  34736: \"GeoDoubleParamsTag\",\n  34737: \"GeoAsciiParamsTag\",\n  34853: \"GPSIFD\",\n  34908: \"HylaFAXFaxRecvParams\",\n  34909: \"HylaFAXFaxSubAddress\",\n  34910: \"HylaFAXFaxRecvTime\",\n  37724: \"ImageSourceData\",\n  40965: \"InteroperabilityIFD\",\n  42112: \"GDAL_METADATA\",\n  42113: \"GDAL_NODATA\",\n  50215: \"OceScanjobDescription\",\n  50216: \"OceApplicationSelector\",\n  50217: \"OceIdentificationNumber\",\n  50218: \"OceImageLogicCharacteristics\",\n  50706: \"DNGVersion\",\n  50707: \"DNGBackwardVersion\",\n  50708: \"UniqueCameraModel\",\n  50709: \"LocalizedCameraModel\",\n  50710: \"CFAPlaneColor\",\n  50711: \"CFALayout\",\n  50712: \"LinearizationTable\",\n  50713: \"BlackLevelRepeatDim\",\n  50714: \"BlackLevel\",\n  50715: \"BlackLevelDeltaH\",\n  50716: \"BlackLevelDeltaV\",\n  50717: \"WhiteLevel\",\n  50718: \"DefaultScale\",\n  50719: \"DefaultCropOrigin\",\n  50720: \"DefaultCropSize\",\n  50721: \"ColorMatrix1\",\n  50722: \"ColorMatrix2\",\n  50723: \"CameraCalibration1\",\n  50724: \"CameraCalibration2\",\n  50725: \"ReductionMatrix1\",\n  50726: \"ReductionMatrix2\",\n  50727: \"AnalogBalance\",\n  50728: \"AsShotNeutral\",\n  50729: \"AsShotWhiteXY\",\n  50730: \"BaselineExposure\",\n  50731: \"BaselineNoise\",\n  50732: \"BaselineSharpness\",\n  50733: \"BayerGreenSplit\",\n  50734: \"LinearResponseLimit\",\n  50735: \"CameraSerialNumber\",\n  50736: \"LensInfo\",\n  50737: \"ChromaBlurRadius\",\n  50738: \"AntiAliasStrength\",\n  50740: \"DNGPrivateData\",\n  50741: \"MakerNoteSafety\",\n  50778: \"CalibrationIlluminant1\",\n  50779: \"CalibrationIlluminant2\",\n  50780: \"BestQualityScale\",\n  50784: \"AliasLayerMetadata\"\n}, tagsByName = {};\nfor (let e in tagsById)\n  tagsByName[tagsById[e]] = Number(e);\nconst standard = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  tagsById,\n  tagsByName\n}, Symbol.toStringTag, { value: \"Module\" })), tags = {\n  standard,\n  exif,\n  gps\n};\nclass IFD {\n  constructor(i) {\n    if (!i)\n      throw new Error(\"missing kind\");\n    this.data = new Uint8Array(), this.fields = /* @__PURE__ */ new Map(), this.kind = i, this._hasMap = !1, this._map = {};\n  }\n  get(i) {\n    if (typeof i == \"number\")\n      return this.fields.get(i);\n    if (typeof i == \"string\")\n      return this.fields.get(tags[this.kind].tagsByName[i]);\n    throw new Error(\"expected a number or string\");\n  }\n  get map() {\n    if (!this._hasMap) {\n      const i = tags[this.kind].tagsById;\n      for (let t of this.fields.keys())\n        i[t] && (this._map[i[t]] = this.fields.get(t));\n      this._hasMap = !0;\n    }\n    return this._map;\n  }\n}\nlet types = /* @__PURE__ */ new Map([\n  [1, [1, readByte]],\n  [2, [1, readASCII]],\n  [3, [2, readShort]],\n  [4, [4, readLong]],\n  [5, [8, readRational]],\n  [6, [1, readSByte]],\n  [7, [1, readByte]],\n  [8, [2, readSShort]],\n  [9, [4, readSLong]],\n  [10, [8, readSRational]],\n  [11, [4, readFloat]],\n  [12, [8, readDouble]]\n  // DOUBLE\n]);\nfunction getByteLength(e, i) {\n  const t = types.get(e);\n  if (!t)\n    throw new Error(`type not found: ${e}`);\n  return t[0] * i;\n}\nfunction readData(e, i, t) {\n  const r = types.get(i);\n  if (!r)\n    throw new Error(`type not found: ${i}`);\n  return r[1](e, t);\n}\nfunction readByte(e, i) {\n  if (i === 1)\n    return e.readUint8();\n  let t = new Uint8Array(i);\n  for (let r = 0; r < i; r++)\n    t[r] = e.readUint8();\n  return t;\n}\nfunction readASCII(e, i) {\n  let t = [], r = \"\";\n  for (let n = 0; n < i; n++) {\n    let a = String.fromCharCode(e.readUint8());\n    a === \"\\0\" ? (t.push(r), r = \"\") : r += a;\n  }\n  return t.length === 1 ? t[0] : t;\n}\nfunction readShort(e, i) {\n  if (i === 1)\n    return e.readUint16();\n  let t = new Uint16Array(i);\n  for (let r = 0; r < i; r++)\n    t[r] = e.readUint16();\n  return t;\n}\nfunction readLong(e, i) {\n  if (i === 1)\n    return e.readUint32();\n  let t = new Uint32Array(i);\n  for (let r = 0; r < i; r++)\n    t[r] = e.readUint32();\n  return t;\n}\nfunction readRational(e, i) {\n  if (i === 1)\n    return e.readUint32() / e.readUint32();\n  let t = new Array(i);\n  for (let r = 0; r < i; r++)\n    t[r] = e.readUint32() / e.readUint32();\n  return t;\n}\nfunction readSByte(e, i) {\n  if (i === 1)\n    return e.readInt8();\n  let t = new Int8Array(i);\n  for (let r = 0; r < i; r++)\n    t[r] = e.readInt8();\n  return t;\n}\nfunction readSShort(e, i) {\n  if (i === 1)\n    return e.readInt16();\n  let t = new Int16Array(i);\n  for (let r = 0; r < i; r++)\n    t[r] = e.readInt16();\n  return t;\n}\nfunction readSLong(e, i) {\n  if (i === 1)\n    return e.readInt32();\n  let t = new Int32Array(i);\n  for (let r = 0; r < i; r++)\n    t[r] = e.readInt32();\n  return t;\n}\nfunction readSRational(e, i) {\n  if (i === 1)\n    return e.readInt32() / e.readInt32();\n  let t = new Array(i);\n  for (let r = 0; r < i; r++)\n    t[r] = e.readInt32() / e.readInt32();\n  return t;\n}\nfunction readFloat(e, i) {\n  if (i === 1)\n    return e.readFloat32();\n  let t = new Float32Array(i);\n  for (let r = 0; r < i; r++)\n    t[r] = e.readFloat32();\n  return t;\n}\nfunction readDouble(e, i) {\n  if (i === 1)\n    return e.readFloat64();\n  let t = new Float64Array(i);\n  for (let r = 0; r < i; r++)\n    t[r] = e.readFloat64();\n  return t;\n}\nconst CLEAR_CODE = 256, EOI_CODE = 257, TABLE_START = 258, MIN_BIT_LENGTH = 9;\nlet stringTable = [];\nfunction initializeStringTable() {\n  if (stringTable.length === 0) {\n    for (let i = 0; i < 256; i++)\n      stringTable.push([i]);\n    const e = [];\n    for (let i = 256; i < 4096; i++)\n      stringTable.push(e);\n  }\n}\nconst andTable = [511, 1023, 2047, 4095], bitJumps = [0, 0, 0, 0, 0, 0, 0, 0, 0, 511, 1023, 2047, 4095];\nclass LzwDecoder {\n  constructor(i) {\n    this.nextData = 0, this.nextBits = 0, this.bytePointer = 0, this.tableLength = TABLE_START, this.currentBitLength = MIN_BIT_LENGTH, this.stripArray = new Uint8Array(i.buffer, i.byteOffset, i.byteLength), this.outData = new IOBuffer(i.byteLength), this.initializeTable();\n  }\n  decode() {\n    let i = 0, t = 0;\n    for (; (i = this.getNextCode()) !== EOI_CODE; )\n      if (i === CLEAR_CODE) {\n        if (this.initializeTable(), i = this.getNextCode(), i === EOI_CODE)\n          break;\n        this.writeString(this.stringFromCode(i)), t = i;\n      } else if (this.isInTable(i))\n        this.writeString(this.stringFromCode(i)), this.addStringToTable(this.stringFromCode(t).concat(this.stringFromCode(i)[0])), t = i;\n      else {\n        const n = this.stringFromCode(t).concat(this.stringFromCode(t)[0]);\n        this.writeString(n), this.addStringToTable(n), t = i;\n      }\n    const r = this.outData.toArray();\n    return new DataView(r.buffer, r.byteOffset, r.byteLength);\n  }\n  initializeTable() {\n    initializeStringTable(), this.tableLength = TABLE_START, this.currentBitLength = MIN_BIT_LENGTH;\n  }\n  writeString(i) {\n    this.outData.writeBytes(i);\n  }\n  stringFromCode(i) {\n    return stringTable[i];\n  }\n  isInTable(i) {\n    return i < this.tableLength;\n  }\n  addStringToTable(i) {\n    if (stringTable[this.tableLength++] = i, stringTable.length > 4096)\n      throw stringTable = [], new Error(\"LZW decoding error. Please open an issue at https://github.com/image-js/tiff/issues/new/choose (include a test image).\");\n    this.tableLength === bitJumps[this.currentBitLength] && this.currentBitLength++;\n  }\n  getNextCode() {\n    this.nextData = this.nextData << 8 | this.stripArray[this.bytePointer++] & 255, this.nextBits += 8, this.nextBits < this.currentBitLength && (this.nextData = this.nextData << 8 | this.stripArray[this.bytePointer++] & 255, this.nextBits += 8);\n    const i = this.nextData >> this.nextBits - this.currentBitLength & andTable[this.currentBitLength - 9];\n    return this.nextBits -= this.currentBitLength, this.bytePointer > this.stripArray.length ? 257 : i;\n  }\n}\nfunction decompressLzw(e) {\n  return new LzwDecoder(e).decode();\n}\nconst dateTimeRegex = /^(\\d{4}):(\\d{2}):(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})$/;\nclass TiffIfd extends IFD {\n  constructor() {\n    super(\"standard\");\n  }\n  // Custom fields\n  get size() {\n    return this.width * this.height;\n  }\n  get width() {\n    return this.imageWidth;\n  }\n  get height() {\n    return this.imageLength;\n  }\n  get components() {\n    return this.samplesPerPixel;\n  }\n  get date() {\n    let i = /* @__PURE__ */ new Date(), t = dateTimeRegex.exec(this.dateTime);\n    if (t === null)\n      throw new Error(`invalid dateTime: ${this.dateTime}`);\n    return i.setFullYear(Number(t[1]), Number(t[2]) - 1, Number(t[3])), i.setHours(Number(t[4]), Number(t[5]), Number(t[6])), i;\n  }\n  // IFD fields\n  get newSubfileType() {\n    return this.get(\"NewSubfileType\");\n  }\n  get imageWidth() {\n    return this.get(\"ImageWidth\");\n  }\n  get imageLength() {\n    return this.get(\"ImageLength\");\n  }\n  get bitsPerSample() {\n    const i = this.get(\"BitsPerSample\");\n    return i && typeof i != \"number\" ? i[0] : i;\n  }\n  get alpha() {\n    const i = this.extraSamples;\n    return i ? i[0] !== 0 : !1;\n  }\n  get associatedAlpha() {\n    const i = this.extraSamples;\n    return i ? i[0] === 1 : !1;\n  }\n  get extraSamples() {\n    return alwaysArray(this.get(\"ExtraSamples\"));\n  }\n  get compression() {\n    return this.get(\"Compression\") || 1;\n  }\n  get type() {\n    return this.get(\"PhotometricInterpretation\");\n  }\n  get fillOrder() {\n    return this.get(\"FillOrder\") || 1;\n  }\n  get documentName() {\n    return this.get(\"DocumentName\");\n  }\n  get imageDescription() {\n    return this.get(\"ImageDescription\");\n  }\n  get stripOffsets() {\n    return alwaysArray(this.get(\"StripOffsets\"));\n  }\n  get orientation() {\n    return this.get(\"Orientation\");\n  }\n  get samplesPerPixel() {\n    return this.get(\"SamplesPerPixel\") || 1;\n  }\n  get rowsPerStrip() {\n    return this.get(\"RowsPerStrip\");\n  }\n  get stripByteCounts() {\n    return alwaysArray(this.get(\"StripByteCounts\"));\n  }\n  get minSampleValue() {\n    return this.get(\"MinSampleValue\") || 0;\n  }\n  get maxSampleValue() {\n    return this.get(\"MaxSampleValue\") || Math.pow(2, this.bitsPerSample) - 1;\n  }\n  get xResolution() {\n    return this.get(\"XResolution\");\n  }\n  get yResolution() {\n    return this.get(\"YResolution\");\n  }\n  get planarConfiguration() {\n    return this.get(\"PlanarConfiguration\") || 1;\n  }\n  get resolutionUnit() {\n    return this.get(\"ResolutionUnit\") || 2;\n  }\n  get dateTime() {\n    return this.get(\"DateTime\");\n  }\n  get predictor() {\n    return this.get(\"Predictor\") || 1;\n  }\n  get sampleFormat() {\n    return this.get(\"SampleFormat\") || 1;\n  }\n  get sMinSampleValue() {\n    return this.get(\"SMinSampleValue\") || this.minSampleValue;\n  }\n  get sMaxSampleValue() {\n    return this.get(\"SMaxSampleValue\") || this.maxSampleValue;\n  }\n  get palette() {\n    const i = 2 ** this.bitsPerSample, t = this.get(\"ColorMap\");\n    if (!t)\n      return;\n    if (t.length !== 3 * i)\n      throw new Error(`ColorMap size must be ${i}`);\n    const r = [];\n    for (let n = 0; n < i; n++)\n      r.push([\n        t[n],\n        t[n + i],\n        t[n + 2 * i]\n      ]);\n    return r;\n  }\n}\nfunction alwaysArray(e) {\n  return typeof e == \"number\" ? [e] : e;\n}\nfunction zero$1(e) {\n  let i = e.length;\n  for (; --i >= 0; )\n    e[i] = 0;\n}\nconst MIN_MATCH$1 = 3, MAX_MATCH$1 = 258, LENGTH_CODES$1 = 29, LITERALS$1 = 256, L_CODES$1 = LITERALS$1 + 1 + LENGTH_CODES$1, D_CODES$1 = 30, DIST_CODE_LEN = 512, static_ltree = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\nconst static_dtree = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\nconst _dist_code = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\nconst _length_code = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\nconst base_length = new Array(LENGTH_CODES$1);\nzero$1(base_length);\nconst base_dist = new Array(D_CODES$1);\nzero$1(base_dist);\nconst adler32 = (e, i, t, r) => {\n  let n = e & 65535 | 0, a = e >>> 16 & 65535 | 0, s = 0;\n  for (; t !== 0; ) {\n    s = t > 2e3 ? 2e3 : t, t -= s;\n    do\n      n = n + i[r++] | 0, a = a + n | 0;\n    while (--s);\n    n %= 65521, a %= 65521;\n  }\n  return n | a << 16 | 0;\n};\nvar adler32_1$1 = adler32;\nconst makeTable = () => {\n  let e, i = [];\n  for (var t = 0; t < 256; t++) {\n    e = t;\n    for (var r = 0; r < 8; r++)\n      e = e & 1 ? 3988292384 ^ e >>> 1 : e >>> 1;\n    i[t] = e;\n  }\n  return i;\n}, crcTable = new Uint32Array(makeTable()), crc32 = (e, i, t, r) => {\n  const n = crcTable, a = r + t;\n  e ^= -1;\n  for (let s = r; s < a; s++)\n    e = e >>> 8 ^ n[(e ^ i[s]) & 255];\n  return e ^ -1;\n};\nvar crc32_1$1 = crc32, messages$1 = {\n  2: \"need dictionary\",\n  /* Z_NEED_DICT       2  */\n  1: \"stream end\",\n  /* Z_STREAM_END      1  */\n  0: \"\",\n  /* Z_OK              0  */\n  \"-1\": \"file error\",\n  /* Z_ERRNO         (-1) */\n  \"-2\": \"stream error\",\n  /* Z_STREAM_ERROR  (-2) */\n  \"-3\": \"data error\",\n  /* Z_DATA_ERROR    (-3) */\n  \"-4\": \"insufficient memory\",\n  /* Z_MEM_ERROR     (-4) */\n  \"-5\": \"buffer error\",\n  /* Z_BUF_ERROR     (-5) */\n  \"-6\": \"incompatible version\"\n  /* Z_VERSION_ERROR (-6) */\n}, constants$2 = {\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH: 0,\n  Z_FINISH: 4,\n  Z_BLOCK: 5,\n  Z_TREES: 6,\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK: 0,\n  Z_STREAM_END: 1,\n  Z_NEED_DICT: 2,\n  Z_STREAM_ERROR: -2,\n  Z_DATA_ERROR: -3,\n  Z_MEM_ERROR: -4,\n  Z_BUF_ERROR: -5,\n  /* The deflate compression method */\n  Z_DEFLATED: 8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\nconst _has = (e, i) => Object.prototype.hasOwnProperty.call(e, i);\nvar assign = function(e) {\n  const i = Array.prototype.slice.call(arguments, 1);\n  for (; i.length; ) {\n    const t = i.shift();\n    if (t) {\n      if (typeof t != \"object\")\n        throw new TypeError(t + \"must be non-object\");\n      for (const r in t)\n        _has(t, r) && (e[r] = t[r]);\n    }\n  }\n  return e;\n}, flattenChunks = (e) => {\n  let i = 0;\n  for (let r = 0, n = e.length; r < n; r++)\n    i += e[r].length;\n  const t = new Uint8Array(i);\n  for (let r = 0, n = 0, a = e.length; r < a; r++) {\n    let s = e[r];\n    t.set(s, n), n += s.length;\n  }\n  return t;\n}, common$1 = {\n  assign,\n  flattenChunks\n};\nlet STR_APPLY_UIA_OK = !0;\ntry {\n  String.fromCharCode.apply(null, new Uint8Array(1));\n} catch (e) {\n  STR_APPLY_UIA_OK = !1;\n}\nconst _utf8len = new Uint8Array(256);\nfor (let e = 0; e < 256; e++)\n  _utf8len[e] = e >= 252 ? 6 : e >= 248 ? 5 : e >= 240 ? 4 : e >= 224 ? 3 : e >= 192 ? 2 : 1;\n_utf8len[254] = _utf8len[254] = 1;\nvar string2buf = (e) => {\n  if (typeof TextEncoder == \"function\" && TextEncoder.prototype.encode)\n    return new TextEncoder().encode(e);\n  let i, t, r, n, a, s = e.length, o = 0;\n  for (n = 0; n < s; n++)\n    t = e.charCodeAt(n), (t & 64512) === 55296 && n + 1 < s && (r = e.charCodeAt(n + 1), (r & 64512) === 56320 && (t = 65536 + (t - 55296 << 10) + (r - 56320), n++)), o += t < 128 ? 1 : t < 2048 ? 2 : t < 65536 ? 3 : 4;\n  for (i = new Uint8Array(o), a = 0, n = 0; a < o; n++)\n    t = e.charCodeAt(n), (t & 64512) === 55296 && n + 1 < s && (r = e.charCodeAt(n + 1), (r & 64512) === 56320 && (t = 65536 + (t - 55296 << 10) + (r - 56320), n++)), t < 128 ? i[a++] = t : t < 2048 ? (i[a++] = 192 | t >>> 6, i[a++] = 128 | t & 63) : t < 65536 ? (i[a++] = 224 | t >>> 12, i[a++] = 128 | t >>> 6 & 63, i[a++] = 128 | t & 63) : (i[a++] = 240 | t >>> 18, i[a++] = 128 | t >>> 12 & 63, i[a++] = 128 | t >>> 6 & 63, i[a++] = 128 | t & 63);\n  return i;\n};\nconst buf2binstring = (e, i) => {\n  if (i < 65534 && e.subarray && STR_APPLY_UIA_OK)\n    return String.fromCharCode.apply(null, e.length === i ? e : e.subarray(0, i));\n  let t = \"\";\n  for (let r = 0; r < i; r++)\n    t += String.fromCharCode(e[r]);\n  return t;\n};\nvar buf2string = (e, i) => {\n  const t = i || e.length;\n  if (typeof TextDecoder == \"function\" && TextDecoder.prototype.decode)\n    return new TextDecoder().decode(e.subarray(0, i));\n  let r, n;\n  const a = new Array(t * 2);\n  for (n = 0, r = 0; r < t; ) {\n    let s = e[r++];\n    if (s < 128) {\n      a[n++] = s;\n      continue;\n    }\n    let o = _utf8len[s];\n    if (o > 4) {\n      a[n++] = 65533, r += o - 1;\n      continue;\n    }\n    for (s &= o === 2 ? 31 : o === 3 ? 15 : 7; o > 1 && r < t; )\n      s = s << 6 | e[r++] & 63, o--;\n    if (o > 1) {\n      a[n++] = 65533;\n      continue;\n    }\n    s < 65536 ? a[n++] = s : (s -= 65536, a[n++] = 55296 | s >> 10 & 1023, a[n++] = 56320 | s & 1023);\n  }\n  return buf2binstring(a, n);\n}, utf8border = (e, i) => {\n  i = i || e.length, i > e.length && (i = e.length);\n  let t = i - 1;\n  for (; t >= 0 && (e[t] & 192) === 128; )\n    t--;\n  return t < 0 || t === 0 ? i : t + _utf8len[e[t]] > i ? t : i;\n}, strings$1 = {\n  string2buf,\n  buf2string,\n  utf8border\n};\nfunction ZStream() {\n  this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = \"\", this.state = null, this.data_type = 2, this.adler = 0;\n}\nvar zstream$1 = ZStream;\nconst BAD$1 = 16209, TYPE$1 = 16191;\nvar inffast$1 = function e(i, t) {\n  let r, n, a, s, o, h, l, f, b, w, g, E, k, A, T, C, D, $, P, z, B, F, O, N;\n  const G = i.state;\n  r = i.next_in, O = i.input, n = r + (i.avail_in - 5), a = i.next_out, N = i.output, s = a - (t - i.avail_out), o = a + (i.avail_out - 257), h = G.dmax, l = G.wsize, f = G.whave, b = G.wnext, w = G.window, g = G.hold, E = G.bits, k = G.lencode, A = G.distcode, T = (1 << G.lenbits) - 1, C = (1 << G.distbits) - 1;\n  e:\n    do {\n      E < 15 && (g += O[r++] << E, E += 8, g += O[r++] << E, E += 8), D = k[g & T];\n      t:\n        for (; ; ) {\n          if ($ = D >>> 24, g >>>= $, E -= $, $ = D >>> 16 & 255, $ === 0)\n            N[a++] = D & 65535;\n          else if ($ & 16) {\n            P = D & 65535, $ &= 15, $ && (E < $ && (g += O[r++] << E, E += 8), P += g & (1 << $) - 1, g >>>= $, E -= $), E < 15 && (g += O[r++] << E, E += 8, g += O[r++] << E, E += 8), D = A[g & C];\n            i:\n              for (; ; ) {\n                if ($ = D >>> 24, g >>>= $, E -= $, $ = D >>> 16 & 255, $ & 16) {\n                  if (z = D & 65535, $ &= 15, E < $ && (g += O[r++] << E, E += 8, E < $ && (g += O[r++] << E, E += 8)), z += g & (1 << $) - 1, z > h) {\n                    i.msg = \"invalid distance too far back\", G.mode = BAD$1;\n                    break e;\n                  }\n                  if (g >>>= $, E -= $, $ = a - s, z > $) {\n                    if ($ = z - $, $ > f && G.sane) {\n                      i.msg = \"invalid distance too far back\", G.mode = BAD$1;\n                      break e;\n                    }\n                    if (B = 0, F = w, b === 0) {\n                      if (B += l - $, $ < P) {\n                        P -= $;\n                        do\n                          N[a++] = w[B++];\n                        while (--$);\n                        B = a - z, F = N;\n                      }\n                    } else if (b < $) {\n                      if (B += l + b - $, $ -= b, $ < P) {\n                        P -= $;\n                        do\n                          N[a++] = w[B++];\n                        while (--$);\n                        if (B = 0, b < P) {\n                          $ = b, P -= $;\n                          do\n                            N[a++] = w[B++];\n                          while (--$);\n                          B = a - z, F = N;\n                        }\n                      }\n                    } else if (B += b - $, $ < P) {\n                      P -= $;\n                      do\n                        N[a++] = w[B++];\n                      while (--$);\n                      B = a - z, F = N;\n                    }\n                    for (; P > 2; )\n                      N[a++] = F[B++], N[a++] = F[B++], N[a++] = F[B++], P -= 3;\n                    P && (N[a++] = F[B++], P > 1 && (N[a++] = F[B++]));\n                  } else {\n                    B = a - z;\n                    do\n                      N[a++] = N[B++], N[a++] = N[B++], N[a++] = N[B++], P -= 3;\n                    while (P > 2);\n                    P && (N[a++] = N[B++], P > 1 && (N[a++] = N[B++]));\n                  }\n                } else if (($ & 64) === 0) {\n                  D = A[(D & 65535) + (g & (1 << $) - 1)];\n                  continue i;\n                } else {\n                  i.msg = \"invalid distance code\", G.mode = BAD$1;\n                  break e;\n                }\n                break;\n              }\n          } else if (($ & 64) === 0) {\n            D = k[(D & 65535) + (g & (1 << $) - 1)];\n            continue t;\n          } else if ($ & 32) {\n            G.mode = TYPE$1;\n            break e;\n          } else {\n            i.msg = \"invalid literal/length code\", G.mode = BAD$1;\n            break e;\n          }\n          break;\n        }\n    } while (r < n && a < o);\n  P = E >> 3, r -= P, E -= P << 3, g &= (1 << E) - 1, i.next_in = r, i.next_out = a, i.avail_in = r < n ? 5 + (n - r) : 5 - (r - n), i.avail_out = a < o ? 257 + (o - a) : 257 - (a - o), G.hold = g, G.bits = E;\n};\nconst MAXBITS = 15, ENOUGH_LENS$1 = 852, ENOUGH_DISTS$1 = 592, CODES$1 = 0, LENS$1 = 1, DISTS$1 = 2, lbase = new Uint16Array([\n  /* Length codes 257..285 base */\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  13,\n  15,\n  17,\n  19,\n  23,\n  27,\n  31,\n  35,\n  43,\n  51,\n  59,\n  67,\n  83,\n  99,\n  115,\n  131,\n  163,\n  195,\n  227,\n  258,\n  0,\n  0\n]), lext = new Uint8Array([\n  /* Length codes 257..285 extra */\n  16,\n  16,\n  16,\n  16,\n  16,\n  16,\n  16,\n  16,\n  17,\n  17,\n  17,\n  17,\n  18,\n  18,\n  18,\n  18,\n  19,\n  19,\n  19,\n  19,\n  20,\n  20,\n  20,\n  20,\n  21,\n  21,\n  21,\n  21,\n  16,\n  72,\n  78\n]), dbase = new Uint16Array([\n  /* Distance codes 0..29 base */\n  1,\n  2,\n  3,\n  4,\n  5,\n  7,\n  9,\n  13,\n  17,\n  25,\n  33,\n  49,\n  65,\n  97,\n  129,\n  193,\n  257,\n  385,\n  513,\n  769,\n  1025,\n  1537,\n  2049,\n  3073,\n  4097,\n  6145,\n  8193,\n  12289,\n  16385,\n  24577,\n  0,\n  0\n]), dext = new Uint8Array([\n  /* Distance codes 0..29 extra */\n  16,\n  16,\n  16,\n  16,\n  17,\n  17,\n  18,\n  18,\n  19,\n  19,\n  20,\n  20,\n  21,\n  21,\n  22,\n  22,\n  23,\n  23,\n  24,\n  24,\n  25,\n  25,\n  26,\n  26,\n  27,\n  27,\n  28,\n  28,\n  29,\n  29,\n  64,\n  64\n]), inflate_table = (e, i, t, r, n, a, s, o) => {\n  const h = o.bits;\n  let l = 0, f = 0, b = 0, w = 0, g = 0, E = 0, k = 0, A = 0, T = 0, C = 0, D, $, P, z, B, F = null, O;\n  const N = new Uint16Array(MAXBITS + 1), G = new Uint16Array(MAXBITS + 1);\n  let V = null, J, Q, W;\n  for (l = 0; l <= MAXBITS; l++)\n    N[l] = 0;\n  for (f = 0; f < r; f++)\n    N[i[t + f]]++;\n  for (g = h, w = MAXBITS; w >= 1 && N[w] === 0; w--)\n    ;\n  if (g > w && (g = w), w === 0)\n    return n[a++] = 1 << 24 | 64 << 16 | 0, n[a++] = 1 << 24 | 64 << 16 | 0, o.bits = 1, 0;\n  for (b = 1; b < w && N[b] === 0; b++)\n    ;\n  for (g < b && (g = b), A = 1, l = 1; l <= MAXBITS; l++)\n    if (A <<= 1, A -= N[l], A < 0)\n      return -1;\n  if (A > 0 && (e === CODES$1 || w !== 1))\n    return -1;\n  for (G[1] = 0, l = 1; l < MAXBITS; l++)\n    G[l + 1] = G[l] + N[l];\n  for (f = 0; f < r; f++)\n    i[t + f] !== 0 && (s[G[i[t + f]]++] = f);\n  if (e === CODES$1 ? (F = V = s, O = 20) : e === LENS$1 ? (F = lbase, V = lext, O = 257) : (F = dbase, V = dext, O = 0), C = 0, f = 0, l = b, B = a, E = g, k = 0, P = -1, T = 1 << g, z = T - 1, e === LENS$1 && T > ENOUGH_LENS$1 || e === DISTS$1 && T > ENOUGH_DISTS$1)\n    return 1;\n  for (; ; ) {\n    J = l - k, s[f] + 1 < O ? (Q = 0, W = s[f]) : s[f] >= O ? (Q = V[s[f] - O], W = F[s[f] - O]) : (Q = 96, W = 0), D = 1 << l - k, $ = 1 << E, b = $;\n    do\n      $ -= D, n[B + (C >> k) + $] = J << 24 | Q << 16 | W | 0;\n    while ($ !== 0);\n    for (D = 1 << l - 1; C & D; )\n      D >>= 1;\n    if (D !== 0 ? (C &= D - 1, C += D) : C = 0, f++, --N[l] === 0) {\n      if (l === w)\n        break;\n      l = i[t + s[f]];\n    }\n    if (l > g && (C & z) !== P) {\n      for (k === 0 && (k = g), B += b, E = l - k, A = 1 << E; E + k < w && (A -= N[E + k], !(A <= 0)); )\n        E++, A <<= 1;\n      if (T += 1 << E, e === LENS$1 && T > ENOUGH_LENS$1 || e === DISTS$1 && T > ENOUGH_DISTS$1)\n        return 1;\n      P = C & z, n[P] = g << 24 | E << 16 | B - a | 0;\n    }\n  }\n  return C !== 0 && (n[B + C] = l - k << 24 | 64 << 16 | 0), o.bits = g, 0;\n};\nvar inftrees$1 = inflate_table;\nconst CODES = 0, LENS = 1, DISTS = 2, {\n  Z_FINISH: Z_FINISH$1,\n  Z_BLOCK,\n  Z_TREES,\n  Z_OK: Z_OK$1,\n  Z_STREAM_END: Z_STREAM_END$1,\n  Z_NEED_DICT: Z_NEED_DICT$1,\n  Z_STREAM_ERROR: Z_STREAM_ERROR$1,\n  Z_DATA_ERROR: Z_DATA_ERROR$1,\n  Z_MEM_ERROR: Z_MEM_ERROR$1,\n  Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2, HEAD = 16180, FLAGS = 16181, TIME = 16182, OS = 16183, EXLEN = 16184, EXTRA = 16185, NAME = 16186, COMMENT = 16187, HCRC = 16188, DICTID = 16189, DICT = 16190, TYPE = 16191, TYPEDO = 16192, STORED = 16193, COPY_ = 16194, COPY = 16195, TABLE = 16196, LENLENS = 16197, CODELENS = 16198, LEN_ = 16199, LEN = 16200, LENEXT = 16201, DIST = 16202, DISTEXT = 16203, MATCH = 16204, LIT = 16205, CHECK = 16206, LENGTH = 16207, DONE = 16208, BAD = 16209, MEM = 16210, SYNC = 16211, ENOUGH_LENS = 852, ENOUGH_DISTS = 592, MAX_WBITS = 15, DEF_WBITS = MAX_WBITS, zswap32 = (e) => (e >>> 24 & 255) + (e >>> 8 & 65280) + ((e & 65280) << 8) + ((e & 255) << 24);\nfunction InflateState() {\n  this.strm = null, this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new Uint16Array(320), this.work = new Uint16Array(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;\n}\nconst inflateStateCheck = (e) => {\n  if (!e)\n    return 1;\n  const i = e.state;\n  return !i || i.strm !== e || i.mode < HEAD || i.mode > SYNC ? 1 : 0;\n}, inflateResetKeep = (e) => {\n  if (inflateStateCheck(e))\n    return Z_STREAM_ERROR$1;\n  const i = e.state;\n  return e.total_in = e.total_out = i.total = 0, e.msg = \"\", i.wrap && (e.adler = i.wrap & 1), i.mode = HEAD, i.last = 0, i.havedict = 0, i.flags = -1, i.dmax = 32768, i.head = null, i.hold = 0, i.bits = 0, i.lencode = i.lendyn = new Int32Array(ENOUGH_LENS), i.distcode = i.distdyn = new Int32Array(ENOUGH_DISTS), i.sane = 1, i.back = -1, Z_OK$1;\n}, inflateReset = (e) => {\n  if (inflateStateCheck(e))\n    return Z_STREAM_ERROR$1;\n  const i = e.state;\n  return i.wsize = 0, i.whave = 0, i.wnext = 0, inflateResetKeep(e);\n}, inflateReset2 = (e, i) => {\n  let t;\n  if (inflateStateCheck(e))\n    return Z_STREAM_ERROR$1;\n  const r = e.state;\n  return i < 0 ? (t = 0, i = -i) : (t = (i >> 4) + 5, i < 48 && (i &= 15)), i && (i < 8 || i > 15) ? Z_STREAM_ERROR$1 : (r.window !== null && r.wbits !== i && (r.window = null), r.wrap = t, r.wbits = i, inflateReset(e));\n}, inflateInit2 = (e, i) => {\n  if (!e)\n    return Z_STREAM_ERROR$1;\n  const t = new InflateState();\n  e.state = t, t.strm = e, t.window = null, t.mode = HEAD;\n  const r = inflateReset2(e, i);\n  return r !== Z_OK$1 && (e.state = null), r;\n}, inflateInit = (e) => inflateInit2(e, DEF_WBITS);\nlet virgin = !0, lenfix, distfix;\nconst fixedtables = (e) => {\n  if (virgin) {\n    lenfix = new Int32Array(512), distfix = new Int32Array(32);\n    let i = 0;\n    for (; i < 144; )\n      e.lens[i++] = 8;\n    for (; i < 256; )\n      e.lens[i++] = 9;\n    for (; i < 280; )\n      e.lens[i++] = 7;\n    for (; i < 288; )\n      e.lens[i++] = 8;\n    for (inftrees$1(LENS, e.lens, 0, 288, lenfix, 0, e.work, { bits: 9 }), i = 0; i < 32; )\n      e.lens[i++] = 5;\n    inftrees$1(DISTS, e.lens, 0, 32, distfix, 0, e.work, { bits: 5 }), virgin = !1;\n  }\n  e.lencode = lenfix, e.lenbits = 9, e.distcode = distfix, e.distbits = 5;\n}, updatewindow = (e, i, t, r) => {\n  let n;\n  const a = e.state;\n  return a.window === null && (a.wsize = 1 << a.wbits, a.wnext = 0, a.whave = 0, a.window = new Uint8Array(a.wsize)), r >= a.wsize ? (a.window.set(i.subarray(t - a.wsize, t), 0), a.wnext = 0, a.whave = a.wsize) : (n = a.wsize - a.wnext, n > r && (n = r), a.window.set(i.subarray(t - r, t - r + n), a.wnext), r -= n, r ? (a.window.set(i.subarray(t - r, t), 0), a.wnext = r, a.whave = a.wsize) : (a.wnext += n, a.wnext === a.wsize && (a.wnext = 0), a.whave < a.wsize && (a.whave += n))), 0;\n}, inflate$2 = (e, i) => {\n  let t, r, n, a, s, o, h, l, f, b, w, g, E, k, A = 0, T, C, D, $, P, z, B, F;\n  const O = new Uint8Array(4);\n  let N, G;\n  const V = (\n    /* permutation of code lengths */\n    new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15])\n  );\n  if (inflateStateCheck(e) || !e.output || !e.input && e.avail_in !== 0)\n    return Z_STREAM_ERROR$1;\n  t = e.state, t.mode === TYPE && (t.mode = TYPEDO), s = e.next_out, n = e.output, h = e.avail_out, a = e.next_in, r = e.input, o = e.avail_in, l = t.hold, f = t.bits, b = o, w = h, F = Z_OK$1;\n  e:\n    for (; ; )\n      switch (t.mode) {\n        case HEAD:\n          if (t.wrap === 0) {\n            t.mode = TYPEDO;\n            break;\n          }\n          for (; f < 16; ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          if (t.wrap & 2 && l === 35615) {\n            t.wbits === 0 && (t.wbits = 15), t.check = 0, O[0] = l & 255, O[1] = l >>> 8 & 255, t.check = crc32_1$1(t.check, O, 2, 0), l = 0, f = 0, t.mode = FLAGS;\n            break;\n          }\n          if (t.head && (t.head.done = !1), !(t.wrap & 1) || /* check if zlib header allowed */\n          (((l & 255) << 8) + (l >> 8)) % 31) {\n            e.msg = \"incorrect header check\", t.mode = BAD;\n            break;\n          }\n          if ((l & 15) !== Z_DEFLATED) {\n            e.msg = \"unknown compression method\", t.mode = BAD;\n            break;\n          }\n          if (l >>>= 4, f -= 4, B = (l & 15) + 8, t.wbits === 0 && (t.wbits = B), B > 15 || B > t.wbits) {\n            e.msg = \"invalid window size\", t.mode = BAD;\n            break;\n          }\n          t.dmax = 1 << t.wbits, t.flags = 0, e.adler = t.check = 1, t.mode = l & 512 ? DICTID : TYPE, l = 0, f = 0;\n          break;\n        case FLAGS:\n          for (; f < 16; ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          if (t.flags = l, (t.flags & 255) !== Z_DEFLATED) {\n            e.msg = \"unknown compression method\", t.mode = BAD;\n            break;\n          }\n          if (t.flags & 57344) {\n            e.msg = \"unknown header flags set\", t.mode = BAD;\n            break;\n          }\n          t.head && (t.head.text = l >> 8 & 1), t.flags & 512 && t.wrap & 4 && (O[0] = l & 255, O[1] = l >>> 8 & 255, t.check = crc32_1$1(t.check, O, 2, 0)), l = 0, f = 0, t.mode = TIME;\n        /* falls through */\n        case TIME:\n          for (; f < 32; ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          t.head && (t.head.time = l), t.flags & 512 && t.wrap & 4 && (O[0] = l & 255, O[1] = l >>> 8 & 255, O[2] = l >>> 16 & 255, O[3] = l >>> 24 & 255, t.check = crc32_1$1(t.check, O, 4, 0)), l = 0, f = 0, t.mode = OS;\n        /* falls through */\n        case OS:\n          for (; f < 16; ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          t.head && (t.head.xflags = l & 255, t.head.os = l >> 8), t.flags & 512 && t.wrap & 4 && (O[0] = l & 255, O[1] = l >>> 8 & 255, t.check = crc32_1$1(t.check, O, 2, 0)), l = 0, f = 0, t.mode = EXLEN;\n        /* falls through */\n        case EXLEN:\n          if (t.flags & 1024) {\n            for (; f < 16; ) {\n              if (o === 0)\n                break e;\n              o--, l += r[a++] << f, f += 8;\n            }\n            t.length = l, t.head && (t.head.extra_len = l), t.flags & 512 && t.wrap & 4 && (O[0] = l & 255, O[1] = l >>> 8 & 255, t.check = crc32_1$1(t.check, O, 2, 0)), l = 0, f = 0;\n          } else t.head && (t.head.extra = null);\n          t.mode = EXTRA;\n        /* falls through */\n        case EXTRA:\n          if (t.flags & 1024 && (g = t.length, g > o && (g = o), g && (t.head && (B = t.head.extra_len - t.length, t.head.extra || (t.head.extra = new Uint8Array(t.head.extra_len)), t.head.extra.set(\n            r.subarray(\n              a,\n              // extra field is limited to 65536 bytes\n              // - no need for additional size check\n              a + g\n            ),\n            /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n            B\n          )), t.flags & 512 && t.wrap & 4 && (t.check = crc32_1$1(t.check, r, g, a)), o -= g, a += g, t.length -= g), t.length))\n            break e;\n          t.length = 0, t.mode = NAME;\n        /* falls through */\n        case NAME:\n          if (t.flags & 2048) {\n            if (o === 0)\n              break e;\n            g = 0;\n            do\n              B = r[a + g++], t.head && B && t.length < 65536 && (t.head.name += String.fromCharCode(B));\n            while (B && g < o);\n            if (t.flags & 512 && t.wrap & 4 && (t.check = crc32_1$1(t.check, r, g, a)), o -= g, a += g, B)\n              break e;\n          } else t.head && (t.head.name = null);\n          t.length = 0, t.mode = COMMENT;\n        /* falls through */\n        case COMMENT:\n          if (t.flags & 4096) {\n            if (o === 0)\n              break e;\n            g = 0;\n            do\n              B = r[a + g++], t.head && B && t.length < 65536 && (t.head.comment += String.fromCharCode(B));\n            while (B && g < o);\n            if (t.flags & 512 && t.wrap & 4 && (t.check = crc32_1$1(t.check, r, g, a)), o -= g, a += g, B)\n              break e;\n          } else t.head && (t.head.comment = null);\n          t.mode = HCRC;\n        /* falls through */\n        case HCRC:\n          if (t.flags & 512) {\n            for (; f < 16; ) {\n              if (o === 0)\n                break e;\n              o--, l += r[a++] << f, f += 8;\n            }\n            if (t.wrap & 4 && l !== (t.check & 65535)) {\n              e.msg = \"header crc mismatch\", t.mode = BAD;\n              break;\n            }\n            l = 0, f = 0;\n          }\n          t.head && (t.head.hcrc = t.flags >> 9 & 1, t.head.done = !0), e.adler = t.check = 0, t.mode = TYPE;\n          break;\n        case DICTID:\n          for (; f < 32; ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          e.adler = t.check = zswap32(l), l = 0, f = 0, t.mode = DICT;\n        /* falls through */\n        case DICT:\n          if (t.havedict === 0)\n            return e.next_out = s, e.avail_out = h, e.next_in = a, e.avail_in = o, t.hold = l, t.bits = f, Z_NEED_DICT$1;\n          e.adler = t.check = 1, t.mode = TYPE;\n        /* falls through */\n        case TYPE:\n          if (i === Z_BLOCK || i === Z_TREES)\n            break e;\n        /* falls through */\n        case TYPEDO:\n          if (t.last) {\n            l >>>= f & 7, f -= f & 7, t.mode = CHECK;\n            break;\n          }\n          for (; f < 3; ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          switch (t.last = l & 1, l >>>= 1, f -= 1, l & 3) {\n            case 0:\n              t.mode = STORED;\n              break;\n            case 1:\n              if (fixedtables(t), t.mode = LEN_, i === Z_TREES) {\n                l >>>= 2, f -= 2;\n                break e;\n              }\n              break;\n            case 2:\n              t.mode = TABLE;\n              break;\n            case 3:\n              e.msg = \"invalid block type\", t.mode = BAD;\n          }\n          l >>>= 2, f -= 2;\n          break;\n        case STORED:\n          for (l >>>= f & 7, f -= f & 7; f < 32; ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          if ((l & 65535) !== (l >>> 16 ^ 65535)) {\n            e.msg = \"invalid stored block lengths\", t.mode = BAD;\n            break;\n          }\n          if (t.length = l & 65535, l = 0, f = 0, t.mode = COPY_, i === Z_TREES)\n            break e;\n        /* falls through */\n        case COPY_:\n          t.mode = COPY;\n        /* falls through */\n        case COPY:\n          if (g = t.length, g) {\n            if (g > o && (g = o), g > h && (g = h), g === 0)\n              break e;\n            n.set(r.subarray(a, a + g), s), o -= g, a += g, h -= g, s += g, t.length -= g;\n            break;\n          }\n          t.mode = TYPE;\n          break;\n        case TABLE:\n          for (; f < 14; ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          if (t.nlen = (l & 31) + 257, l >>>= 5, f -= 5, t.ndist = (l & 31) + 1, l >>>= 5, f -= 5, t.ncode = (l & 15) + 4, l >>>= 4, f -= 4, t.nlen > 286 || t.ndist > 30) {\n            e.msg = \"too many length or distance symbols\", t.mode = BAD;\n            break;\n          }\n          t.have = 0, t.mode = LENLENS;\n        /* falls through */\n        case LENLENS:\n          for (; t.have < t.ncode; ) {\n            for (; f < 3; ) {\n              if (o === 0)\n                break e;\n              o--, l += r[a++] << f, f += 8;\n            }\n            t.lens[V[t.have++]] = l & 7, l >>>= 3, f -= 3;\n          }\n          for (; t.have < 19; )\n            t.lens[V[t.have++]] = 0;\n          if (t.lencode = t.lendyn, t.lenbits = 7, N = { bits: t.lenbits }, F = inftrees$1(CODES, t.lens, 0, 19, t.lencode, 0, t.work, N), t.lenbits = N.bits, F) {\n            e.msg = \"invalid code lengths set\", t.mode = BAD;\n            break;\n          }\n          t.have = 0, t.mode = CODELENS;\n        /* falls through */\n        case CODELENS:\n          for (; t.have < t.nlen + t.ndist; ) {\n            for (; A = t.lencode[l & (1 << t.lenbits) - 1], T = A >>> 24, C = A >>> 16 & 255, D = A & 65535, !(T <= f); ) {\n              if (o === 0)\n                break e;\n              o--, l += r[a++] << f, f += 8;\n            }\n            if (D < 16)\n              l >>>= T, f -= T, t.lens[t.have++] = D;\n            else {\n              if (D === 16) {\n                for (G = T + 2; f < G; ) {\n                  if (o === 0)\n                    break e;\n                  o--, l += r[a++] << f, f += 8;\n                }\n                if (l >>>= T, f -= T, t.have === 0) {\n                  e.msg = \"invalid bit length repeat\", t.mode = BAD;\n                  break;\n                }\n                B = t.lens[t.have - 1], g = 3 + (l & 3), l >>>= 2, f -= 2;\n              } else if (D === 17) {\n                for (G = T + 3; f < G; ) {\n                  if (o === 0)\n                    break e;\n                  o--, l += r[a++] << f, f += 8;\n                }\n                l >>>= T, f -= T, B = 0, g = 3 + (l & 7), l >>>= 3, f -= 3;\n              } else {\n                for (G = T + 7; f < G; ) {\n                  if (o === 0)\n                    break e;\n                  o--, l += r[a++] << f, f += 8;\n                }\n                l >>>= T, f -= T, B = 0, g = 11 + (l & 127), l >>>= 7, f -= 7;\n              }\n              if (t.have + g > t.nlen + t.ndist) {\n                e.msg = \"invalid bit length repeat\", t.mode = BAD;\n                break;\n              }\n              for (; g--; )\n                t.lens[t.have++] = B;\n            }\n          }\n          if (t.mode === BAD)\n            break;\n          if (t.lens[256] === 0) {\n            e.msg = \"invalid code -- missing end-of-block\", t.mode = BAD;\n            break;\n          }\n          if (t.lenbits = 9, N = { bits: t.lenbits }, F = inftrees$1(LENS, t.lens, 0, t.nlen, t.lencode, 0, t.work, N), t.lenbits = N.bits, F) {\n            e.msg = \"invalid literal/lengths set\", t.mode = BAD;\n            break;\n          }\n          if (t.distbits = 6, t.distcode = t.distdyn, N = { bits: t.distbits }, F = inftrees$1(DISTS, t.lens, t.nlen, t.ndist, t.distcode, 0, t.work, N), t.distbits = N.bits, F) {\n            e.msg = \"invalid distances set\", t.mode = BAD;\n            break;\n          }\n          if (t.mode = LEN_, i === Z_TREES)\n            break e;\n        /* falls through */\n        case LEN_:\n          t.mode = LEN;\n        /* falls through */\n        case LEN:\n          if (o >= 6 && h >= 258) {\n            e.next_out = s, e.avail_out = h, e.next_in = a, e.avail_in = o, t.hold = l, t.bits = f, inffast$1(e, w), s = e.next_out, n = e.output, h = e.avail_out, a = e.next_in, r = e.input, o = e.avail_in, l = t.hold, f = t.bits, t.mode === TYPE && (t.back = -1);\n            break;\n          }\n          for (t.back = 0; A = t.lencode[l & (1 << t.lenbits) - 1], T = A >>> 24, C = A >>> 16 & 255, D = A & 65535, !(T <= f); ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          if (C && (C & 240) === 0) {\n            for ($ = T, P = C, z = D; A = t.lencode[z + ((l & (1 << $ + P) - 1) >> $)], T = A >>> 24, C = A >>> 16 & 255, D = A & 65535, !($ + T <= f); ) {\n              if (o === 0)\n                break e;\n              o--, l += r[a++] << f, f += 8;\n            }\n            l >>>= $, f -= $, t.back += $;\n          }\n          if (l >>>= T, f -= T, t.back += T, t.length = D, C === 0) {\n            t.mode = LIT;\n            break;\n          }\n          if (C & 32) {\n            t.back = -1, t.mode = TYPE;\n            break;\n          }\n          if (C & 64) {\n            e.msg = \"invalid literal/length code\", t.mode = BAD;\n            break;\n          }\n          t.extra = C & 15, t.mode = LENEXT;\n        /* falls through */\n        case LENEXT:\n          if (t.extra) {\n            for (G = t.extra; f < G; ) {\n              if (o === 0)\n                break e;\n              o--, l += r[a++] << f, f += 8;\n            }\n            t.length += l & (1 << t.extra) - 1, l >>>= t.extra, f -= t.extra, t.back += t.extra;\n          }\n          t.was = t.length, t.mode = DIST;\n        /* falls through */\n        case DIST:\n          for (; A = t.distcode[l & (1 << t.distbits) - 1], T = A >>> 24, C = A >>> 16 & 255, D = A & 65535, !(T <= f); ) {\n            if (o === 0)\n              break e;\n            o--, l += r[a++] << f, f += 8;\n          }\n          if ((C & 240) === 0) {\n            for ($ = T, P = C, z = D; A = t.distcode[z + ((l & (1 << $ + P) - 1) >> $)], T = A >>> 24, C = A >>> 16 & 255, D = A & 65535, !($ + T <= f); ) {\n              if (o === 0)\n                break e;\n              o--, l += r[a++] << f, f += 8;\n            }\n            l >>>= $, f -= $, t.back += $;\n          }\n          if (l >>>= T, f -= T, t.back += T, C & 64) {\n            e.msg = \"invalid distance code\", t.mode = BAD;\n            break;\n          }\n          t.offset = D, t.extra = C & 15, t.mode = DISTEXT;\n        /* falls through */\n        case DISTEXT:\n          if (t.extra) {\n            for (G = t.extra; f < G; ) {\n              if (o === 0)\n                break e;\n              o--, l += r[a++] << f, f += 8;\n            }\n            t.offset += l & (1 << t.extra) - 1, l >>>= t.extra, f -= t.extra, t.back += t.extra;\n          }\n          if (t.offset > t.dmax) {\n            e.msg = \"invalid distance too far back\", t.mode = BAD;\n            break;\n          }\n          t.mode = MATCH;\n        /* falls through */\n        case MATCH:\n          if (h === 0)\n            break e;\n          if (g = w - h, t.offset > g) {\n            if (g = t.offset - g, g > t.whave && t.sane) {\n              e.msg = \"invalid distance too far back\", t.mode = BAD;\n              break;\n            }\n            g > t.wnext ? (g -= t.wnext, E = t.wsize - g) : E = t.wnext - g, g > t.length && (g = t.length), k = t.window;\n          } else\n            k = n, E = s - t.offset, g = t.length;\n          g > h && (g = h), h -= g, t.length -= g;\n          do\n            n[s++] = k[E++];\n          while (--g);\n          t.length === 0 && (t.mode = LEN);\n          break;\n        case LIT:\n          if (h === 0)\n            break e;\n          n[s++] = t.length, h--, t.mode = LEN;\n          break;\n        case CHECK:\n          if (t.wrap) {\n            for (; f < 32; ) {\n              if (o === 0)\n                break e;\n              o--, l |= r[a++] << f, f += 8;\n            }\n            if (w -= h, e.total_out += w, t.total += w, t.wrap & 4 && w && (e.adler = t.check = /*UPDATE_CHECK(state.check, put - _out, _out);*/\n            t.flags ? crc32_1$1(t.check, n, w, s - w) : adler32_1$1(t.check, n, w, s - w)), w = h, t.wrap & 4 && (t.flags ? l : zswap32(l)) !== t.check) {\n              e.msg = \"incorrect data check\", t.mode = BAD;\n              break;\n            }\n            l = 0, f = 0;\n          }\n          t.mode = LENGTH;\n        /* falls through */\n        case LENGTH:\n          if (t.wrap && t.flags) {\n            for (; f < 32; ) {\n              if (o === 0)\n                break e;\n              o--, l += r[a++] << f, f += 8;\n            }\n            if (t.wrap & 4 && l !== (t.total & 4294967295)) {\n              e.msg = \"incorrect length check\", t.mode = BAD;\n              break;\n            }\n            l = 0, f = 0;\n          }\n          t.mode = DONE;\n        /* falls through */\n        case DONE:\n          F = Z_STREAM_END$1;\n          break e;\n        case BAD:\n          F = Z_DATA_ERROR$1;\n          break e;\n        case MEM:\n          return Z_MEM_ERROR$1;\n        case SYNC:\n        /* falls through */\n        default:\n          return Z_STREAM_ERROR$1;\n      }\n  return e.next_out = s, e.avail_out = h, e.next_in = a, e.avail_in = o, t.hold = l, t.bits = f, (t.wsize || w !== e.avail_out && t.mode < BAD && (t.mode < CHECK || i !== Z_FINISH$1)) && updatewindow(e, e.output, e.next_out, w - e.avail_out), b -= e.avail_in, w -= e.avail_out, e.total_in += b, e.total_out += w, t.total += w, t.wrap & 4 && w && (e.adler = t.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n  t.flags ? crc32_1$1(t.check, n, w, e.next_out - w) : adler32_1$1(t.check, n, w, e.next_out - w)), e.data_type = t.bits + (t.last ? 64 : 0) + (t.mode === TYPE ? 128 : 0) + (t.mode === LEN_ || t.mode === COPY_ ? 256 : 0), (b === 0 && w === 0 || i === Z_FINISH$1) && F === Z_OK$1 && (F = Z_BUF_ERROR), F;\n}, inflateEnd = (e) => {\n  if (inflateStateCheck(e))\n    return Z_STREAM_ERROR$1;\n  let i = e.state;\n  return i.window && (i.window = null), e.state = null, Z_OK$1;\n}, inflateGetHeader = (e, i) => {\n  if (inflateStateCheck(e))\n    return Z_STREAM_ERROR$1;\n  const t = e.state;\n  return (t.wrap & 2) === 0 ? Z_STREAM_ERROR$1 : (t.head = i, i.done = !1, Z_OK$1);\n}, inflateSetDictionary = (e, i) => {\n  const t = i.length;\n  let r, n, a;\n  return inflateStateCheck(e) || (r = e.state, r.wrap !== 0 && r.mode !== DICT) ? Z_STREAM_ERROR$1 : r.mode === DICT && (n = 1, n = adler32_1$1(n, i, t, 0), n !== r.check) ? Z_DATA_ERROR$1 : (a = updatewindow(e, i, t, t), a ? (r.mode = MEM, Z_MEM_ERROR$1) : (r.havedict = 1, Z_OK$1));\n};\nvar inflateReset_1 = inflateReset, inflateReset2_1 = inflateReset2, inflateResetKeep_1 = inflateResetKeep, inflateInit_1 = inflateInit, inflateInit2_1 = inflateInit2, inflate_2$1 = inflate$2, inflateEnd_1 = inflateEnd, inflateGetHeader_1 = inflateGetHeader, inflateSetDictionary_1 = inflateSetDictionary, inflateInfo = \"pako inflate (from Nodeca project)\", inflate_1$2 = {\n  inflateReset: inflateReset_1,\n  inflateReset2: inflateReset2_1,\n  inflateResetKeep: inflateResetKeep_1,\n  inflateInit: inflateInit_1,\n  inflateInit2: inflateInit2_1,\n  inflate: inflate_2$1,\n  inflateEnd: inflateEnd_1,\n  inflateGetHeader: inflateGetHeader_1,\n  inflateSetDictionary: inflateSetDictionary_1,\n  inflateInfo\n};\nfunction GZheader() {\n  this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = \"\", this.comment = \"\", this.hcrc = 0, this.done = !1;\n}\nvar gzheader$1 = GZheader;\nconst toString$1 = Object.prototype.toString, {\n  Z_NO_FLUSH,\n  Z_FINISH,\n  Z_OK,\n  Z_STREAM_END,\n  Z_NEED_DICT,\n  Z_STREAM_ERROR,\n  Z_DATA_ERROR,\n  Z_MEM_ERROR\n} = constants$2;\nfunction Inflate$1(e) {\n  this.options = common$1.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: \"\"\n  }, e || {});\n  const i = this.options;\n  i.raw && i.windowBits >= 0 && i.windowBits < 16 && (i.windowBits = -i.windowBits, i.windowBits === 0 && (i.windowBits = -15)), i.windowBits >= 0 && i.windowBits < 16 && !(e && e.windowBits) && (i.windowBits += 32), i.windowBits > 15 && i.windowBits < 48 && (i.windowBits & 15) === 0 && (i.windowBits |= 15), this.err = 0, this.msg = \"\", this.ended = !1, this.chunks = [], this.strm = new zstream$1(), this.strm.avail_out = 0;\n  let t = inflate_1$2.inflateInit2(\n    this.strm,\n    i.windowBits\n  );\n  if (t !== Z_OK)\n    throw new Error(messages$1[t]);\n  if (this.header = new gzheader$1(), inflate_1$2.inflateGetHeader(this.strm, this.header), i.dictionary && (typeof i.dictionary == \"string\" ? i.dictionary = strings$1.string2buf(i.dictionary) : toString$1.call(i.dictionary) === \"[object ArrayBuffer]\" && (i.dictionary = new Uint8Array(i.dictionary)), i.raw && (t = inflate_1$2.inflateSetDictionary(this.strm, i.dictionary), t !== Z_OK)))\n    throw new Error(messages$1[t]);\n}\nInflate$1.prototype.push = function(e, i) {\n  const t = this.strm, r = this.options.chunkSize, n = this.options.dictionary;\n  let a, s, o;\n  if (this.ended) return !1;\n  for (i === ~~i ? s = i : s = i === !0 ? Z_FINISH : Z_NO_FLUSH, toString$1.call(e) === \"[object ArrayBuffer]\" ? t.input = new Uint8Array(e) : t.input = e, t.next_in = 0, t.avail_in = t.input.length; ; ) {\n    for (t.avail_out === 0 && (t.output = new Uint8Array(r), t.next_out = 0, t.avail_out = r), a = inflate_1$2.inflate(t, s), a === Z_NEED_DICT && n && (a = inflate_1$2.inflateSetDictionary(t, n), a === Z_OK ? a = inflate_1$2.inflate(t, s) : a === Z_DATA_ERROR && (a = Z_NEED_DICT)); t.avail_in > 0 && a === Z_STREAM_END && t.state.wrap > 0 && e[t.next_in] !== 0; )\n      inflate_1$2.inflateReset(t), a = inflate_1$2.inflate(t, s);\n    switch (a) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        return this.onEnd(a), this.ended = !0, !1;\n    }\n    if (o = t.avail_out, t.next_out && (t.avail_out === 0 || a === Z_STREAM_END))\n      if (this.options.to === \"string\") {\n        let h = strings$1.utf8border(t.output, t.next_out), l = t.next_out - h, f = strings$1.buf2string(t.output, h);\n        t.next_out = l, t.avail_out = r - l, l && t.output.set(t.output.subarray(h, h + l), 0), this.onData(f);\n      } else\n        this.onData(t.output.length === t.next_out ? t.output : t.output.subarray(0, t.next_out));\n    if (!(a === Z_OK && o === 0)) {\n      if (a === Z_STREAM_END)\n        return a = inflate_1$2.inflateEnd(this.strm), this.onEnd(a), this.ended = !0, !0;\n      if (t.avail_in === 0) break;\n    }\n  }\n  return !0;\n};\nInflate$1.prototype.onData = function(e) {\n  this.chunks.push(e);\n};\nInflate$1.prototype.onEnd = function(e) {\n  e === Z_OK && (this.options.to === \"string\" ? this.result = this.chunks.join(\"\") : this.result = common$1.flattenChunks(this.chunks)), this.chunks = [], this.err = e, this.msg = this.strm.msg;\n};\nfunction inflate$1$1(e, i) {\n  const t = new Inflate$1(i);\n  if (t.push(e), t.err) throw t.msg || messages$1[t.err];\n  return t.result;\n}\nvar inflate_2 = inflate$1$1, inflate_1$1 = {\n  inflate: inflate_2\n};\nconst { inflate: inflate$3 } = inflate_1$1;\nvar inflate_1 = inflate$3;\nfunction decompressZlib(e) {\n  const i = new Uint8Array(e.buffer, e.byteOffset, e.byteLength), t = inflate_1(i);\n  return new DataView(t.buffer, t.byteOffset, t.byteLength);\n}\nconst defaultOptions$3 = {\n  ignoreImageData: !1,\n  onlyFirst: !1\n};\nclass TIFFDecoder extends IOBuffer {\n  constructor(i) {\n    super(i), this._nextIFD = 0;\n  }\n  get isMultiPage() {\n    let i = 0;\n    for (this.decodeHeader(); this._nextIFD; )\n      if (i++, this.decodeIFD({ ignoreImageData: !0 }, !0), i === 2)\n        return !0;\n    if (i === 1)\n      return !1;\n    throw unsupported(\"ifdCount\", i);\n  }\n  get pageCount() {\n    let i = 0;\n    for (this.decodeHeader(); this._nextIFD; )\n      i++, this.decodeIFD({ ignoreImageData: !0 }, !0);\n    if (i > 0)\n      return i;\n    throw unsupported(\"ifdCount\", i);\n  }\n  decode(i = {}) {\n    i = Object.assign({}, defaultOptions$3, i);\n    const t = [];\n    for (this.decodeHeader(); this._nextIFD; )\n      if (t.push(this.decodeIFD(i, !0)), i.onlyFirst)\n        return [t[0]];\n    return t;\n  }\n  decodeHeader() {\n    const i = this.readUint16();\n    if (i === 18761)\n      this.setLittleEndian();\n    else if (i === 19789)\n      this.setBigEndian();\n    else\n      throw new Error(`invalid byte order: 0x${i.toString(16)}`);\n    if (this.readUint16() !== 42)\n      throw new Error(\"not a TIFF file\");\n    this._nextIFD = this.readUint32();\n  }\n  decodeIFD(i, t) {\n    this.seek(this._nextIFD);\n    let r;\n    if (t)\n      r = new TiffIfd();\n    else {\n      if (!i.kind)\n        throw new Error(\"kind is missing\");\n      r = new IFD(i.kind);\n    }\n    const n = this.readUint16();\n    for (let a = 0; a < n; a++)\n      this.decodeIFDEntry(r);\n    if (!i.ignoreImageData) {\n      if (!(r instanceof TiffIfd))\n        throw new Error(\"must be a tiff ifd\");\n      this.decodeImageData(r);\n    }\n    return this._nextIFD = this.readUint32(), r;\n  }\n  decodeIFDEntry(i) {\n    const t = this.offset, r = this.readUint16(), n = this.readUint16(), a = this.readUint32();\n    if (n < 1 || n > 12) {\n      this.skip(4);\n      return;\n    }\n    getByteLength(n, a) > 4 && this.seek(this.readUint32());\n    const o = readData(this, n, a);\n    if (i.fields.set(r, o), r === 34665 || r === 34853) {\n      let h = this.offset, l = \"exif\";\n      r === 34665 ? l = \"exif\" : r === 34853 && (l = \"gps\"), this._nextIFD = o, i[l] = this.decodeIFD({\n        kind: l,\n        ignoreImageData: !0\n      }, !1), this.offset = h;\n    }\n    this.seek(t), this.skip(12);\n  }\n  decodeImageData(i) {\n    const t = i.orientation;\n    if (t && t !== 1)\n      throw unsupported(\"orientation\", t);\n    switch (i.type) {\n      case 0:\n      // WhiteIsZero\n      case 1:\n      // BlackIsZero\n      case 2:\n      // RGB\n      case 3:\n        this.readStripData(i);\n        break;\n      default:\n        throw unsupported(\"image type\", i.type);\n    }\n    if (this.applyPredictor(i), this.convertAlpha(i), i.type === 0) {\n      const r = i.bitsPerSample, n = Math.pow(2, r) - 1;\n      for (let a = 0; a < i.data.length; a++)\n        i.data[a] = n - i.data[a];\n    }\n  }\n  readStripData(i) {\n    const t = i.width, r = i.height, n = i.bitsPerSample, a = i.sampleFormat, s = t * r * i.samplesPerPixel, o = getDataArray(s, n, a), l = i.rowsPerStrip * t * i.samplesPerPixel, f = i.stripOffsets, b = i.stripByteCounts || guessStripByteCounts(i);\n    let w = s, g = 0;\n    for (let E = 0; E < f.length; E++) {\n      let k = new DataView(this.buffer, this.byteOffset + f[E], b[E]), A = w > l ? l : w;\n      w -= A;\n      let T = k;\n      switch (i.compression) {\n        case 1:\n          break;\n        case 5: {\n          T = decompressLzw(k);\n          break;\n        }\n        case 8: {\n          T = decompressZlib(k);\n          break;\n        }\n        case 2:\n          throw unsupported(\"Compression\", \"CCITT Group 3\");\n        case 32773:\n          throw unsupported(\"Compression\", \"PackBits\");\n        default:\n          throw unsupported(\"Compression\", i.compression);\n      }\n      g = this.fillUncompressed(n, a, o, T, g, A);\n    }\n    i.data = o;\n  }\n  fillUncompressed(i, t, r, n, a, s) {\n    if (i === 8)\n      return fill8bit(r, n, a, s);\n    if (i === 16)\n      return fill16bit(r, n, a, s, this.isLittleEndian());\n    if (i === 32 && t === 3)\n      return fillFloat32(r, n, a, s, this.isLittleEndian());\n    throw unsupported(\"bitDepth\", i);\n  }\n  applyPredictor(i) {\n    const t = i.bitsPerSample;\n    switch (i.predictor) {\n      case 1:\n        break;\n      case 2: {\n        if (t === 8)\n          applyHorizontalDifferencing8Bit(i.data, i.width, i.components);\n        else if (t === 16)\n          applyHorizontalDifferencing16Bit(i.data, i.width, i.components);\n        else\n          throw new Error(`Horizontal differencing is only supported for images with a bit depth of ${t}`);\n        break;\n      }\n      default:\n        throw new Error(`invalid predictor: ${i.predictor}`);\n    }\n  }\n  convertAlpha(i) {\n    if (i.alpha && i.associatedAlpha) {\n      const { data: t, components: r, maxSampleValue: n } = i;\n      for (let a = 0; a < t.length; a += r) {\n        const s = t[a + r - 1];\n        for (let o = 0; o < r - 1; o++)\n          t[a + o] = Math.round(t[a + o] * n / s);\n      }\n    }\n  }\n}\nfunction getDataArray(e, i, t) {\n  if (i === 8)\n    return new Uint8Array(e);\n  if (i === 16)\n    return new Uint16Array(e);\n  if (i === 32 && t === 3)\n    return new Float32Array(e);\n  throw unsupported(\"bit depth / sample format\", `${i} / ${t}`);\n}\nfunction fill8bit(e, i, t, r) {\n  for (let n = 0; n < r; n++)\n    e[t++] = i.getUint8(n);\n  return t;\n}\nfunction fill16bit(e, i, t, r, n) {\n  for (let a = 0; a < r * 2; a += 2)\n    e[t++] = i.getUint16(a, n);\n  return t;\n}\nfunction fillFloat32(e, i, t, r, n) {\n  for (let a = 0; a < r * 4; a += 4)\n    e[t++] = i.getFloat32(a, n);\n  return t;\n}\nfunction unsupported(e, i) {\n  return new Error(`Unsupported ${e}: ${i}`);\n}\nfunction decodeTIFF(e, i) {\n  return new TIFFDecoder(e).decode(i);\n}\nfunction matchAndCrop(e = {}) {\n  let { algorithm: i = \"matchToPrevious\", ignoreBorder: t = [0, 0] } = e;\n  this.checkProcessable(\"matchAndCrop\", {\n    bitDepth: [8, 16]\n  });\n  let r = i === \"matchToPrevious\", n = this[0], a = [];\n  a[0] = {\n    position: [0, 0],\n    image: this[0]\n  };\n  let s = [0, 0];\n  for (let w = 1; w < this.length; w++) {\n    let g = n.getBestMatch(this[w], { border: t });\n    a[w] = {\n      position: [\n        g[0] + s[0],\n        g[1] + s[1]\n      ],\n      image: this[w]\n    }, r && (s[0] += g[0], s[1] += g[1], n = this[w]);\n  }\n  let o = 0, h = 0, l = 0, f = 0;\n  for (let w = 0; w < a.length; w++) {\n    let g = a[w];\n    g.position[0] > o && (o = g.position[0]), g.position[0] < h && (h = g.position[0]), g.position[1] > l && (l = g.position[1]), g.position[1] < f && (f = g.position[1]);\n  }\n  h = 0 - h, f = 0 - f;\n  for (let w = 0; w < a.length; w++) {\n    let g = a[w];\n    g.crop = g.image.crop({\n      x: o - g.position[0],\n      y: l - g.position[1],\n      width: n.width - h - o,\n      height: n.height - f - l\n    });\n  }\n  let b = [];\n  for (let w = 0; w < a.length; w++)\n    b[w] = a[w].crop;\n  return new Stack(b);\n}\nfunction min$2() {\n  this.checkProcessable(\"min\", {\n    bitDepth: [8, 16]\n  });\n  let e = this[0].min;\n  for (let i = 1; i < this.length; i++)\n    for (let t = 0; t < e.length; t++)\n      e[t] = Math.min(e[t], this[i].min[t]);\n  return e;\n}\nfunction max$2() {\n  this.checkProcessable(\"min\", {\n    bitDepth: [8, 16]\n  });\n  let e = this[0].max;\n  for (let i = 1; i < this.length; i++)\n    for (let t = 0; t < e.length; t++)\n      e[t] = Math.max(e[t], this[i].max[t]);\n  return e;\n}\nfunction median$2(e) {\n  let i = e.reduce((s, o) => s + o);\n  if (i === 0)\n    throw new Error(\"unreachable\");\n  let t = 0, r = 0, n = i / 2, a;\n  for (; ; ) {\n    if (e[t] > 0) {\n      if (a !== void 0)\n        return (a + t) / 2;\n      if (r += e[t], r > n)\n        return t;\n      r === n && (a = t);\n    }\n    t++;\n  }\n}\nfunction mean$2(e) {\n  let i = 0, t = 0;\n  for (let r = 0; r < e.length; r++)\n    i += e[r], t += e[r] * r;\n  return i === 0 ? 0 : t / i;\n}\nfunction median$1() {\n  this.checkProcessable(\"median\", {\n    bitDepth: [8, 16]\n  });\n  let e = this.getHistograms({ maxSlots: this[0].maxValue + 1 }), i = new Array(e.length);\n  for (let t = 0; t < e.length; t++) {\n    let r = e[t];\n    i[t] = median$2(r);\n  }\n  return i;\n}\nfunction histogram(e) {\n  this.checkProcessable(\"min\", {\n    bitDepth: [8, 16]\n  });\n  let i = this[0].getHistogram(e);\n  for (let t = 1; t < this.length; t++) {\n    let r = this[t].getHistogram(e);\n    for (let n = 0; n < i.length; n++)\n      i[n] += r[n];\n  }\n  return i;\n}\nfunction histograms(e) {\n  this.checkProcessable(\"min\", {\n    bitDepth: [8, 16]\n  });\n  let i = this[0].getHistograms(e), t = i[0].length;\n  for (let r = 1; r < this.length; r++) {\n    let n = this[r].getHistograms(e);\n    for (let a = 0; a < i.length; a++)\n      for (let s = 0; s < t; s++)\n        i[a][s] += n[a][s];\n  }\n  return i;\n}\nfunction averageImage() {\n  this.checkProcessable(\"averageImage\", {\n    bitDepth: [8, 16]\n  });\n  let e = new Uint32Array(this[0].data.length);\n  for (let r = 0; r < this.length; r++) {\n    let n = this[r];\n    for (let a = 0; a < this[0].data.length; a++)\n      e[a] += n.data[a];\n  }\n  let i = Image.createFrom(this[0]), t = i.data;\n  for (let r = 0; r < this[0].data.length; r++)\n    t[r] = e[r] / this.length;\n  return i;\n}\nfunction maxImage() {\n  this.checkProcessable(\"max\", {\n    bitDepth: [8, 16]\n  });\n  let e = Image.createFrom(this[0]);\n  e.data.fill(0);\n  for (const i of this)\n    for (let t = 0; t < e.data.length; t++)\n      e.data[t] = Math.max(i.data[t], e.data[t]);\n  return e;\n}\nfunction minImage() {\n  this.checkProcessable(\"max\", {\n    bitDepth: [8, 16]\n  });\n  let e = Image.createFrom(this[0]);\n  e.data.fill(e.maxValue);\n  for (const i of this)\n    for (let t = 0; t < e.data.length; t++)\n      e.data[t] = Math.min(i.data[t], e.data[t]);\n  return e;\n}\nfunction extend$2(e) {\n  e.extendMethod(\"matchAndCrop\", matchAndCrop), e.extendMethod(\"getMin\", min$2), e.extendMethod(\"getMax\", max$2), e.extendMethod(\"getMedian\", median$1), e.extendMethod(\"getHistogram\", histogram), e.extendMethod(\"getHistograms\", histograms), e.extendMethod(\"getAverage\", averageImage), e.extendMethod(\"getAverageImage\", averageImage), e.extendMethod(\"getMaxImage\", maxImage), e.extendMethod(\"getMinImage\", minImage);\n}\nlet computedPropertyDescriptor = {\n  configurable: !0,\n  enumerable: !1,\n  get: void 0\n};\nclass Stack extends Array {\n  constructor(i) {\n    if (Array.isArray(i)) {\n      super(i.length);\n      for (let t = 0; t < i.length; t++)\n        this[t] = i[t];\n    } else typeof i == \"number\" ? super(i) : super();\n    this.computed = null;\n  }\n  static load(i) {\n    return Promise.all(i.map(Image.load)).then(\n      (t) => new Stack(t)\n    );\n  }\n  static extendMethod(i, t, r = {}) {\n    let { inPlace: n = !1, returnThis: a = !0, partialArgs: s = [] } = r;\n    return n ? Stack.prototype[i] = function(...o) {\n      this.computed = null;\n      let h = t.apply(this, [...s, ...o]);\n      return a ? this : h;\n    } : Stack.prototype[i] = function(...o) {\n      return t.apply(this, [...s, ...o]);\n    }, Stack;\n  }\n  static extendProperty(i, t, r = {}) {\n    let { partialArgs: n = [] } = r;\n    return computedPropertyDescriptor.get = function() {\n      if (this.computed === null)\n        this.computed = {};\n      else if (hasOwn(i, this.computed))\n        return this.computed[i];\n      let a = t.apply(this, n);\n      return this.computed[i] = a, a;\n    }, Object.defineProperty(Stack.prototype, i, computedPropertyDescriptor), Stack;\n  }\n  /**\n   * Check if a process can be applied on the stack\n   * @param {string} processName\n   * @param {object} [options]\n   * @private\n   */\n  checkProcessable(i, t = {}) {\n    if (typeof i != \"string\")\n      throw new TypeError(\n        \"checkProcessable requires as first parameter the processName (a string)\"\n      );\n    if (this.size === 0)\n      throw new TypeError(\n        `The process: ${i} can not be applied on an empty stack`\n      );\n    this[0].checkProcessable(i, t);\n    for (let r = 1; r < this.length; r++) {\n      if ((t.sameSize === void 0 || t.sameSize) && this[0].width !== this[r].width)\n        throw new TypeError(\n          `The process: ${i} can not be applied if width is not identical in all images`\n        );\n      if ((t.sameSize === void 0 || t.sameSize) && this[0].height !== this[r].height)\n        throw new TypeError(\n          `The process: ${i} can not be applied if height is not identical in all images`\n        );\n      if ((t.sameAlpha === void 0 || t.sameAlpha) && this[0].alpha !== this[r].alpha)\n        throw new TypeError(\n          `The process: ${i} can not be applied if alpha is not identical in all images`\n        );\n      if ((t.sameBitDepth === void 0 || t.sameBitDepth) && this[0].bitDepth !== this[r].bitDepth)\n        throw new TypeError(\n          `The process: ${i} can not be applied if bitDepth is not identical in all images`\n        );\n      if ((t.sameColorModel === void 0 || t.sameColorModel) && this[0].colorModel !== this[r].colorModel)\n        throw new TypeError(\n          `The process: ${i} can not be applied if colorModel is not identical in all images`\n        );\n      if ((t.sameNumberChannels === void 0 || t.sameNumberChannels) && this[0].channels !== this[r].channels)\n        throw new TypeError(\n          `The process: ${i} can not be applied if channels is not identical in all images`\n        );\n    }\n  }\n}\nArray[Symbol.species] || (Stack.prototype.map = function(e, i) {\n  if (typeof e != \"function\")\n    throw new TypeError(`${e} is not a function`);\n  let t = new Stack(this.length);\n  for (let r = 0; r < this.length; r++)\n    t[r] = e.call(i, this[r], r, this);\n  return t;\n});\nextend$2(Stack);\nconst isDataURL = /^data:[a-z]+\\/(?:[a-z]+);base64,/;\nfunction load(e, i) {\n  if (typeof e == \"string\")\n    return loadURL(e, i);\n  if (e instanceof ArrayBuffer)\n    return Promise.resolve(\n      loadBinary(\n        new Uint8Array(e),\n        void 0,\n        i && i.ignorePalette\n      )\n    );\n  if (e.buffer)\n    return Promise.resolve(\n      loadBinary(e, void 0, i && i.ignorePalette)\n    );\n  throw new Error('argument to \"load\" must be a string or buffer.');\n}\nfunction loadBinary(e, i, t) {\n  const r = imageType(e);\n  if (r)\n    switch (r.mime) {\n      case \"image/png\":\n        return loadPNG(e);\n      case \"image/jpeg\":\n        return loadJPEG(e);\n      case \"image/tiff\":\n        return loadTIFF(e, t);\n      default:\n        return loadGeneric(n(r.mime));\n    }\n  return loadGeneric(n(\"application/octet-stream\"));\n  function n(a) {\n    return i || toBase64URL(e, a);\n  }\n}\nfunction loadURL(e, i) {\n  const t = e.slice(0, 64).match(isDataURL);\n  let r;\n  return t !== null ? r = Promise.resolve(decode$1(e.slice(t[0].length))) : r = fetchBinary(e, i), r.then((n) => {\n    const a = new Uint8Array(n);\n    return loadBinary(\n      a,\n      t ? e : void 0,\n      i && i.ignorePalette\n    );\n  });\n}\nfunction loadPNG(e) {\n  const i = decodePng(e);\n  let t = i.channels, r, n = 0;\n  return t === 2 || t === 4 ? (r = t - 1, n = 1) : r = t, i.palette ? loadPNGFromPalette(i) : new Image(i.width, i.height, i.data, {\n    components: r,\n    alpha: n,\n    bitDepth: i.depth,\n    meta: { text: i.text }\n  });\n}\nfunction loadPNGFromPalette(e) {\n  const i = e.width * e.height, t = e.palette[0].length, r = new Uint8Array(i * t), n = 8 / e.depth, a = e.depth < 8 ? n : 1, s = parseInt(\"1\".repeat(e.depth), 2), o = t === 4;\n  let h = 0;\n  for (let l = 0; l < i; l++) {\n    const f = Math.floor(l / a);\n    let b = e.data[f];\n    e.depth < 8 && (b = b >>> e.depth * (n - 1 - l % n) & s);\n    const w = e.palette[b];\n    r[h++] = w[0], r[h++] = w[1], r[h++] = w[2], o && (r[h++] = w[3]);\n  }\n  return new Image(e.width, e.height, r, {\n    components: 3,\n    alpha: o,\n    bitDepth: 8\n  });\n}\nfunction loadJPEG(e) {\n  const i = srcExports$2.decode(e);\n  let t;\n  i.exif && (t = getMetadata(i.exif));\n  const r = jpegJsExports.decode(e, { useTArray: !0, maxMemoryUsageInMB: 1024 });\n  let n = new Image(r.width, r.height, r.data, { meta: t });\n  if (t && t.tiff.tags.Orientation) {\n    const a = t.tiff.tags.Orientation;\n    a > 2 && (n = n.rotate(\n      {\n        3: 180,\n        4: 180,\n        5: 90,\n        6: 90,\n        7: 270,\n        8: 270\n      }[a]\n    )), [2, 4, 5, 7].includes(a) && (n = n.flipX());\n  }\n  return n;\n}\nfunction loadTIFF(e, i) {\n  let t = decodeTIFF(e);\n  return t.length === 1 ? getImageFromIFD(t[0], i) : new Stack(\n    t.map(function(r) {\n      return getImageFromIFD(r, i);\n    })\n  );\n}\nfunction getMetadata(e) {\n  const i = {\n    tiff: {\n      fields: e.fields,\n      tags: e.map\n    }\n  };\n  return e.exif && (i.exif = e.exif), e.gps && (i.gps = e.gps), i;\n}\nfunction getImageFromIFD(e, i) {\n  if (!i && e.type === 3) {\n    const t = new Uint16Array(3 * e.width * e.height), r = e.palette;\n    let n = 0;\n    for (let a = 0; a < e.data.length; a++) {\n      const s = e.data[a], o = r[s];\n      t[n++] = o[0], t[n++] = o[1], t[n++] = o[2];\n    }\n    return new Image(e.width, e.height, t, {\n      components: 3,\n      alpha: e.alpha,\n      colorModel: RGB$1,\n      bitDepth: 16,\n      meta: getMetadata(e)\n    });\n  } else\n    return new Image(e.width, e.height, e.data, {\n      components: e.type === 2 ? 3 : 1,\n      alpha: e.alpha,\n      colorModel: e.type === 2 ? RGB$1 : GREY$1,\n      bitDepth: e.bitsPerSample.length ? e.bitsPerSample[0] : e.bitsPerSample,\n      meta: getMetadata(e)\n    });\n}\nfunction loadGeneric(e, i) {\n  return i = i || {}, new Promise(function(t, r) {\n    let n = new DOMImage();\n    n.onload = function() {\n      let a = n.width, s = n.height, h = createCanvas(a, s).getContext(\"2d\");\n      h.drawImage(n, 0, 0, a, s);\n      let l = h.getImageData(0, 0, a, s).data;\n      t(new Image(a, s, l, i));\n    }, n.onerror = function() {\n      r(new Error(`Could not load ${e}`));\n    }, n.src = e;\n  });\n}\nconst valueMethods = {\n  /**\n   * Get the value of specific pixel channel\n   * @memberof Image\n   * @instance\n   * @param {number} x - x coordinate (0 = left)\n   * @param {number} y - y coordinate (0 = top)\n   * @param {number} channel\n   * @return {number} - the value of this pixel channel\n   */\n  getValueXY(e, i, t) {\n    return this.data[(i * this.width + e) * this.channels + t];\n  },\n  /**\n   * Set the value of specific pixel channel\n   * @memberof Image\n   * @instance\n   * @param {number} x - x coordinate (0 = left)\n   * @param {number} y - y coordinate (0 = top)\n   * @param {number} channel\n   * @param {number} value - the new value of this pixel channel\n   * @return {this}\n   */\n  setValueXY(e, i, t, r) {\n    return this.data[(i * this.width + e) * this.channels + t] = r, this.computed = null, this;\n  },\n  /**\n   * Get the value of specific pixel channel\n   * @memberof Image\n   * @instance\n   * @param {number} index - 1D index of the pixel\n   * @param {number} channel\n   * @return {number} - the value of this pixel channel\n   */\n  getValue(e, i) {\n    return this.data[e * this.channels + i];\n  },\n  /**\n   * Set the value of specific pixel channel\n   * @memberof Image\n   * @instance\n   * @param {number} index - 1D index of the pixel\n   * @param {number} channel\n   * @param {number} value - the new value of this pixel channel\n   * @return {this}\n   */\n  setValue(e, i, t) {\n    return this.data[e * this.channels + i] = t, this.computed = null, this;\n  },\n  /**\n   * Get the value of an entire pixel\n   * @memberof Image\n   * @instance\n   * @param {number} x - x coordinate (0 = left)\n   * @param {number} y - y coordinate (0 = top)\n   * @return {number[]} the value of this pixel\n   */\n  getPixelXY(e, i) {\n    return this.getPixel(i * this.width + e);\n  },\n  /**\n   * Set the value of an entire pixel\n   * @memberof Image\n   * @instance\n   * @param {number} x - x coordinate (0 = left)\n   * @param {number} y - y coordinate (0 = top)\n   * @param {number[]} value - the new value of this pixel\n   * @return {this}\n   */\n  setPixelXY(e, i, t) {\n    return this.setPixel(i * this.width + e, t);\n  },\n  /**\n   * Get the value of an entire pixel\n   * @memberof Image\n   * @instance\n   * @param {number} index - 1D index of the pixel\n   * @return {number[]} the value of this pixel\n   */\n  getPixel(e) {\n    const i = new Array(this.channels), t = e * this.channels;\n    for (let r = 0; r < this.channels; r++)\n      i[r] = this.data[t + r];\n    return i;\n  },\n  /**\n   * Set the value of an entire pixel\n   * @memberof Image\n   * @instance\n   * @param {number} index - 1D index of the pixel\n   * @param {number[]} value - the new value of this pixel\n   * @return {this}\n   */\n  setPixel(e, i) {\n    const t = e * this.channels;\n    for (let r = 0; r < i.length; r++)\n      this.data[t + r] = i[r];\n    return this.computed = null, this;\n  }\n};\nfunction setValueMethods(e) {\n  for (const i in valueMethods)\n    e.prototype[i] = valueMethods[i];\n}\nfunction getImageParameters(e) {\n  return {\n    width: e.width,\n    height: e.height,\n    components: e.components,\n    alpha: e.alpha,\n    colorModel: e.colorModel,\n    bitDepth: e.bitDepth\n  };\n}\nfunction getOutputImage(e, i, t, r = {}) {\n  const { out: n } = i;\n  if (n === void 0)\n    return r.copy ? e.clone() : Image.createFrom(e, t);\n  {\n    if (!Image.isImage(n))\n      throw new TypeError(\"out must be an Image object\");\n    const a = Object.assign(\n      getImageParameters(e),\n      t\n    );\n    for (const s in a)\n      if (n[s] !== a[s])\n        throw new RangeError(\n          `cannot use out. Its ${s} must be \"${a[s]}\" (found \"${n[s]}\")`\n        );\n    return n;\n  }\n}\nfunction getOutputImageOrInPlace(e, i, t) {\n  if (i.inPlace !== void 0 && typeof i.inPlace != \"boolean\")\n    throw new TypeError(\"inPlace option must be a boolean\");\n  if (i.inPlace) {\n    if (i.out !== void 0)\n      throw new TypeError(\n        \"out option must not be set if inPlace option is true\"\n      );\n    return e;\n  }\n  return getOutputImage(e, i, null, t);\n}\nfunction abs(e = {}) {\n  this.checkProcessable(\"abs\", {\n    bitDepth: [32]\n  });\n  const i = getOutputImageOrInPlace(this, e);\n  return absolute(this, i), i;\n}\nfunction absolute(e, i) {\n  for (let t = 0; t < e.data.length; t++)\n    i.data[t] = Math.abs(e.data[t]);\n}\nfunction copyAlphaChannel(e, i) {\n  if (e.alpha === 1 && i.alpha === 1)\n    for (let t = 0; t < e.size; t++)\n      i.data[t * i.channels + i.components] = e.data[t * e.channels + e.components];\n}\nfunction invert(e = {}) {\n  this.checkProcessable(\"invert\", {\n    bitDepth: [1, 8, 16]\n  });\n  const i = getOutputImageOrInPlace(this, e);\n  return this.bitDepth === 1 ? invertBinary(this, i) : (invertColor(this, i), this !== i && copyAlphaChannel(this, i)), i;\n}\nfunction invertBinary(e, i) {\n  for (let t = 0; t < e.data.length; t++)\n    i.data[t] = ~e.data[t];\n}\nfunction invertColor(e, i) {\n  for (let t = 0; t < e.data.length; t += e.channels)\n    for (let r = 0; r < e.components; r++)\n      i.data[t + r] = e.maxValue - e.data[t + r];\n}\nfunction flipX() {\n  this.checkProcessable(\"flipX\", {\n    bitDepth: [8, 16]\n  });\n  for (let e = 0; e < this.height; e++) {\n    let i = e * this.width * this.channels;\n    for (let t = 0; t < Math.floor(this.width / 2); t++) {\n      let r = t * this.channels + i, n = (this.width - t - 1) * this.channels + i;\n      for (let a = 0; a < this.channels; a++) {\n        let s = this.data[r + a];\n        this.data[r + a] = this.data[n + a], this.data[n + a] = s;\n      }\n    }\n  }\n  return this;\n}\nfunction flipY() {\n  this.checkProcessable(\"flipY\", {\n    bitDepth: [8, 16]\n  });\n  for (let e = 0; e < Math.floor(this.height / 2); e++)\n    for (let i = 0; i < this.width; i++) {\n      let t = i * this.channels + e * this.width * this.channels, r = i * this.channels + (this.height - 1 - e) * this.channels * this.width;\n      for (let n = 0; n < this.channels; n++) {\n        let a = this.data[t + n];\n        this.data[t + n] = this.data[r + n], this.data[r + n] = a;\n      }\n    }\n  return this;\n}\nfunction blurFilter(e = {}) {\n  const { radius: i = 1 } = e;\n  if (i < 1)\n    throw new Error(\"radius must be greater than 1\");\n  const t = 2 * i + 1, r = new Array(t);\n  for (let n = 0; n < t; n++) {\n    r[n] = new Array(t);\n    for (let a = 0; a < t; a++)\n      r[n][a] = 1 / (t * t);\n  }\n  return this.convolution(r);\n}\nvar medianQuickselect_min = { exports: {} }, hasRequiredMedianQuickselect_min;\nfunction requireMedianQuickselect_min() {\n  return hasRequiredMedianQuickselect_min || (hasRequiredMedianQuickselect_min = 1, function(e) {\n    (function() {\n      function i(n) {\n        for (var a = 0, s = n.length - 1, o = void 0, h = void 0, l = void 0, f = r(a, s); ; ) {\n          if (s <= a) return n[f];\n          if (s == a + 1) return n[a] > n[s] && t(n, a, s), n[f];\n          for (o = r(a, s), n[o] > n[s] && t(n, o, s), n[a] > n[s] && t(n, a, s), n[o] > n[a] && t(n, o, a), t(n, o, a + 1), h = a + 1, l = s; ; ) {\n            do\n              h++;\n            while (n[a] > n[h]);\n            do\n              l--;\n            while (n[l] > n[a]);\n            if (l < h) break;\n            t(n, h, l);\n          }\n          t(n, a, l), l <= f && (a = h), l >= f && (s = l - 1);\n        }\n      }\n      var t = function(a, s, o) {\n        var h;\n        return h = [a[o], a[s]], a[s] = h[0], a[o] = h[1], h;\n      }, r = function(a, s) {\n        return ~~((a + s) / 2);\n      };\n      e.exports ? e.exports = i : window.median = i;\n    })();\n  }(medianQuickselect_min)), medianQuickselect_min.exports;\n}\nvar medianQuickselect_minExports = requireMedianQuickselect_min();\nconst quickSelectMedian = /* @__PURE__ */ getDefaultExportFromCjs(medianQuickselect_minExports);\nfunction validateArrayOfChannels(e, i = {}) {\n  let {\n    channels: t,\n    allowAlpha: r,\n    // are we allowing the selection of an alpha channel ?\n    defaultAlpha: n\n    // if no channels are selected should we take the alpha channel ?\n  } = i;\n  return typeof r != \"boolean\" && (r = !0), typeof t > \"u\" ? allChannels(e, n) : validateChannels(e, t, r);\n}\nfunction allChannels(e, i) {\n  let t = i ? e.channels : e.components, r = new Array(t);\n  for (let n = 0; n < t; n++)\n    r[n] = n;\n  return r;\n}\nfunction validateChannels(e, i, t) {\n  Array.isArray(i) || (i = [i]);\n  for (let r = 0; r < i.length; r++)\n    i[r] = validateChannel(e, i[r], t);\n  return i;\n}\nfunction validateChannel(e, i, t = !0) {\n  if (i === void 0)\n    throw new RangeError(\n      `validateChannel : the channel has to be >=0 and <${e.channels}`\n    );\n  if (typeof i == \"string\") {\n    switch (e.colorModel) {\n      case GREY$1:\n        break;\n      case RGB$1:\n        if (\"rgb\".includes(i))\n          switch (i) {\n            case \"r\":\n              i = 0;\n              break;\n            case \"g\":\n              i = 1;\n              break;\n            case \"b\":\n              i = 2;\n              break;\n          }\n        break;\n      case HSL:\n        if (\"hsl\".includes(i))\n          switch (i) {\n            case \"h\":\n              i = 0;\n              break;\n            case \"s\":\n              i = 1;\n              break;\n            case \"l\":\n              i = 2;\n              break;\n          }\n        break;\n      case HSV:\n        if (\"hsv\".includes(i))\n          switch (i) {\n            case \"h\":\n              i = 0;\n              break;\n            case \"s\":\n              i = 1;\n              break;\n            case \"v\":\n              i = 2;\n              break;\n          }\n        break;\n      case CMYK$1:\n        if (\"cmyk\".includes(i))\n          switch (i) {\n            case \"c\":\n              i = 0;\n              break;\n            case \"m\":\n              i = 1;\n              break;\n            case \"y\":\n              i = 2;\n              break;\n            case \"k\":\n              i = 3;\n              break;\n          }\n        break;\n      default:\n        throw new Error(`Unexpected color model: ${e.colorModel}`);\n    }\n    if (i === \"a\") {\n      if (!e.alpha)\n        throw new Error(\n          \"validateChannel : the image does not contain alpha channel\"\n        );\n      i = e.components;\n    }\n    if (typeof i == \"string\")\n      throw new Error(`validateChannel : undefined channel: ${i}`);\n  }\n  if (i >= e.channels)\n    throw new RangeError(\n      `validateChannel : the channel has to be >=0 and <${e.channels}`\n    );\n  if (!t && i >= e.components)\n    throw new RangeError(\"validateChannel : alpha channel may not be selected\");\n  return i;\n}\nfunction medianFilter(e = {}) {\n  let { radius: i = 1, border: t = \"copy\", channels: r } = e;\n  if (this.checkProcessable(\"medianFilter\", {\n    bitDepth: [8, 16]\n  }), i < 1)\n    throw new Error(\"radius must be greater than 0\");\n  r = validateArrayOfChannels(this, r);\n  let n = i, a = i, s = Image.createFrom(this), o = (n * 2 + 1) * (a * 2 + 1), h = new Array(o);\n  for (let l = 0; l < r.length; l++) {\n    let f = r[l];\n    for (let b = a; b < this.height - a; b++)\n      for (let w = n; w < this.width - n; w++) {\n        let g = 0;\n        for (let k = -a; k <= a; k++)\n          for (let A = -n; A <= n; A++) {\n            let T = ((b + k) * this.width + w + A) * this.channels + f;\n            h[g++] = this.data[T];\n          }\n        let E = (b * this.width + w) * this.channels + f;\n        s.data[E] = quickSelectMedian(h);\n      }\n  }\n  if (this.alpha && !r.includes(this.channels))\n    for (let l = this.components; l < this.data.length; l = l + this.channels)\n      s.data[l] = this.data[l];\n  return s.setBorder({ size: [n, a], algorithm: t }), s;\n}\nfunction gaussianFilter(e = {}) {\n  let { radius: i = 1, sigma: t, channels: r, border: n = \"copy\" } = e;\n  this.checkProcessable(\"gaussian\", {\n    bitDepth: [8, 16]\n  });\n  const a = getKernel(i, t);\n  return this.convolution([a, a], {\n    border: n,\n    channels: r,\n    algorithm: \"separable\"\n  });\n}\nfunction getKernel(e, i) {\n  const t = e * 2 + 1, r = new Array(t), n = i || ((t - 1) * 0.5 - 1) * 0.3 + 0.8, a = -0.5 / (n * n);\n  let s = 0;\n  for (let o = 0; o < t; o++) {\n    const h = o - e, l = Math.exp(a * h * h);\n    r[o] = l, s += l;\n  }\n  for (let o = 0; o < t; o++)\n    r[o] /= s;\n  return r;\n}\nconst SOBEL_X = [\n  [-1, 0, 1],\n  [-2, 0, 2],\n  [-1, 0, 1]\n], SOBEL_Y = [\n  [-1, -2, -1],\n  [0, 0, 0],\n  [1, 2, 1]\n], SCHARR_X = [\n  [3, 0, -3],\n  [10, 0, -10],\n  [3, 0, -3]\n], SCHARR_Y = [\n  [3, 10, 3],\n  [0, 0, 0],\n  [-3, -10, -3]\n];\nvar src$2 = {}, fftlib = {}, hasRequiredFftlib;\nfunction requireFftlib() {\n  return hasRequiredFftlib || (hasRequiredFftlib = 1, function(e) {\n    (function() {\n      var i;\n      i = e;\n      var t = {\n        release: \"0.3.0\",\n        date: \"2013-03\"\n      };\n      i.toString = function() {\n        return \"version \" + t.release + \", released \" + t.date;\n      };\n      for (var r = 0, n = null, a = null, s = {\n        init: function(l) {\n          if (l !== 0 && (l & l - 1) === 0)\n            r = l, s._initArray(), s._makeBitReversalTable(), s._makeCosSinTable();\n          else\n            throw new Error(\"init: radix-2 required\");\n        },\n        // 1D-FFT\n        fft1d: function(l, f) {\n          s.fft(l, f, 1);\n        },\n        // 1D-IFFT\n        ifft1d: function(l, f) {\n          var b = 1 / r;\n          s.fft(l, f, -1);\n          for (var w = 0; w < r; w++)\n            l[w] *= b, f[w] *= b;\n        },\n        // 1D-IFFT\n        bt1d: function(l, f) {\n          s.fft(l, f, -1);\n        },\n        // 2D-FFT Not very useful if the number of rows have to be equal to cols\n        fft2d: function(l, f) {\n          for (var b = [], w = [], g = 0, E = 0; E < r; E++) {\n            g = E * r;\n            for (var k = 0; k < r; k++)\n              b[k] = l[k + g], w[k] = f[k + g];\n            s.fft1d(b, w);\n            for (var A = 0; A < r; A++)\n              l[A + g] = b[A], f[A + g] = w[A];\n          }\n          for (var T = 0; T < r; T++) {\n            for (var C = 0; C < r; C++)\n              g = T + C * r, b[C] = l[g], w[C] = f[g];\n            s.fft1d(b, w);\n            for (var D = 0; D < r; D++)\n              g = T + D * r, l[g] = b[D], f[g] = w[D];\n          }\n        },\n        // 2D-IFFT\n        ifft2d: function(l, f) {\n          for (var b = [], w = [], g = 0, E = 0; E < r; E++) {\n            g = E * r;\n            for (var k = 0; k < r; k++)\n              b[k] = l[k + g], w[k] = f[k + g];\n            s.ifft1d(b, w);\n            for (var A = 0; A < r; A++)\n              l[A + g] = b[A], f[A + g] = w[A];\n          }\n          for (var T = 0; T < r; T++) {\n            for (var C = 0; C < r; C++)\n              g = T + C * r, b[C] = l[g], w[C] = f[g];\n            s.ifft1d(b, w);\n            for (var D = 0; D < r; D++)\n              g = T + D * r, l[g] = b[D], f[g] = w[D];\n          }\n        },\n        // core operation of FFT\n        fft: function(l, f, b) {\n          for (var w, g, E, k, A, T, C, D, $, P = r >> 2, z = 0; z < r; z++)\n            k = n[z], z < k && (A = l[z], l[z] = l[k], l[k] = A, A = f[z], f[z] = f[k], f[k] = A);\n          for (var B = 1; B < r; B <<= 1) {\n            g = 0, w = r / (B << 1);\n            for (var F = 0; F < B; F++) {\n              T = a[g + P], C = b * a[g];\n              for (var O = F; O < r; O += B << 1)\n                E = O + B, D = T * l[E] + C * f[E], $ = T * f[E] - C * l[E], l[E] = l[O] - D, l[O] += D, f[E] = f[O] - $, f[O] += $;\n              g += w;\n            }\n          }\n        },\n        // initialize the array (supports TypedArray)\n        _initArray: function() {\n          typeof Uint32Array < \"u\" ? n = new Uint32Array(r) : n = [], typeof Float64Array < \"u\" ? a = new Float64Array(r * 1.25) : a = [];\n        },\n        // zero padding\n        _paddingZero: function() {\n        },\n        // makes bit reversal table\n        _makeBitReversalTable: function() {\n          var l = 0, f = 0, b = 0;\n          for (n[0] = 0; ++l < r; ) {\n            for (b = r >> 1; b <= f; )\n              f -= b, b >>= 1;\n            f += b, n[l] = f;\n          }\n        },\n        // makes trigonometiric function table\n        _makeCosSinTable: function() {\n          var l = r >> 1, f = r >> 2, b = r >> 3, w = l + f, g = Math.sin(Math.PI / r), E = 2 * g * g, k = Math.sqrt(E * (2 - E)), A = a[f] = 1, T = a[0] = 0;\n          g = 2 * E;\n          for (var C = 1; C < b; C++)\n            A -= E, E += g * A, T += k, k -= g * T, a[C] = T, a[f - C] = A;\n          b !== 0 && (a[b] = Math.sqrt(0.5));\n          for (var D = 0; D < f; D++)\n            a[l - D] = a[D];\n          for (var $ = 0; $ < w; $++)\n            a[$ + l] = -a[$];\n        }\n      }, o = [\"init\", \"fft1d\", \"ifft1d\", \"fft2d\", \"ifft2d\"], h = 0; h < o.length; h++)\n        i[o[h]] = s[o[h]];\n      return i.bt = s.bt1d, i.fft = s.fft1d, i.ifft = s.ifft1d, i;\n    }).call(fftlib);\n  }(fftlib)), fftlib;\n}\nvar FFTUtils_1, hasRequiredFFTUtils;\nfunction requireFFTUtils() {\n  if (hasRequiredFFTUtils) return FFTUtils_1;\n  hasRequiredFFTUtils = 1;\n  var e = requireFftlib(), i = {\n    DEBUG: !1,\n    /**\n     * Calculates the inverse of a 2D Fourier transform\n     *\n     * @param ft\n     * @param ftRows\n     * @param ftCols\n     * @return\n     */\n    ifft2DArray: function(t, r, n) {\n      var a = new Array(r * n), s = r / 2, o = (n - 1) * 2;\n      e.init(s);\n      for (var h = { re: new Array(s), im: new Array(s) }, l = 0; l < n; l++) {\n        for (var f = s - 1; f >= 0; f--)\n          h.re[f] = t[f * 2 * n + l], h.im[f] = t[(f * 2 + 1) * n + l];\n        e.bt(h.re, h.im);\n        for (var f = s - 1; f >= 0; f--)\n          a[f * 2 * n + l] = h.re[f], a[(f * 2 + 1) * n + l] = h.im[f];\n      }\n      var b = new Array(s * o);\n      e.init(o);\n      for (var w = { re: new Array(o), im: new Array(o) }, g = o * s, f = 0; f < r; f += 2) {\n        w.re[0] = a[f * n], w.im[0] = a[(f + 1) * n];\n        for (var l = 1; l < n; l++)\n          w.re[l] = a[f * n + l], w.im[l] = a[(f + 1) * n + l], w.re[o - l] = a[f * n + l], w.im[o - l] = -a[(f + 1) * n + l];\n        e.bt(w.re, w.im);\n        for (var E = f / 2 * o, l = o - 1; l >= 0; l--)\n          b[E + l] = w.re[l] / g;\n      }\n      return b;\n    },\n    /**\n     * Calculates the fourier transform of a matrix of size (nRows,nCols) It is\n     * assumed that both nRows and nCols are a power of two\n     *\n     * On exit the matrix has dimensions (nRows * 2, nCols / 2 + 1) where the\n     * even rows contain the real part and the odd rows the imaginary part of the\n     * transform\n     * @param data\n     * @param nRows\n     * @param nCols\n     * @return\n     */\n    fft2DArray: function(t, r, n, a) {\n      Object.assign({}, { inplace: !0 });\n      var s = n / 2 + 1, o = r * 2, h = new Array(o * s);\n      e.init(n);\n      for (var l = { re: new Array(n), im: new Array(n) }, f = { re: new Array(n), im: new Array(n) }, b = { re: new Array(n), im: new Array(n) }, w, g, E, k, A, T = 0; T < r / 2; T++) {\n        w = T * 2 * n, l.re = t.slice(w, w + n), w = (T * 2 + 1) * n, l.im = t.slice(w, w + n), e.fft1d(l.re, l.im), this.reconstructTwoRealFFT(l, f, b), g = T * 4 * s, E = (T * 4 + 1) * s, k = (T * 4 + 2) * s, A = (T * 4 + 3) * s;\n        for (var C = s - 1; C >= 0; C--)\n          h[g + C] = f.re[C], h[E + C] = f.im[C], h[k + C] = b.re[C], h[A + C] = b.im[C];\n      }\n      f = null, b = null;\n      var D = new Array(o * s);\n      e.init(r);\n      for (var $ = { re: new Array(r), im: new Array(r) }, P = s - 1; P >= 0; P--) {\n        for (var T = r - 1; T >= 0; T--)\n          $.re[T] = h[T * 2 * s + P], $.im[T] = h[(T * 2 + 1) * s + P], isNaN($.re[T]) && ($.re[T] = 0), isNaN($.im[T]) && ($.im[T] = 0);\n        e.fft1d($.re, $.im);\n        for (var T = r - 1; T >= 0; T--)\n          D[T * 2 * s + P] = $.re[T], D[(T * 2 + 1) * s + P] = $.im[T];\n      }\n      return D;\n    },\n    /**\n     *\n     * @param fourierTransform\n     * @param realTransform1\n     * @param realTransform2\n     *\n     * Reconstructs the individual Fourier transforms of two simultaneously\n     * transformed series. Based on the Symmetry relationships (the asterisk\n     * denotes the complex conjugate)\n     *\n     * F_{N-n} = F_n^{*} for a purely real f transformed to F\n     *\n     * G_{N-n} = G_n^{*} for a purely imaginary g transformed to G\n     *\n     */\n    reconstructTwoRealFFT: function(t, r, n) {\n      var a = t.re.length;\n      r.re[0] = t.re[0], r.im[0] = 0, n.re[0] = t.im[0], n.im[0] = 0;\n      for (var s, o, h, l, f, b = a / 2; b > 0; b--)\n        f = a - b, s = 0.5 * (t.re[b] - t.re[f]), o = 0.5 * (t.re[b] + t.re[f]), h = 0.5 * (t.im[b] - t.im[f]), l = 0.5 * (t.im[b] + t.im[f]), r.re[b] = o, r.im[b] = h, r.re[f] = o, r.im[f] = -h, n.re[b] = l, n.im[b] = -s, n.re[f] = l, n.im[f] = s;\n    },\n    /**\n     * In place version of convolute 2D\n     *\n     * @param ftSignal\n     * @param ftFilter\n     * @param ftRows\n     * @param ftCols\n     * @return\n     */\n    convolute2DI: function(t, r, n, a) {\n      for (var s, o, h = 0; h < n / 2; h++)\n        for (var l = 0; l < a; l++)\n          s = t[h * 2 * a + l] * r[h * 2 * a + l] - t[(h * 2 + 1) * a + l] * r[(h * 2 + 1) * a + l], o = t[h * 2 * a + l] * r[(h * 2 + 1) * a + l] + t[(h * 2 + 1) * a + l] * r[h * 2 * a + l], t[h * 2 * a + l] = s, t[(h * 2 + 1) * a + l] = o;\n    },\n    /**\n     *\n     * @param data\n     * @param kernel\n     * @param nRows\n     * @param nCols\n     * @returns {*}\n     */\n    convolute: function(t, r, n, a, s) {\n      for (var o = new Array(a * n), h = 0; h < n * a; h++)\n        o[h] = t[h];\n      o = this.fft2DArray(o, n, a);\n      for (var l = r.length, f = r[0].length, b = new Array(a * n), h = 0; h < a * n; h++)\n        b[h] = 0;\n      for (var w, g, E = Math.floor((l - 1) / 2), k = Math.floor((f - 1) / 2), A = 0; A < l; A++) {\n        w = (A - E + n) % n;\n        for (var T = 0; T < f; T++)\n          g = (T - k + a) % a, b[w * a + g] = r[A][T];\n      }\n      b = this.fft2DArray(b, n, a);\n      var C = n * 2, D = a / 2 + 1;\n      return this.convolute2DI(o, b, C, D), this.ifft2DArray(o, C, D);\n    },\n    toRadix2: function(t, r, n) {\n      var a, s, o, h, l = n, f = r;\n      if (!(n !== 0 && (n & n - 1) === 0)) {\n        for (l = 0; n >> ++l != 0; ) ;\n        l = 1 << l;\n      }\n      if (!(r !== 0 && (r & r - 1) === 0)) {\n        for (f = 0; r >> ++f != 0; ) ;\n        f = 1 << f;\n      }\n      if (f == r && l == n)\n        return { data: t, rows: r, cols: n };\n      var b = new Array(f * l), w = Math.floor((f - r) / 2) - r, g = Math.floor((l - n) / 2) - n;\n      for (a = 0; a < f; a++)\n        for (o = a * l, h = (a - w) % r * n, s = 0; s < l; s++)\n          b[o + s] = t[h + (s - g) % n];\n      return { data: b, rows: f, cols: l };\n    },\n    /**\n     * Crop the given matrix to fit the corresponding number of rows and columns\n     */\n    crop: function(t, r, n, a, s, o) {\n      if (r == a && n == s)\n        return t;\n      Object.assign({}, o);\n      var h = new Array(s * a), l = Math.floor((r - a) / 2), f = Math.floor((n - s) / 2), b, w, g, E;\n      for (g = 0; g < a; g++)\n        for (b = g * s, w = (g + l) * n, E = 0; E < s; E++)\n          h[b + E] = t[w + (E + f)];\n      return h;\n    }\n  };\n  return FFTUtils_1 = i, FFTUtils_1;\n}\nvar hasRequiredSrc$2;\nfunction requireSrc$2() {\n  return hasRequiredSrc$2 || (hasRequiredSrc$2 = 1, src$2.FFTUtils = requireFFTUtils(), src$2.FFT = requireFftlib()), src$2;\n}\nvar src$1, hasRequiredSrc$1;\nfunction requireSrc$1() {\n  if (hasRequiredSrc$1) return src$1;\n  hasRequiredSrc$1 = 1;\n  var e = requireSrc$2().FFTUtils;\n  function i(a, s, o) {\n    var h = n(a), l = h.data, f = Object.assign({ normalize: !1, divisor: 1, rows: h.rows, cols: h.cols }, o), b, w;\n    if (f.rows && f.cols)\n      b = f.rows, w = f.cols;\n    else\n      throw new Error(\"Invalid number of rows or columns \" + b + \" \" + w);\n    var g = f.divisor, E, k, A = s.length, T = s[0].length;\n    if (f.normalize)\n      for (g = 0, E = 0; E < A; E++)\n        for (k = 0; k < T; k++)\n          g += s[E][k];\n    if (g === 0)\n      throw new RangeError(\"convolution: The divisor is equal to zero\");\n    var C = e.toRadix2(l, b, w), D = e.convolute(C.data, s, C.rows, C.cols);\n    if (D = e.crop(D, C.rows, C.cols, b, w), g != 0 && g != 1)\n      for (E = 0; E < D.length; E++)\n        D[E] /= g;\n    return D;\n  }\n  function t(a, s, o) {\n    var h = n(a), l = h.data, f = Object.assign({ normalize: !1, divisor: 1, rows: h.rows, cols: h.cols }, o), b, w;\n    if (f.rows && f.cols)\n      b = f.rows, w = f.cols;\n    else\n      throw new Error(\"Invalid number of rows or columns \" + b + \" \" + w);\n    var g = f.divisor, E = s.length, k = s[0].length, A, T, C, D, $, P, z, B, F;\n    if (f.normalize)\n      for (g = 0, A = 0; A < E; A++)\n        for (T = 0; T < k; T++)\n          g += s[A][T];\n    if (g === 0)\n      throw new RangeError(\"convolution: The divisor is equal to zero\");\n    var O = new Array(b * w), N = Math.floor(E / 2), G = Math.floor(k / 2);\n    for (D = 0; D < b; D++)\n      for (C = 0; C < w; C++) {\n        for (P = 0, T = 0; T < E; T++)\n          for (A = 0; A < k; A++)\n            z = s[E - T - 1][k - A - 1], B = (D + T - N + b) % b, F = (C + A - G + w) % w, $ = B * w + F, P += l[$] * z;\n        $ = D * w + C, O[$] = P / g;\n      }\n    return O;\n  }\n  function r(a, s, o) {\n    var h = 1e3;\n    o && o.factor && (h = o.factor);\n    var l = new Array(s), f, b, w, g;\n    h *= -1;\n    var E = (s - 1) / 2, k = 2 * a * a;\n    for (f = 0; f < s; f++)\n      for (l[f] = new Array(s), g = (f - E) * (f - E), b = 0; b < s; b++)\n        w = -((b - E) * (b - E) + g) / k, l[f][b] = Math.round(h * (1 + w) * Math.exp(w));\n    return l;\n  }\n  function n(a) {\n    var s = a, o, h;\n    if (typeof a[0] != \"number\") {\n      o = a.length, h = a[0].length, s = new Array(o * h);\n      for (var l = 0; l < o; l++)\n        for (var f = 0; f < h; f++)\n          s[l * h + f] = a[l][f];\n    } else {\n      var b = Math.sqrt(a.length);\n      Number.isInteger(b) && (o = b, h = b);\n    }\n    return { data: s, rows: o, cols: h };\n  }\n  return src$1 = {\n    fft: i,\n    direct: t,\n    kernelFactory: { LoG: r },\n    matrix2Array: n\n  }, src$1;\n}\nvar srcExports$1 = requireSrc$1(), _isFinite, hasRequired_isFinite;\nfunction require_isFinite() {\n  return hasRequired_isFinite || (hasRequired_isFinite = 1, _isFinite = Number.isFinite || function(e) {\n    return !(typeof e != \"number\" || e !== e || e === 1 / 0 || e === -1 / 0);\n  }), _isFinite;\n}\nvar isInteger$1, hasRequiredIsInteger;\nfunction requireIsInteger() {\n  if (hasRequiredIsInteger) return isInteger$1;\n  hasRequiredIsInteger = 1;\n  var e = require_isFinite();\n  return isInteger$1 = Number.isInteger || function(i) {\n    return typeof i == \"number\" && e(i) && Math.floor(i) === i;\n  }, isInteger$1;\n}\nvar isIntegerExports = requireIsInteger();\nconst isInteger = /* @__PURE__ */ getDefaultExportFromCjs(isIntegerExports);\nfunction validateKernel(e) {\n  let i, t;\n  if (Array.isArray(e))\n    if (Array.isArray(e[0])) {\n      if ((e.length & 1) === 0 || (e[0].length & 1) === 0)\n        throw new RangeError(\n          \"validateKernel: Kernel rows and columns should be odd numbers\"\n        );\n      i = Math.floor(e.length / 2), t = Math.floor(e[0].length / 2);\n    } else {\n      let r = Math.sqrt(e.length);\n      if (isInteger(r))\n        t = i = Math.floor(Math.sqrt(e.length) / 2);\n      else\n        throw new RangeError(\"validateKernel: Kernel array should be a square\");\n      let n = new Array(r);\n      for (let a = 0; a < r; a++) {\n        n[a] = new Array(r);\n        for (let s = 0; s < r; s++)\n          n[a][s] = e[a * r + s];\n      }\n      e = n;\n    }\n  else\n    throw new Error(`validateKernel: Invalid Kernel: ${e}`);\n  return { kernel: e, kWidth: t, kHeight: i };\n}\nfunction clamp(e, i) {\n  return Math.round(Math.min(Math.max(e, 0), i.maxValue));\n}\nfunction directConvolution(e, i, t) {\n  if (t === void 0) {\n    const a = e.length + i.length - 1;\n    t = new Array(a);\n  }\n  fill(t);\n  for (var r = 0; r < e.length; r++)\n    for (var n = 0; n < i.length; n++)\n      t[r + n] += e[r] * i[n];\n  return t;\n}\nfunction fill(e) {\n  for (var i = 0; i < e.length; i++)\n    e[i] = 0;\n}\nvar fft, hasRequiredFft;\nfunction requireFft() {\n  if (hasRequiredFft) return fft;\n  hasRequiredFft = 1;\n  function e(i) {\n    if (this.size = i | 0, this.size <= 1 || (this.size & this.size - 1) !== 0)\n      throw new Error(\"FFT size must be a power of two and bigger than 1\");\n    this._csize = i << 1;\n    for (var t = new Array(this.size * 2), r = 0; r < t.length; r += 2) {\n      const l = Math.PI * r / this.size;\n      t[r] = Math.cos(l), t[r + 1] = -Math.sin(l);\n    }\n    this.table = t;\n    for (var n = 0, a = 1; this.size > a; a <<= 1)\n      n++;\n    this._width = n % 2 === 0 ? n - 1 : n, this._bitrev = new Array(1 << this._width);\n    for (var s = 0; s < this._bitrev.length; s++) {\n      this._bitrev[s] = 0;\n      for (var o = 0; o < this._width; o += 2) {\n        var h = this._width - o - 2;\n        this._bitrev[s] |= (s >>> o & 3) << h;\n      }\n    }\n    this._out = null, this._data = null, this._inv = 0;\n  }\n  return fft = e, e.prototype.fromComplexArray = function(t, r) {\n    for (var n = r || new Array(t.length >>> 1), a = 0; a < t.length; a += 2)\n      n[a >>> 1] = t[a];\n    return n;\n  }, e.prototype.createComplexArray = function() {\n    const t = new Array(this._csize);\n    for (var r = 0; r < t.length; r++)\n      t[r] = 0;\n    return t;\n  }, e.prototype.toComplexArray = function(t, r) {\n    for (var n = r || this.createComplexArray(), a = 0; a < n.length; a += 2)\n      n[a] = t[a >>> 1], n[a + 1] = 0;\n    return n;\n  }, e.prototype.completeSpectrum = function(t) {\n    for (var r = this._csize, n = r >>> 1, a = 2; a < n; a += 2)\n      t[r - a] = t[a], t[r - a + 1] = -t[a + 1];\n  }, e.prototype.transform = function(t, r) {\n    if (t === r)\n      throw new Error(\"Input and output buffers must be different\");\n    this._out = t, this._data = r, this._inv = 0, this._transform4(), this._out = null, this._data = null;\n  }, e.prototype.realTransform = function(t, r) {\n    if (t === r)\n      throw new Error(\"Input and output buffers must be different\");\n    this._out = t, this._data = r, this._inv = 0, this._realTransform4(), this._out = null, this._data = null;\n  }, e.prototype.inverseTransform = function(t, r) {\n    if (t === r)\n      throw new Error(\"Input and output buffers must be different\");\n    this._out = t, this._data = r, this._inv = 1, this._transform4();\n    for (var n = 0; n < t.length; n++)\n      t[n] /= this.size;\n    this._out = null, this._data = null;\n  }, e.prototype._transform4 = function() {\n    var t = this._out, r = this._csize, n = this._width, a = 1 << n, s = r / a << 1, o, h, l = this._bitrev;\n    if (s === 4)\n      for (o = 0, h = 0; o < r; o += s, h++) {\n        const A = l[h];\n        this._singleTransform2(o, A, a);\n      }\n    else\n      for (o = 0, h = 0; o < r; o += s, h++) {\n        const A = l[h];\n        this._singleTransform4(o, A, a);\n      }\n    var f = this._inv ? -1 : 1, b = this.table;\n    for (a >>= 2; a >= 2; a >>= 2) {\n      s = r / a << 1;\n      var w = s >>> 2;\n      for (o = 0; o < r; o += s)\n        for (var g = o + w, E = o, k = 0; E < g; E += 2, k += a) {\n          const A = E, T = A + w, C = T + w, D = C + w, $ = t[A], P = t[A + 1], z = t[T], B = t[T + 1], F = t[C], O = t[C + 1], N = t[D], G = t[D + 1], V = $, J = P, Q = b[k], W = f * b[k + 1], ne = z * Q - B * W, pe = z * W + B * Q, be = b[2 * k], ve = f * b[2 * k + 1], Ee = F * be - O * ve, Ae = F * ve + O * be, _e = b[3 * k], Be = f * b[3 * k + 1], Me = N * _e - G * Be, re = N * Be + G * _e, Te = V + Ee, Fe = J + Ae, Se = V - Ee, Ye = J - Ae, Je = ne + Me, et = pe + re, Ve = f * (ne - Me), tt = f * (pe - re), qe = Te + Je, Re = Fe + et, nt = Te - Je, Ge = Fe - et, Ne = Se + tt, he = Ye - Ve, Qe = Se - tt, Ze = Ye + Ve;\n          t[A] = qe, t[A + 1] = Re, t[T] = Ne, t[T + 1] = he, t[C] = nt, t[C + 1] = Ge, t[D] = Qe, t[D + 1] = Ze;\n        }\n    }\n  }, e.prototype._singleTransform2 = function(t, r, n) {\n    const a = this._out, s = this._data, o = s[r], h = s[r + 1], l = s[r + n], f = s[r + n + 1], b = o + l, w = h + f, g = o - l, E = h - f;\n    a[t] = b, a[t + 1] = w, a[t + 2] = g, a[t + 3] = E;\n  }, e.prototype._singleTransform4 = function(t, r, n) {\n    const a = this._out, s = this._data, o = this._inv ? -1 : 1, h = n * 2, l = n * 3, f = s[r], b = s[r + 1], w = s[r + n], g = s[r + n + 1], E = s[r + h], k = s[r + h + 1], A = s[r + l], T = s[r + l + 1], C = f + E, D = b + k, $ = f - E, P = b - k, z = w + A, B = g + T, F = o * (w - A), O = o * (g - T), N = C + z, G = D + B, V = $ + O, J = P - F, Q = C - z, W = D - B, ne = $ - O, pe = P + F;\n    a[t] = N, a[t + 1] = G, a[t + 2] = V, a[t + 3] = J, a[t + 4] = Q, a[t + 5] = W, a[t + 6] = ne, a[t + 7] = pe;\n  }, e.prototype._realTransform4 = function() {\n    var t = this._out, r = this._csize, n = this._width, a = 1 << n, s = r / a << 1, o, h, l = this._bitrev;\n    if (s === 4)\n      for (o = 0, h = 0; o < r; o += s, h++) {\n        const te = l[h];\n        this._singleRealTransform2(o, te >>> 1, a >>> 1);\n      }\n    else\n      for (o = 0, h = 0; o < r; o += s, h++) {\n        const te = l[h];\n        this._singleRealTransform4(o, te >>> 1, a >>> 1);\n      }\n    var f = this._inv ? -1 : 1, b = this.table;\n    for (a >>= 2; a >= 2; a >>= 2) {\n      s = r / a << 1;\n      var w = s >>> 1, g = w >>> 1, E = g >>> 1;\n      for (o = 0; o < r; o += s)\n        for (var k = 0, A = 0; k <= E; k += 2, A += a) {\n          var T = o + k, C = T + g, D = C + g, $ = D + g, P = t[T], z = t[T + 1], B = t[C], F = t[C + 1], O = t[D], N = t[D + 1], G = t[$], V = t[$ + 1], J = P, Q = z, W = b[A], ne = f * b[A + 1], pe = B * W - F * ne, be = B * ne + F * W, ve = b[2 * A], Ee = f * b[2 * A + 1], Ae = O * ve - N * Ee, _e = O * Ee + N * ve, Be = b[3 * A], Me = f * b[3 * A + 1], re = G * Be - V * Me, Te = G * Me + V * Be, Fe = J + Ae, Se = Q + _e, Ye = J - Ae, Je = Q - _e, et = pe + re, Ve = be + Te, tt = f * (pe - re), qe = f * (be - Te), Re = Fe + et, nt = Se + Ve, Ge = Ye + qe, Ne = Je - tt;\n          if (t[T] = Re, t[T + 1] = nt, t[C] = Ge, t[C + 1] = Ne, k === 0) {\n            var he = Fe - et, Qe = Se - Ve;\n            t[D] = he, t[D + 1] = Qe;\n            continue;\n          }\n          if (k !== E) {\n            var Ze = Ye, He = -Je, De = Fe, lt = -Se, ot = -f * qe, Le = -f * tt, ze = -f * Ve, je = -f * et, Oe = Ze + ot, st = He + Le, Z = De + je, ue = lt - ze, xe = o + g - k, ke = o + w - k;\n            t[xe] = Oe, t[xe + 1] = st, t[ke] = Z, t[ke + 1] = ue;\n          }\n        }\n    }\n  }, e.prototype._singleRealTransform2 = function(t, r, n) {\n    const a = this._out, s = this._data, o = s[r], h = s[r + n], l = o + h, f = o - h;\n    a[t] = l, a[t + 1] = 0, a[t + 2] = f, a[t + 3] = 0;\n  }, e.prototype._singleRealTransform4 = function(t, r, n) {\n    const a = this._out, s = this._data, o = this._inv ? -1 : 1, h = n * 2, l = n * 3, f = s[r], b = s[r + n], w = s[r + h], g = s[r + l], E = f + w, k = f - w, A = b + g, T = o * (b - g), C = E + A, D = k, $ = -T, P = E - A, z = k, B = T;\n    a[t] = C, a[t + 1] = 0, a[t + 2] = D, a[t + 3] = $, a[t + 4] = P, a[t + 5] = 0, a[t + 6] = z, a[t + 7] = B;\n  }, fft;\n}\nrequireFft();\nfunction convolutionSeparable(e, i, t, r) {\n  const n = new Array(e.length);\n  let a, s, o, h;\n  h = i[1], o = (h.length - 1) / 2, s = new Array(t + h.length - 1), a = new Array(t);\n  for (let l = 0; l < r; l++) {\n    for (let f = 0; f < t; f++)\n      a[f] = e[l * t + f];\n    directConvolution(a, h, s);\n    for (let f = 0; f < t; f++)\n      n[l * t + f] = s[o + f];\n  }\n  h = i[0], o = (h.length - 1) / 2, s = new Array(r + h.length - 1), a = new Array(r);\n  for (let l = 0; l < t; l++) {\n    for (let f = 0; f < r; f++)\n      a[f] = n[f * t + l];\n    directConvolution(a, h, s);\n    for (let f = 0; f < r; f++)\n      n[f * t + l] = s[o + f];\n  }\n  return n;\n}\nvar matrix$1 = {};\nconst toString = Object.prototype.toString;\nfunction isAnyArray(e) {\n  const i = toString.call(e);\n  return i.endsWith(\"Array]\") && !i.includes(\"Big\");\n}\nconst libEsm = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  isAnyArray\n}, Symbol.toStringTag, { value: \"Module\" })), require$$0$1 = /* @__PURE__ */ getAugmentedNamespace(libEsm);\nfunction max$1(e) {\n  var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n  if (!isAnyArray(e))\n    throw new TypeError(\"input must be an array\");\n  if (e.length === 0)\n    throw new TypeError(\"input must not be empty\");\n  var t = i.fromIndex, r = t === void 0 ? 0 : t, n = i.toIndex, a = n === void 0 ? e.length : n;\n  if (r < 0 || r >= e.length || !Number.isInteger(r))\n    throw new Error(\"fromIndex must be a positive integer smaller than length\");\n  if (a <= r || a > e.length || !Number.isInteger(a))\n    throw new Error(\"toIndex must be an integer greater than fromIndex and at most equal to length\");\n  for (var s = e[r], o = r + 1; o < a; o++)\n    e[o] > s && (s = e[o]);\n  return s;\n}\nfunction min$1(e) {\n  var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n  if (!isAnyArray(e))\n    throw new TypeError(\"input must be an array\");\n  if (e.length === 0)\n    throw new TypeError(\"input must not be empty\");\n  var t = i.fromIndex, r = t === void 0 ? 0 : t, n = i.toIndex, a = n === void 0 ? e.length : n;\n  if (r < 0 || r >= e.length || !Number.isInteger(r))\n    throw new Error(\"fromIndex must be a positive integer smaller than length\");\n  if (a <= r || a > e.length || !Number.isInteger(a))\n    throw new Error(\"toIndex must be an integer greater than fromIndex and at most equal to length\");\n  for (var s = e[r], o = r + 1; o < a; o++)\n    e[o] < s && (s = e[o]);\n  return s;\n}\nfunction rescale(e) {\n  var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n  if (isAnyArray(e)) {\n    if (e.length === 0)\n      throw new TypeError(\"input must not be empty\");\n  } else throw new TypeError(\"input must be an array\");\n  var t;\n  if (i.output !== void 0) {\n    if (!isAnyArray(i.output))\n      throw new TypeError(\"output option must be an array if specified\");\n    t = i.output;\n  } else\n    t = new Array(e.length);\n  var r = min$1(e), n = max$1(e);\n  if (r === n)\n    throw new RangeError(\"minimum and maximum input values are equal. Cannot rescale a constant array\");\n  var a = i.min, s = a === void 0 ? i.autoMinMax ? r : 0 : a, o = i.max, h = o === void 0 ? i.autoMinMax ? n : 1 : o;\n  if (s >= h)\n    throw new RangeError(\"min option must be smaller than max option\");\n  for (var l = (h - s) / (n - r), f = 0; f < e.length; f++)\n    t[f] = (e[f] - r) * l + s;\n  return t;\n}\nconst libEs6 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  default: rescale\n}, Symbol.toStringTag, { value: \"Module\" })), require$$1 = /* @__PURE__ */ getAugmentedNamespace(libEs6);\nvar hasRequiredMatrix;\nfunction requireMatrix() {\n  var de, Ct, oe;\n  if (hasRequiredMatrix) return matrix$1;\n  hasRequiredMatrix = 1, Object.defineProperty(matrix$1, \"__esModule\", { value: !0 });\n  var e = require$$0$1, i = require$$1;\n  const t = \" \".repeat(2), r = \" \".repeat(4);\n  function n() {\n    return a(this);\n  }\n  function a(M, _ = {}) {\n    const {\n      maxRows: d = 15,\n      maxColumns: u = 10,\n      maxNumSize: v = 8,\n      padMinus: S = \"auto\"\n    } = _;\n    return `${M.constructor.name} {\n${t}[\n${r}${s(M, d, u, v, S)}\n${t}]\n${t}rows: ${M.rows}\n${t}columns: ${M.columns}\n}`;\n  }\n  function s(M, _, d, u, v) {\n    const { rows: S, columns: L } = M, q = Math.min(S, _), X = Math.min(L, d), j = [];\n    if (v === \"auto\") {\n      v = !1;\n      e: for (let ae = 0; ae < q; ae++)\n        for (let K = 0; K < X; K++)\n          if (M.get(ae, K) < 0) {\n            v = !0;\n            break e;\n          }\n    }\n    for (let ae = 0; ae < q; ae++) {\n      let K = [];\n      for (let ce = 0; ce < X; ce++)\n        K.push(o(M.get(ae, ce), u, v));\n      j.push(`${K.join(\" \")}`);\n    }\n    return X !== L && (j[j.length - 1] += ` ... ${L - d} more columns`), q !== S && j.push(`... ${S - _} more rows`), j.join(`\n${r}`);\n  }\n  function o(M, _, d) {\n    return (M >= 0 && d ? ` ${h(M, _ - 1)}` : h(M, _)).padEnd(_);\n  }\n  function h(M, _) {\n    let d = M.toString();\n    if (d.length <= _) return d;\n    let u = M.toFixed(_);\n    if (u.length > _ && (u = M.toFixed(Math.max(0, _ - (u.length - _)))), u.length <= _ && !u.startsWith(\"0.000\") && !u.startsWith(\"-0.000\"))\n      return u;\n    let v = M.toExponential(_);\n    return v.length > _ && (v = M.toExponential(Math.max(0, _ - (v.length - _)))), v.slice(0);\n  }\n  function l(M, _) {\n    M.prototype.add = function(u) {\n      return typeof u == \"number\" ? this.addS(u) : this.addM(u);\n    }, M.prototype.addS = function(u) {\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) + u);\n      return this;\n    }, M.prototype.addM = function(u) {\n      if (u = _.checkMatrix(u), this.rows !== u.rows || this.columns !== u.columns)\n        throw new RangeError(\"Matrices dimensions must be equal\");\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) + u.get(v, S));\n      return this;\n    }, M.add = function(u, v) {\n      return new _(u).add(v);\n    }, M.prototype.sub = function(u) {\n      return typeof u == \"number\" ? this.subS(u) : this.subM(u);\n    }, M.prototype.subS = function(u) {\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) - u);\n      return this;\n    }, M.prototype.subM = function(u) {\n      if (u = _.checkMatrix(u), this.rows !== u.rows || this.columns !== u.columns)\n        throw new RangeError(\"Matrices dimensions must be equal\");\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) - u.get(v, S));\n      return this;\n    }, M.sub = function(u, v) {\n      return new _(u).sub(v);\n    }, M.prototype.subtract = M.prototype.sub, M.prototype.subtractS = M.prototype.subS, M.prototype.subtractM = M.prototype.subM, M.subtract = M.sub, M.prototype.mul = function(u) {\n      return typeof u == \"number\" ? this.mulS(u) : this.mulM(u);\n    }, M.prototype.mulS = function(u) {\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) * u);\n      return this;\n    }, M.prototype.mulM = function(u) {\n      if (u = _.checkMatrix(u), this.rows !== u.rows || this.columns !== u.columns)\n        throw new RangeError(\"Matrices dimensions must be equal\");\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) * u.get(v, S));\n      return this;\n    }, M.mul = function(u, v) {\n      return new _(u).mul(v);\n    }, M.prototype.multiply = M.prototype.mul, M.prototype.multiplyS = M.prototype.mulS, M.prototype.multiplyM = M.prototype.mulM, M.multiply = M.mul, M.prototype.div = function(u) {\n      return typeof u == \"number\" ? this.divS(u) : this.divM(u);\n    }, M.prototype.divS = function(u) {\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) / u);\n      return this;\n    }, M.prototype.divM = function(u) {\n      if (u = _.checkMatrix(u), this.rows !== u.rows || this.columns !== u.columns)\n        throw new RangeError(\"Matrices dimensions must be equal\");\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) / u.get(v, S));\n      return this;\n    }, M.div = function(u, v) {\n      return new _(u).div(v);\n    }, M.prototype.divide = M.prototype.div, M.prototype.divideS = M.prototype.divS, M.prototype.divideM = M.prototype.divM, M.divide = M.div, M.prototype.mod = function(u) {\n      return typeof u == \"number\" ? this.modS(u) : this.modM(u);\n    }, M.prototype.modS = function(u) {\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) % u);\n      return this;\n    }, M.prototype.modM = function(u) {\n      if (u = _.checkMatrix(u), this.rows !== u.rows || this.columns !== u.columns)\n        throw new RangeError(\"Matrices dimensions must be equal\");\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) % u.get(v, S));\n      return this;\n    }, M.mod = function(u, v) {\n      return new _(u).mod(v);\n    }, M.prototype.modulus = M.prototype.mod, M.prototype.modulusS = M.prototype.modS, M.prototype.modulusM = M.prototype.modM, M.modulus = M.mod, M.prototype.and = function(u) {\n      return typeof u == \"number\" ? this.andS(u) : this.andM(u);\n    }, M.prototype.andS = function(u) {\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) & u);\n      return this;\n    }, M.prototype.andM = function(u) {\n      if (u = _.checkMatrix(u), this.rows !== u.rows || this.columns !== u.columns)\n        throw new RangeError(\"Matrices dimensions must be equal\");\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) & u.get(v, S));\n      return this;\n    }, M.and = function(u, v) {\n      return new _(u).and(v);\n    }, M.prototype.or = function(u) {\n      return typeof u == \"number\" ? this.orS(u) : this.orM(u);\n    }, M.prototype.orS = function(u) {\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) | u);\n      return this;\n    }, M.prototype.orM = function(u) {\n      if (u = _.checkMatrix(u), this.rows !== u.rows || this.columns !== u.columns)\n        throw new RangeError(\"Matrices dimensions must be equal\");\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) | u.get(v, S));\n      return this;\n    }, M.or = function(u, v) {\n      return new _(u).or(v);\n    }, M.prototype.xor = function(u) {\n      return typeof u == \"number\" ? this.xorS(u) : this.xorM(u);\n    }, M.prototype.xorS = function(u) {\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) ^ u);\n      return this;\n    }, M.prototype.xorM = function(u) {\n      if (u = _.checkMatrix(u), this.rows !== u.rows || this.columns !== u.columns)\n        throw new RangeError(\"Matrices dimensions must be equal\");\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) ^ u.get(v, S));\n      return this;\n    }, M.xor = function(u, v) {\n      return new _(u).xor(v);\n    }, M.prototype.leftShift = function(u) {\n      return typeof u == \"number\" ? this.leftShiftS(u) : this.leftShiftM(u);\n    }, M.prototype.leftShiftS = function(u) {\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) << u);\n      return this;\n    }, M.prototype.leftShiftM = function(u) {\n      if (u = _.checkMatrix(u), this.rows !== u.rows || this.columns !== u.columns)\n        throw new RangeError(\"Matrices dimensions must be equal\");\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) << u.get(v, S));\n      return this;\n    }, M.leftShift = function(u, v) {\n      return new _(u).leftShift(v);\n    }, M.prototype.signPropagatingRightShift = function(u) {\n      return typeof u == \"number\" ? this.signPropagatingRightShiftS(u) : this.signPropagatingRightShiftM(u);\n    }, M.prototype.signPropagatingRightShiftS = function(u) {\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) >> u);\n      return this;\n    }, M.prototype.signPropagatingRightShiftM = function(u) {\n      if (u = _.checkMatrix(u), this.rows !== u.rows || this.columns !== u.columns)\n        throw new RangeError(\"Matrices dimensions must be equal\");\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) >> u.get(v, S));\n      return this;\n    }, M.signPropagatingRightShift = function(u, v) {\n      return new _(u).signPropagatingRightShift(v);\n    }, M.prototype.rightShift = function(u) {\n      return typeof u == \"number\" ? this.rightShiftS(u) : this.rightShiftM(u);\n    }, M.prototype.rightShiftS = function(u) {\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) >>> u);\n      return this;\n    }, M.prototype.rightShiftM = function(u) {\n      if (u = _.checkMatrix(u), this.rows !== u.rows || this.columns !== u.columns)\n        throw new RangeError(\"Matrices dimensions must be equal\");\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) >>> u.get(v, S));\n      return this;\n    }, M.rightShift = function(u, v) {\n      return new _(u).rightShift(v);\n    }, M.prototype.zeroFillRightShift = M.prototype.rightShift, M.prototype.zeroFillRightShiftS = M.prototype.rightShiftS, M.prototype.zeroFillRightShiftM = M.prototype.rightShiftM, M.zeroFillRightShift = M.rightShift, M.prototype.not = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, ~this.get(u, v));\n      return this;\n    }, M.not = function(u) {\n      return new _(u).not();\n    }, M.prototype.abs = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.abs(this.get(u, v)));\n      return this;\n    }, M.abs = function(u) {\n      return new _(u).abs();\n    }, M.prototype.acos = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.acos(this.get(u, v)));\n      return this;\n    }, M.acos = function(u) {\n      return new _(u).acos();\n    }, M.prototype.acosh = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.acosh(this.get(u, v)));\n      return this;\n    }, M.acosh = function(u) {\n      return new _(u).acosh();\n    }, M.prototype.asin = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.asin(this.get(u, v)));\n      return this;\n    }, M.asin = function(u) {\n      return new _(u).asin();\n    }, M.prototype.asinh = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.asinh(this.get(u, v)));\n      return this;\n    }, M.asinh = function(u) {\n      return new _(u).asinh();\n    }, M.prototype.atan = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.atan(this.get(u, v)));\n      return this;\n    }, M.atan = function(u) {\n      return new _(u).atan();\n    }, M.prototype.atanh = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.atanh(this.get(u, v)));\n      return this;\n    }, M.atanh = function(u) {\n      return new _(u).atanh();\n    }, M.prototype.cbrt = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.cbrt(this.get(u, v)));\n      return this;\n    }, M.cbrt = function(u) {\n      return new _(u).cbrt();\n    }, M.prototype.ceil = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.ceil(this.get(u, v)));\n      return this;\n    }, M.ceil = function(u) {\n      return new _(u).ceil();\n    }, M.prototype.clz32 = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.clz32(this.get(u, v)));\n      return this;\n    }, M.clz32 = function(u) {\n      return new _(u).clz32();\n    }, M.prototype.cos = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.cos(this.get(u, v)));\n      return this;\n    }, M.cos = function(u) {\n      return new _(u).cos();\n    }, M.prototype.cosh = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.cosh(this.get(u, v)));\n      return this;\n    }, M.cosh = function(u) {\n      return new _(u).cosh();\n    }, M.prototype.exp = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.exp(this.get(u, v)));\n      return this;\n    }, M.exp = function(u) {\n      return new _(u).exp();\n    }, M.prototype.expm1 = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.expm1(this.get(u, v)));\n      return this;\n    }, M.expm1 = function(u) {\n      return new _(u).expm1();\n    }, M.prototype.floor = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.floor(this.get(u, v)));\n      return this;\n    }, M.floor = function(u) {\n      return new _(u).floor();\n    }, M.prototype.fround = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.fround(this.get(u, v)));\n      return this;\n    }, M.fround = function(u) {\n      return new _(u).fround();\n    }, M.prototype.log = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.log(this.get(u, v)));\n      return this;\n    }, M.log = function(u) {\n      return new _(u).log();\n    }, M.prototype.log1p = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.log1p(this.get(u, v)));\n      return this;\n    }, M.log1p = function(u) {\n      return new _(u).log1p();\n    }, M.prototype.log10 = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.log10(this.get(u, v)));\n      return this;\n    }, M.log10 = function(u) {\n      return new _(u).log10();\n    }, M.prototype.log2 = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.log2(this.get(u, v)));\n      return this;\n    }, M.log2 = function(u) {\n      return new _(u).log2();\n    }, M.prototype.round = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.round(this.get(u, v)));\n      return this;\n    }, M.round = function(u) {\n      return new _(u).round();\n    }, M.prototype.sign = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.sign(this.get(u, v)));\n      return this;\n    }, M.sign = function(u) {\n      return new _(u).sign();\n    }, M.prototype.sin = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.sin(this.get(u, v)));\n      return this;\n    }, M.sin = function(u) {\n      return new _(u).sin();\n    }, M.prototype.sinh = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.sinh(this.get(u, v)));\n      return this;\n    }, M.sinh = function(u) {\n      return new _(u).sinh();\n    }, M.prototype.sqrt = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.sqrt(this.get(u, v)));\n      return this;\n    }, M.sqrt = function(u) {\n      return new _(u).sqrt();\n    }, M.prototype.tan = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.tan(this.get(u, v)));\n      return this;\n    }, M.tan = function(u) {\n      return new _(u).tan();\n    }, M.prototype.tanh = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.tanh(this.get(u, v)));\n      return this;\n    }, M.tanh = function(u) {\n      return new _(u).tanh();\n    }, M.prototype.trunc = function() {\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.set(u, v, Math.trunc(this.get(u, v)));\n      return this;\n    }, M.trunc = function(u) {\n      return new _(u).trunc();\n    }, M.pow = function(u, v) {\n      return new _(u).pow(v);\n    }, M.prototype.pow = function(u) {\n      return typeof u == \"number\" ? this.powS(u) : this.powM(u);\n    }, M.prototype.powS = function(u) {\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) ** u);\n      return this;\n    }, M.prototype.powM = function(u) {\n      if (u = _.checkMatrix(u), this.rows !== u.rows || this.columns !== u.columns)\n        throw new RangeError(\"Matrices dimensions must be equal\");\n      for (let v = 0; v < this.rows; v++)\n        for (let S = 0; S < this.columns; S++)\n          this.set(v, S, this.get(v, S) ** u.get(v, S));\n      return this;\n    };\n  }\n  function f(M, _, d) {\n    let u = d ? M.rows : M.rows - 1;\n    if (_ < 0 || _ > u)\n      throw new RangeError(\"Row index out of range\");\n  }\n  function b(M, _, d) {\n    let u = d ? M.columns : M.columns - 1;\n    if (_ < 0 || _ > u)\n      throw new RangeError(\"Column index out of range\");\n  }\n  function w(M, _) {\n    if (_.to1DArray && (_ = _.to1DArray()), _.length !== M.columns)\n      throw new RangeError(\n        \"vector size must be the same as the number of columns\"\n      );\n    return _;\n  }\n  function g(M, _) {\n    if (_.to1DArray && (_ = _.to1DArray()), _.length !== M.rows)\n      throw new RangeError(\"vector size must be the same as the number of rows\");\n    return _;\n  }\n  function E(M, _) {\n    if (!e.isAnyArray(_))\n      throw new TypeError(\"row indices must be an array\");\n    for (let d = 0; d < _.length; d++)\n      if (_[d] < 0 || _[d] >= M.rows)\n        throw new RangeError(\"row indices are out of range\");\n  }\n  function k(M, _) {\n    if (!e.isAnyArray(_))\n      throw new TypeError(\"column indices must be an array\");\n    for (let d = 0; d < _.length; d++)\n      if (_[d] < 0 || _[d] >= M.columns)\n        throw new RangeError(\"column indices are out of range\");\n  }\n  function A(M, _, d, u, v) {\n    if (arguments.length !== 5)\n      throw new RangeError(\"expected 4 arguments\");\n    if (C(\"startRow\", _), C(\"endRow\", d), C(\"startColumn\", u), C(\"endColumn\", v), _ > d || u > v || _ < 0 || _ >= M.rows || d < 0 || d >= M.rows || u < 0 || u >= M.columns || v < 0 || v >= M.columns)\n      throw new RangeError(\"Submatrix indices are out of range\");\n  }\n  function T(M, _ = 0) {\n    let d = [];\n    for (let u = 0; u < M; u++)\n      d.push(_);\n    return d;\n  }\n  function C(M, _) {\n    if (typeof _ != \"number\")\n      throw new TypeError(`${M} must be a number`);\n  }\n  function D(M) {\n    if (M.isEmpty())\n      throw new Error(\"Empty matrix has no elements to index\");\n  }\n  function $(M) {\n    let _ = T(M.rows);\n    for (let d = 0; d < M.rows; ++d)\n      for (let u = 0; u < M.columns; ++u)\n        _[d] += M.get(d, u);\n    return _;\n  }\n  function P(M) {\n    let _ = T(M.columns);\n    for (let d = 0; d < M.rows; ++d)\n      for (let u = 0; u < M.columns; ++u)\n        _[u] += M.get(d, u);\n    return _;\n  }\n  function z(M) {\n    let _ = 0;\n    for (let d = 0; d < M.rows; d++)\n      for (let u = 0; u < M.columns; u++)\n        _ += M.get(d, u);\n    return _;\n  }\n  function B(M) {\n    let _ = T(M.rows, 1);\n    for (let d = 0; d < M.rows; ++d)\n      for (let u = 0; u < M.columns; ++u)\n        _[d] *= M.get(d, u);\n    return _;\n  }\n  function F(M) {\n    let _ = T(M.columns, 1);\n    for (let d = 0; d < M.rows; ++d)\n      for (let u = 0; u < M.columns; ++u)\n        _[u] *= M.get(d, u);\n    return _;\n  }\n  function O(M) {\n    let _ = 1;\n    for (let d = 0; d < M.rows; d++)\n      for (let u = 0; u < M.columns; u++)\n        _ *= M.get(d, u);\n    return _;\n  }\n  function N(M, _, d) {\n    const u = M.rows, v = M.columns, S = [];\n    for (let L = 0; L < u; L++) {\n      let q = 0, X = 0, j = 0;\n      for (let ae = 0; ae < v; ae++)\n        j = M.get(L, ae) - d[L], q += j, X += j * j;\n      _ ? S.push((X - q * q / v) / (v - 1)) : S.push((X - q * q / v) / v);\n    }\n    return S;\n  }\n  function G(M, _, d) {\n    const u = M.rows, v = M.columns, S = [];\n    for (let L = 0; L < v; L++) {\n      let q = 0, X = 0, j = 0;\n      for (let ae = 0; ae < u; ae++)\n        j = M.get(ae, L) - d[L], q += j, X += j * j;\n      _ ? S.push((X - q * q / u) / (u - 1)) : S.push((X - q * q / u) / u);\n    }\n    return S;\n  }\n  function V(M, _, d) {\n    const u = M.rows, v = M.columns, S = u * v;\n    let L = 0, q = 0, X = 0;\n    for (let j = 0; j < u; j++)\n      for (let ae = 0; ae < v; ae++)\n        X = M.get(j, ae) - d, L += X, q += X * X;\n    return _ ? (q - L * L / S) / (S - 1) : (q - L * L / S) / S;\n  }\n  function J(M, _) {\n    for (let d = 0; d < M.rows; d++)\n      for (let u = 0; u < M.columns; u++)\n        M.set(d, u, M.get(d, u) - _[d]);\n  }\n  function Q(M, _) {\n    for (let d = 0; d < M.rows; d++)\n      for (let u = 0; u < M.columns; u++)\n        M.set(d, u, M.get(d, u) - _[u]);\n  }\n  function W(M, _) {\n    for (let d = 0; d < M.rows; d++)\n      for (let u = 0; u < M.columns; u++)\n        M.set(d, u, M.get(d, u) - _);\n  }\n  function ne(M) {\n    const _ = [];\n    for (let d = 0; d < M.rows; d++) {\n      let u = 0;\n      for (let v = 0; v < M.columns; v++)\n        u += M.get(d, v) ** 2 / (M.columns - 1);\n      _.push(Math.sqrt(u));\n    }\n    return _;\n  }\n  function pe(M, _) {\n    for (let d = 0; d < M.rows; d++)\n      for (let u = 0; u < M.columns; u++)\n        M.set(d, u, M.get(d, u) / _[d]);\n  }\n  function be(M) {\n    const _ = [];\n    for (let d = 0; d < M.columns; d++) {\n      let u = 0;\n      for (let v = 0; v < M.rows; v++)\n        u += M.get(v, d) ** 2 / (M.rows - 1);\n      _.push(Math.sqrt(u));\n    }\n    return _;\n  }\n  function ve(M, _) {\n    for (let d = 0; d < M.rows; d++)\n      for (let u = 0; u < M.columns; u++)\n        M.set(d, u, M.get(d, u) / _[u]);\n  }\n  function Ee(M) {\n    const _ = M.size - 1;\n    let d = 0;\n    for (let u = 0; u < M.columns; u++)\n      for (let v = 0; v < M.rows; v++)\n        d += M.get(v, u) ** 2 / _;\n    return Math.sqrt(d);\n  }\n  function Ae(M, _) {\n    for (let d = 0; d < M.rows; d++)\n      for (let u = 0; u < M.columns; u++)\n        M.set(d, u, M.get(d, u) / _);\n  }\n  class _e {\n    static from1DArray(_, d, u) {\n      if (_ * d !== u.length)\n        throw new RangeError(\"data length does not match given dimensions\");\n      let S = new re(_, d);\n      for (let L = 0; L < _; L++)\n        for (let q = 0; q < d; q++)\n          S.set(L, q, u[L * d + q]);\n      return S;\n    }\n    static rowVector(_) {\n      let d = new re(1, _.length);\n      for (let u = 0; u < _.length; u++)\n        d.set(0, u, _[u]);\n      return d;\n    }\n    static columnVector(_) {\n      let d = new re(_.length, 1);\n      for (let u = 0; u < _.length; u++)\n        d.set(u, 0, _[u]);\n      return d;\n    }\n    static zeros(_, d) {\n      return new re(_, d);\n    }\n    static ones(_, d) {\n      return new re(_, d).fill(1);\n    }\n    static rand(_, d, u = {}) {\n      if (typeof u != \"object\")\n        throw new TypeError(\"options must be an object\");\n      const { random: v = Math.random } = u;\n      let S = new re(_, d);\n      for (let L = 0; L < _; L++)\n        for (let q = 0; q < d; q++)\n          S.set(L, q, v());\n      return S;\n    }\n    static randInt(_, d, u = {}) {\n      if (typeof u != \"object\")\n        throw new TypeError(\"options must be an object\");\n      const { min: v = 0, max: S = 1e3, random: L = Math.random } = u;\n      if (!Number.isInteger(v)) throw new TypeError(\"min must be an integer\");\n      if (!Number.isInteger(S)) throw new TypeError(\"max must be an integer\");\n      if (v >= S) throw new RangeError(\"min must be smaller than max\");\n      let q = S - v, X = new re(_, d);\n      for (let j = 0; j < _; j++)\n        for (let ae = 0; ae < d; ae++) {\n          let K = v + Math.round(L() * q);\n          X.set(j, ae, K);\n        }\n      return X;\n    }\n    static eye(_, d, u) {\n      d === void 0 && (d = _), u === void 0 && (u = 1);\n      let v = Math.min(_, d), S = this.zeros(_, d);\n      for (let L = 0; L < v; L++)\n        S.set(L, L, u);\n      return S;\n    }\n    static diag(_, d, u) {\n      let v = _.length;\n      d === void 0 && (d = v), u === void 0 && (u = d);\n      let S = Math.min(v, d, u), L = this.zeros(d, u);\n      for (let q = 0; q < S; q++)\n        L.set(q, q, _[q]);\n      return L;\n    }\n    static min(_, d) {\n      _ = this.checkMatrix(_), d = this.checkMatrix(d);\n      let u = _.rows, v = _.columns, S = new re(u, v);\n      for (let L = 0; L < u; L++)\n        for (let q = 0; q < v; q++)\n          S.set(L, q, Math.min(_.get(L, q), d.get(L, q)));\n      return S;\n    }\n    static max(_, d) {\n      _ = this.checkMatrix(_), d = this.checkMatrix(d);\n      let u = _.rows, v = _.columns, S = new this(u, v);\n      for (let L = 0; L < u; L++)\n        for (let q = 0; q < v; q++)\n          S.set(L, q, Math.max(_.get(L, q), d.get(L, q)));\n      return S;\n    }\n    static checkMatrix(_) {\n      return _e.isMatrix(_) ? _ : new re(_);\n    }\n    static isMatrix(_) {\n      return _ != null && _.klass === \"Matrix\";\n    }\n    get size() {\n      return this.rows * this.columns;\n    }\n    apply(_) {\n      if (typeof _ != \"function\")\n        throw new TypeError(\"callback must be a function\");\n      for (let d = 0; d < this.rows; d++)\n        for (let u = 0; u < this.columns; u++)\n          _.call(this, d, u);\n      return this;\n    }\n    to1DArray() {\n      let _ = [];\n      for (let d = 0; d < this.rows; d++)\n        for (let u = 0; u < this.columns; u++)\n          _.push(this.get(d, u));\n      return _;\n    }\n    to2DArray() {\n      let _ = [];\n      for (let d = 0; d < this.rows; d++) {\n        _.push([]);\n        for (let u = 0; u < this.columns; u++)\n          _[d].push(this.get(d, u));\n      }\n      return _;\n    }\n    toJSON() {\n      return this.to2DArray();\n    }\n    isRowVector() {\n      return this.rows === 1;\n    }\n    isColumnVector() {\n      return this.columns === 1;\n    }\n    isVector() {\n      return this.rows === 1 || this.columns === 1;\n    }\n    isSquare() {\n      return this.rows === this.columns;\n    }\n    isEmpty() {\n      return this.rows === 0 || this.columns === 0;\n    }\n    isSymmetric() {\n      if (this.isSquare()) {\n        for (let _ = 0; _ < this.rows; _++)\n          for (let d = 0; d <= _; d++)\n            if (this.get(_, d) !== this.get(d, _))\n              return !1;\n        return !0;\n      }\n      return !1;\n    }\n    isDistance() {\n      if (!this.isSymmetric()) return !1;\n      for (let _ = 0; _ < this.rows; _++)\n        if (this.get(_, _) !== 0) return !1;\n      return !0;\n    }\n    isEchelonForm() {\n      let _ = 0, d = 0, u = -1, v = !0, S = !1;\n      for (; _ < this.rows && v; ) {\n        for (d = 0, S = !1; d < this.columns && S === !1; )\n          this.get(_, d) === 0 ? d++ : this.get(_, d) === 1 && d > u ? (S = !0, u = d) : (v = !1, S = !0);\n        _++;\n      }\n      return v;\n    }\n    isReducedEchelonForm() {\n      let _ = 0, d = 0, u = -1, v = !0, S = !1;\n      for (; _ < this.rows && v; ) {\n        for (d = 0, S = !1; d < this.columns && S === !1; )\n          this.get(_, d) === 0 ? d++ : this.get(_, d) === 1 && d > u ? (S = !0, u = d) : (v = !1, S = !0);\n        for (let L = d + 1; L < this.rows; L++)\n          this.get(_, L) !== 0 && (v = !1);\n        _++;\n      }\n      return v;\n    }\n    echelonForm() {\n      let _ = this.clone(), d = 0, u = 0;\n      for (; d < _.rows && u < _.columns; ) {\n        let v = d;\n        for (let S = d; S < _.rows; S++)\n          _.get(S, u) > _.get(v, u) && (v = S);\n        if (_.get(v, u) === 0)\n          u++;\n        else {\n          _.swapRows(d, v);\n          let S = _.get(d, u);\n          for (let L = u; L < _.columns; L++)\n            _.set(d, L, _.get(d, L) / S);\n          for (let L = d + 1; L < _.rows; L++) {\n            let q = _.get(L, u) / _.get(d, u);\n            _.set(L, u, 0);\n            for (let X = u + 1; X < _.columns; X++)\n              _.set(L, X, _.get(L, X) - _.get(d, X) * q);\n          }\n          d++, u++;\n        }\n      }\n      return _;\n    }\n    reducedEchelonForm() {\n      let _ = this.echelonForm(), d = _.columns, u = _.rows, v = u - 1;\n      for (; v >= 0; )\n        if (_.maxRow(v) === 0)\n          v--;\n        else {\n          let S = 0, L = !1;\n          for (; S < u && L === !1; )\n            _.get(v, S) === 1 ? L = !0 : S++;\n          for (let q = 0; q < v; q++) {\n            let X = _.get(q, S);\n            for (let j = S; j < d; j++) {\n              let ae = _.get(q, j) - X * _.get(v, j);\n              _.set(q, j, ae);\n            }\n          }\n          v--;\n        }\n      return _;\n    }\n    set() {\n      throw new Error(\"set method is unimplemented\");\n    }\n    get() {\n      throw new Error(\"get method is unimplemented\");\n    }\n    repeat(_ = {}) {\n      if (typeof _ != \"object\")\n        throw new TypeError(\"options must be an object\");\n      const { rows: d = 1, columns: u = 1 } = _;\n      if (!Number.isInteger(d) || d <= 0)\n        throw new TypeError(\"rows must be a positive integer\");\n      if (!Number.isInteger(u) || u <= 0)\n        throw new TypeError(\"columns must be a positive integer\");\n      let v = new re(this.rows * d, this.columns * u);\n      for (let S = 0; S < d; S++)\n        for (let L = 0; L < u; L++)\n          v.setSubMatrix(this, this.rows * S, this.columns * L);\n      return v;\n    }\n    fill(_) {\n      for (let d = 0; d < this.rows; d++)\n        for (let u = 0; u < this.columns; u++)\n          this.set(d, u, _);\n      return this;\n    }\n    neg() {\n      return this.mulS(-1);\n    }\n    getRow(_) {\n      f(this, _);\n      let d = [];\n      for (let u = 0; u < this.columns; u++)\n        d.push(this.get(_, u));\n      return d;\n    }\n    getRowVector(_) {\n      return re.rowVector(this.getRow(_));\n    }\n    setRow(_, d) {\n      f(this, _), d = w(this, d);\n      for (let u = 0; u < this.columns; u++)\n        this.set(_, u, d[u]);\n      return this;\n    }\n    swapRows(_, d) {\n      f(this, _), f(this, d);\n      for (let u = 0; u < this.columns; u++) {\n        let v = this.get(_, u);\n        this.set(_, u, this.get(d, u)), this.set(d, u, v);\n      }\n      return this;\n    }\n    getColumn(_) {\n      b(this, _);\n      let d = [];\n      for (let u = 0; u < this.rows; u++)\n        d.push(this.get(u, _));\n      return d;\n    }\n    getColumnVector(_) {\n      return re.columnVector(this.getColumn(_));\n    }\n    setColumn(_, d) {\n      b(this, _), d = g(this, d);\n      for (let u = 0; u < this.rows; u++)\n        this.set(u, _, d[u]);\n      return this;\n    }\n    swapColumns(_, d) {\n      b(this, _), b(this, d);\n      for (let u = 0; u < this.rows; u++) {\n        let v = this.get(u, _);\n        this.set(u, _, this.get(u, d)), this.set(u, d, v);\n      }\n      return this;\n    }\n    addRowVector(_) {\n      _ = w(this, _);\n      for (let d = 0; d < this.rows; d++)\n        for (let u = 0; u < this.columns; u++)\n          this.set(d, u, this.get(d, u) + _[u]);\n      return this;\n    }\n    subRowVector(_) {\n      _ = w(this, _);\n      for (let d = 0; d < this.rows; d++)\n        for (let u = 0; u < this.columns; u++)\n          this.set(d, u, this.get(d, u) - _[u]);\n      return this;\n    }\n    mulRowVector(_) {\n      _ = w(this, _);\n      for (let d = 0; d < this.rows; d++)\n        for (let u = 0; u < this.columns; u++)\n          this.set(d, u, this.get(d, u) * _[u]);\n      return this;\n    }\n    divRowVector(_) {\n      _ = w(this, _);\n      for (let d = 0; d < this.rows; d++)\n        for (let u = 0; u < this.columns; u++)\n          this.set(d, u, this.get(d, u) / _[u]);\n      return this;\n    }\n    addColumnVector(_) {\n      _ = g(this, _);\n      for (let d = 0; d < this.rows; d++)\n        for (let u = 0; u < this.columns; u++)\n          this.set(d, u, this.get(d, u) + _[d]);\n      return this;\n    }\n    subColumnVector(_) {\n      _ = g(this, _);\n      for (let d = 0; d < this.rows; d++)\n        for (let u = 0; u < this.columns; u++)\n          this.set(d, u, this.get(d, u) - _[d]);\n      return this;\n    }\n    mulColumnVector(_) {\n      _ = g(this, _);\n      for (let d = 0; d < this.rows; d++)\n        for (let u = 0; u < this.columns; u++)\n          this.set(d, u, this.get(d, u) * _[d]);\n      return this;\n    }\n    divColumnVector(_) {\n      _ = g(this, _);\n      for (let d = 0; d < this.rows; d++)\n        for (let u = 0; u < this.columns; u++)\n          this.set(d, u, this.get(d, u) / _[d]);\n      return this;\n    }\n    mulRow(_, d) {\n      f(this, _);\n      for (let u = 0; u < this.columns; u++)\n        this.set(_, u, this.get(_, u) * d);\n      return this;\n    }\n    mulColumn(_, d) {\n      b(this, _);\n      for (let u = 0; u < this.rows; u++)\n        this.set(u, _, this.get(u, _) * d);\n      return this;\n    }\n    max(_) {\n      if (this.isEmpty())\n        return NaN;\n      switch (_) {\n        case \"row\": {\n          const d = new Array(this.rows).fill(Number.NEGATIVE_INFINITY);\n          for (let u = 0; u < this.rows; u++)\n            for (let v = 0; v < this.columns; v++)\n              this.get(u, v) > d[u] && (d[u] = this.get(u, v));\n          return d;\n        }\n        case \"column\": {\n          const d = new Array(this.columns).fill(Number.NEGATIVE_INFINITY);\n          for (let u = 0; u < this.rows; u++)\n            for (let v = 0; v < this.columns; v++)\n              this.get(u, v) > d[v] && (d[v] = this.get(u, v));\n          return d;\n        }\n        case void 0: {\n          let d = this.get(0, 0);\n          for (let u = 0; u < this.rows; u++)\n            for (let v = 0; v < this.columns; v++)\n              this.get(u, v) > d && (d = this.get(u, v));\n          return d;\n        }\n        default:\n          throw new Error(`invalid option: ${_}`);\n      }\n    }\n    maxIndex() {\n      D(this);\n      let _ = this.get(0, 0), d = [0, 0];\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.get(u, v) > _ && (_ = this.get(u, v), d[0] = u, d[1] = v);\n      return d;\n    }\n    min(_) {\n      if (this.isEmpty())\n        return NaN;\n      switch (_) {\n        case \"row\": {\n          const d = new Array(this.rows).fill(Number.POSITIVE_INFINITY);\n          for (let u = 0; u < this.rows; u++)\n            for (let v = 0; v < this.columns; v++)\n              this.get(u, v) < d[u] && (d[u] = this.get(u, v));\n          return d;\n        }\n        case \"column\": {\n          const d = new Array(this.columns).fill(Number.POSITIVE_INFINITY);\n          for (let u = 0; u < this.rows; u++)\n            for (let v = 0; v < this.columns; v++)\n              this.get(u, v) < d[v] && (d[v] = this.get(u, v));\n          return d;\n        }\n        case void 0: {\n          let d = this.get(0, 0);\n          for (let u = 0; u < this.rows; u++)\n            for (let v = 0; v < this.columns; v++)\n              this.get(u, v) < d && (d = this.get(u, v));\n          return d;\n        }\n        default:\n          throw new Error(`invalid option: ${_}`);\n      }\n    }\n    minIndex() {\n      D(this);\n      let _ = this.get(0, 0), d = [0, 0];\n      for (let u = 0; u < this.rows; u++)\n        for (let v = 0; v < this.columns; v++)\n          this.get(u, v) < _ && (_ = this.get(u, v), d[0] = u, d[1] = v);\n      return d;\n    }\n    maxRow(_) {\n      if (f(this, _), this.isEmpty())\n        return NaN;\n      let d = this.get(_, 0);\n      for (let u = 1; u < this.columns; u++)\n        this.get(_, u) > d && (d = this.get(_, u));\n      return d;\n    }\n    maxRowIndex(_) {\n      f(this, _), D(this);\n      let d = this.get(_, 0), u = [_, 0];\n      for (let v = 1; v < this.columns; v++)\n        this.get(_, v) > d && (d = this.get(_, v), u[1] = v);\n      return u;\n    }\n    minRow(_) {\n      if (f(this, _), this.isEmpty())\n        return NaN;\n      let d = this.get(_, 0);\n      for (let u = 1; u < this.columns; u++)\n        this.get(_, u) < d && (d = this.get(_, u));\n      return d;\n    }\n    minRowIndex(_) {\n      f(this, _), D(this);\n      let d = this.get(_, 0), u = [_, 0];\n      for (let v = 1; v < this.columns; v++)\n        this.get(_, v) < d && (d = this.get(_, v), u[1] = v);\n      return u;\n    }\n    maxColumn(_) {\n      if (b(this, _), this.isEmpty())\n        return NaN;\n      let d = this.get(0, _);\n      for (let u = 1; u < this.rows; u++)\n        this.get(u, _) > d && (d = this.get(u, _));\n      return d;\n    }\n    maxColumnIndex(_) {\n      b(this, _), D(this);\n      let d = this.get(0, _), u = [0, _];\n      for (let v = 1; v < this.rows; v++)\n        this.get(v, _) > d && (d = this.get(v, _), u[0] = v);\n      return u;\n    }\n    minColumn(_) {\n      if (b(this, _), this.isEmpty())\n        return NaN;\n      let d = this.get(0, _);\n      for (let u = 1; u < this.rows; u++)\n        this.get(u, _) < d && (d = this.get(u, _));\n      return d;\n    }\n    minColumnIndex(_) {\n      b(this, _), D(this);\n      let d = this.get(0, _), u = [0, _];\n      for (let v = 1; v < this.rows; v++)\n        this.get(v, _) < d && (d = this.get(v, _), u[0] = v);\n      return u;\n    }\n    diag() {\n      let _ = Math.min(this.rows, this.columns), d = [];\n      for (let u = 0; u < _; u++)\n        d.push(this.get(u, u));\n      return d;\n    }\n    norm(_ = \"frobenius\") {\n      switch (_) {\n        case \"max\":\n          return this.max();\n        case \"frobenius\":\n          return Math.sqrt(this.dot(this));\n        default:\n          throw new RangeError(`unknown norm type: ${_}`);\n      }\n    }\n    cumulativeSum() {\n      let _ = 0;\n      for (let d = 0; d < this.rows; d++)\n        for (let u = 0; u < this.columns; u++)\n          _ += this.get(d, u), this.set(d, u, _);\n      return this;\n    }\n    dot(_) {\n      _e.isMatrix(_) && (_ = _.to1DArray());\n      let d = this.to1DArray();\n      if (d.length !== _.length)\n        throw new RangeError(\"vectors do not have the same size\");\n      let u = 0;\n      for (let v = 0; v < d.length; v++)\n        u += d[v] * _[v];\n      return u;\n    }\n    mmul(_) {\n      _ = re.checkMatrix(_);\n      let d = this.rows, u = this.columns, v = _.columns, S = new re(d, v), L = new Float64Array(u);\n      for (let q = 0; q < v; q++) {\n        for (let X = 0; X < u; X++)\n          L[X] = _.get(X, q);\n        for (let X = 0; X < d; X++) {\n          let j = 0;\n          for (let ae = 0; ae < u; ae++)\n            j += this.get(X, ae) * L[ae];\n          S.set(X, q, j);\n        }\n      }\n      return S;\n    }\n    mpow(_) {\n      if (!this.isSquare())\n        throw new RangeError(\"Matrix must be square\");\n      if (!Number.isInteger(_) || _ < 0)\n        throw new RangeError(\"Exponent must be a non-negative integer\");\n      let d = re.eye(this.rows), u = this;\n      for (let v = _; v >= 1; v /= 2)\n        (v & 1) !== 0 && (d = d.mmul(u)), u = u.mmul(u);\n      return d;\n    }\n    strassen2x2(_) {\n      _ = re.checkMatrix(_);\n      let d = new re(2, 2);\n      const u = this.get(0, 0), v = _.get(0, 0), S = this.get(0, 1), L = _.get(0, 1), q = this.get(1, 0), X = _.get(1, 0), j = this.get(1, 1), ae = _.get(1, 1), K = (u + j) * (v + ae), ce = (q + j) * v, we = u * (L - ae), le = j * (X - v), ge = (u + S) * ae, Ue = (q - u) * (v + L), ie = (S - j) * (X + ae), Ce = K + le - ge + ie, Xe = we + ge, ht = ce + le, ft = K - ce + we + Ue;\n      return d.set(0, 0, Ce), d.set(0, 1, Xe), d.set(1, 0, ht), d.set(1, 1, ft), d;\n    }\n    strassen3x3(_) {\n      _ = re.checkMatrix(_);\n      let d = new re(3, 3);\n      const u = this.get(0, 0), v = this.get(0, 1), S = this.get(0, 2), L = this.get(1, 0), q = this.get(1, 1), X = this.get(1, 2), j = this.get(2, 0), ae = this.get(2, 1), K = this.get(2, 2), ce = _.get(0, 0), we = _.get(0, 1), le = _.get(0, 2), ge = _.get(1, 0), Ue = _.get(1, 1), ie = _.get(1, 2), Ce = _.get(2, 0), Xe = _.get(2, 1), ht = _.get(2, 2), ft = (u + v + S - L - q - ae - K) * Ue, dt = (u - L) * (-we + Ue), rt = q * (-ce + we + ge - Ue - ie - Ce + ht), at = (-u + L + q) * (ce - we + Ue), gt = (L + q) * (-ce + we), se = u * ce, Ie = (-u + j + ae) * (ce - le + ie), Ke = (-u + j) * (le - ie), Pe = (j + ae) * (-ce + le), mt = (u + v + S - q - X - j - ae) * ie, ct = ae * (-ce + le + ge - Ue - ie - Ce + Xe), pt = (-S + ae + K) * (Ue + Ce - Xe), _t = (S - K) * (Ue - Xe), bt = S * Ce, Mt = (ae + K) * (-Ce + Xe), xt = (-S + q + X) * (ie + Ce - ht), kt = (S - X) * (ie - ht), At = (q + X) * (-Ce + ht), ut = v * ge, vt = X * Xe, yt = L * le, Et = j * we, wt = K * ht, Ft = se + bt + ut, Nt = ft + at + gt + se + pt + bt + Mt, Ut = se + Ie + Pe + mt + bt + xt + At, Ot = dt + rt + at + se + bt + xt + kt, Lt = dt + at + gt + se + vt, zt = bt + xt + kt + At + yt, qt = se + Ie + Ke + ct + pt + _t + bt, Gt = pt + _t + bt + Mt + Et, Ht = se + Ie + Ke + Pe + wt;\n      return d.set(0, 0, Ft), d.set(0, 1, Nt), d.set(0, 2, Ut), d.set(1, 0, Ot), d.set(1, 1, Lt), d.set(1, 2, zt), d.set(2, 0, qt), d.set(2, 1, Gt), d.set(2, 2, Ht), d;\n    }\n    mmulStrassen(_) {\n      _ = re.checkMatrix(_);\n      let d = this.clone(), u = d.rows, v = d.columns, S = _.rows, L = _.columns;\n      v !== S && console.warn(\n        `Multiplying ${u} x ${v} and ${S} x ${L} matrix: dimensions do not match.`\n      );\n      function q(K, ce, we) {\n        let le = K.rows, ge = K.columns;\n        if (le === ce && ge === we)\n          return K;\n        {\n          let Ue = _e.zeros(ce, we);\n          return Ue = Ue.setSubMatrix(K, 0, 0), Ue;\n        }\n      }\n      let X = Math.max(u, S), j = Math.max(v, L);\n      d = q(d, X, j), _ = q(_, X, j);\n      function ae(K, ce, we, le) {\n        if (we <= 512 || le <= 512)\n          return K.mmul(ce);\n        we % 2 === 1 && le % 2 === 1 ? (K = q(K, we + 1, le + 1), ce = q(ce, we + 1, le + 1)) : we % 2 === 1 ? (K = q(K, we + 1, le), ce = q(ce, we + 1, le)) : le % 2 === 1 && (K = q(K, we, le + 1), ce = q(ce, we, le + 1));\n        let ge = parseInt(K.rows / 2, 10), Ue = parseInt(K.columns / 2, 10), ie = K.subMatrix(0, ge - 1, 0, Ue - 1), Ce = ce.subMatrix(0, ge - 1, 0, Ue - 1), Xe = K.subMatrix(0, ge - 1, Ue, K.columns - 1), ht = ce.subMatrix(0, ge - 1, Ue, ce.columns - 1), ft = K.subMatrix(ge, K.rows - 1, 0, Ue - 1), dt = ce.subMatrix(ge, ce.rows - 1, 0, Ue - 1), rt = K.subMatrix(ge, K.rows - 1, Ue, K.columns - 1), at = ce.subMatrix(ge, ce.rows - 1, Ue, ce.columns - 1), gt = ae(\n          _e.add(ie, rt),\n          _e.add(Ce, at),\n          ge,\n          Ue\n        ), se = ae(_e.add(ft, rt), Ce, ge, Ue), Ie = ae(ie, _e.sub(ht, at), ge, Ue), Ke = ae(rt, _e.sub(dt, Ce), ge, Ue), Pe = ae(_e.add(ie, Xe), at, ge, Ue), mt = ae(\n          _e.sub(ft, ie),\n          _e.add(Ce, ht),\n          ge,\n          Ue\n        ), ct = ae(\n          _e.sub(Xe, rt),\n          _e.add(dt, at),\n          ge,\n          Ue\n        ), pt = _e.add(gt, Ke);\n        pt.sub(Pe), pt.add(ct);\n        let _t = _e.add(Ie, Pe), bt = _e.add(se, Ke), Mt = _e.sub(gt, se);\n        Mt.add(Ie), Mt.add(mt);\n        let xt = _e.zeros(2 * pt.rows, 2 * pt.columns);\n        return xt = xt.setSubMatrix(pt, 0, 0), xt = xt.setSubMatrix(_t, pt.rows, 0), xt = xt.setSubMatrix(bt, 0, pt.columns), xt = xt.setSubMatrix(Mt, pt.rows, pt.columns), xt.subMatrix(0, we - 1, 0, le - 1);\n      }\n      return ae(d, _, X, j);\n    }\n    scaleRows(_ = {}) {\n      if (typeof _ != \"object\")\n        throw new TypeError(\"options must be an object\");\n      const { min: d = 0, max: u = 1 } = _;\n      if (!Number.isFinite(d)) throw new TypeError(\"min must be a number\");\n      if (!Number.isFinite(u)) throw new TypeError(\"max must be a number\");\n      if (d >= u) throw new RangeError(\"min must be smaller than max\");\n      let v = new re(this.rows, this.columns);\n      for (let S = 0; S < this.rows; S++) {\n        const L = this.getRow(S);\n        L.length > 0 && i(L, { min: d, max: u, output: L }), v.setRow(S, L);\n      }\n      return v;\n    }\n    scaleColumns(_ = {}) {\n      if (typeof _ != \"object\")\n        throw new TypeError(\"options must be an object\");\n      const { min: d = 0, max: u = 1 } = _;\n      if (!Number.isFinite(d)) throw new TypeError(\"min must be a number\");\n      if (!Number.isFinite(u)) throw new TypeError(\"max must be a number\");\n      if (d >= u) throw new RangeError(\"min must be smaller than max\");\n      let v = new re(this.rows, this.columns);\n      for (let S = 0; S < this.columns; S++) {\n        const L = this.getColumn(S);\n        L.length && i(L, {\n          min: d,\n          max: u,\n          output: L\n        }), v.setColumn(S, L);\n      }\n      return v;\n    }\n    flipRows() {\n      const _ = Math.ceil(this.columns / 2);\n      for (let d = 0; d < this.rows; d++)\n        for (let u = 0; u < _; u++) {\n          let v = this.get(d, u), S = this.get(d, this.columns - 1 - u);\n          this.set(d, u, S), this.set(d, this.columns - 1 - u, v);\n        }\n      return this;\n    }\n    flipColumns() {\n      const _ = Math.ceil(this.rows / 2);\n      for (let d = 0; d < this.columns; d++)\n        for (let u = 0; u < _; u++) {\n          let v = this.get(u, d), S = this.get(this.rows - 1 - u, d);\n          this.set(u, d, S), this.set(this.rows - 1 - u, d, v);\n        }\n      return this;\n    }\n    kroneckerProduct(_) {\n      _ = re.checkMatrix(_);\n      let d = this.rows, u = this.columns, v = _.rows, S = _.columns, L = new re(d * v, u * S);\n      for (let q = 0; q < d; q++)\n        for (let X = 0; X < u; X++)\n          for (let j = 0; j < v; j++)\n            for (let ae = 0; ae < S; ae++)\n              L.set(v * q + j, S * X + ae, this.get(q, X) * _.get(j, ae));\n      return L;\n    }\n    kroneckerSum(_) {\n      if (_ = re.checkMatrix(_), !this.isSquare() || !_.isSquare())\n        throw new Error(\"Kronecker Sum needs two Square Matrices\");\n      let d = this.rows, u = _.rows, v = this.kroneckerProduct(re.eye(u, u)), S = re.eye(d, d).kroneckerProduct(_);\n      return v.add(S);\n    }\n    transpose() {\n      let _ = new re(this.columns, this.rows);\n      for (let d = 0; d < this.rows; d++)\n        for (let u = 0; u < this.columns; u++)\n          _.set(u, d, this.get(d, u));\n      return _;\n    }\n    sortRows(_ = Be) {\n      for (let d = 0; d < this.rows; d++)\n        this.setRow(d, this.getRow(d).sort(_));\n      return this;\n    }\n    sortColumns(_ = Be) {\n      for (let d = 0; d < this.columns; d++)\n        this.setColumn(d, this.getColumn(d).sort(_));\n      return this;\n    }\n    subMatrix(_, d, u, v) {\n      A(this, _, d, u, v);\n      let S = new re(\n        d - _ + 1,\n        v - u + 1\n      );\n      for (let L = _; L <= d; L++)\n        for (let q = u; q <= v; q++)\n          S.set(L - _, q - u, this.get(L, q));\n      return S;\n    }\n    subMatrixRow(_, d, u) {\n      if (d === void 0 && (d = 0), u === void 0 && (u = this.columns - 1), d > u || d < 0 || d >= this.columns || u < 0 || u >= this.columns)\n        throw new RangeError(\"Argument out of range\");\n      let v = new re(_.length, u - d + 1);\n      for (let S = 0; S < _.length; S++)\n        for (let L = d; L <= u; L++) {\n          if (_[S] < 0 || _[S] >= this.rows)\n            throw new RangeError(`Row index out of range: ${_[S]}`);\n          v.set(S, L - d, this.get(_[S], L));\n        }\n      return v;\n    }\n    subMatrixColumn(_, d, u) {\n      if (d === void 0 && (d = 0), u === void 0 && (u = this.rows - 1), d > u || d < 0 || d >= this.rows || u < 0 || u >= this.rows)\n        throw new RangeError(\"Argument out of range\");\n      let v = new re(u - d + 1, _.length);\n      for (let S = 0; S < _.length; S++)\n        for (let L = d; L <= u; L++) {\n          if (_[S] < 0 || _[S] >= this.columns)\n            throw new RangeError(`Column index out of range: ${_[S]}`);\n          v.set(L - d, S, this.get(L, _[S]));\n        }\n      return v;\n    }\n    setSubMatrix(_, d, u) {\n      if (_ = re.checkMatrix(_), _.isEmpty())\n        return this;\n      let v = d + _.rows - 1, S = u + _.columns - 1;\n      A(this, d, v, u, S);\n      for (let L = 0; L < _.rows; L++)\n        for (let q = 0; q < _.columns; q++)\n          this.set(d + L, u + q, _.get(L, q));\n      return this;\n    }\n    selection(_, d) {\n      E(this, _), k(this, d);\n      let u = new re(_.length, d.length);\n      for (let v = 0; v < _.length; v++) {\n        let S = _[v];\n        for (let L = 0; L < d.length; L++) {\n          let q = d[L];\n          u.set(v, L, this.get(S, q));\n        }\n      }\n      return u;\n    }\n    trace() {\n      let _ = Math.min(this.rows, this.columns), d = 0;\n      for (let u = 0; u < _; u++)\n        d += this.get(u, u);\n      return d;\n    }\n    clone() {\n      return this.constructor.copy(this, new re(this.rows, this.columns));\n    }\n    /**\n     * @template {AbstractMatrix} M\n     * @param {AbstractMatrix} from\n     * @param {M} to\n     * @return {M}\n     */\n    static copy(_, d) {\n      for (const [u, v, S] of _.entries())\n        d.set(u, v, S);\n      return d;\n    }\n    sum(_) {\n      switch (_) {\n        case \"row\":\n          return $(this);\n        case \"column\":\n          return P(this);\n        case void 0:\n          return z(this);\n        default:\n          throw new Error(`invalid option: ${_}`);\n      }\n    }\n    product(_) {\n      switch (_) {\n        case \"row\":\n          return B(this);\n        case \"column\":\n          return F(this);\n        case void 0:\n          return O(this);\n        default:\n          throw new Error(`invalid option: ${_}`);\n      }\n    }\n    mean(_) {\n      const d = this.sum(_);\n      switch (_) {\n        case \"row\": {\n          for (let u = 0; u < this.rows; u++)\n            d[u] /= this.columns;\n          return d;\n        }\n        case \"column\": {\n          for (let u = 0; u < this.columns; u++)\n            d[u] /= this.rows;\n          return d;\n        }\n        case void 0:\n          return d / this.size;\n        default:\n          throw new Error(`invalid option: ${_}`);\n      }\n    }\n    variance(_, d = {}) {\n      if (typeof _ == \"object\" && (d = _, _ = void 0), typeof d != \"object\")\n        throw new TypeError(\"options must be an object\");\n      const { unbiased: u = !0, mean: v = this.mean(_) } = d;\n      if (typeof u != \"boolean\")\n        throw new TypeError(\"unbiased must be a boolean\");\n      switch (_) {\n        case \"row\": {\n          if (!e.isAnyArray(v))\n            throw new TypeError(\"mean must be an array\");\n          return N(this, u, v);\n        }\n        case \"column\": {\n          if (!e.isAnyArray(v))\n            throw new TypeError(\"mean must be an array\");\n          return G(this, u, v);\n        }\n        case void 0: {\n          if (typeof v != \"number\")\n            throw new TypeError(\"mean must be a number\");\n          return V(this, u, v);\n        }\n        default:\n          throw new Error(`invalid option: ${_}`);\n      }\n    }\n    standardDeviation(_, d) {\n      typeof _ == \"object\" && (d = _, _ = void 0);\n      const u = this.variance(_, d);\n      if (_ === void 0)\n        return Math.sqrt(u);\n      for (let v = 0; v < u.length; v++)\n        u[v] = Math.sqrt(u[v]);\n      return u;\n    }\n    center(_, d = {}) {\n      if (typeof _ == \"object\" && (d = _, _ = void 0), typeof d != \"object\")\n        throw new TypeError(\"options must be an object\");\n      const { center: u = this.mean(_) } = d;\n      switch (_) {\n        case \"row\": {\n          if (!e.isAnyArray(u))\n            throw new TypeError(\"center must be an array\");\n          return J(this, u), this;\n        }\n        case \"column\": {\n          if (!e.isAnyArray(u))\n            throw new TypeError(\"center must be an array\");\n          return Q(this, u), this;\n        }\n        case void 0: {\n          if (typeof u != \"number\")\n            throw new TypeError(\"center must be a number\");\n          return W(this, u), this;\n        }\n        default:\n          throw new Error(`invalid option: ${_}`);\n      }\n    }\n    scale(_, d = {}) {\n      if (typeof _ == \"object\" && (d = _, _ = void 0), typeof d != \"object\")\n        throw new TypeError(\"options must be an object\");\n      let u = d.scale;\n      switch (_) {\n        case \"row\": {\n          if (u === void 0)\n            u = ne(this);\n          else if (!e.isAnyArray(u))\n            throw new TypeError(\"scale must be an array\");\n          return pe(this, u), this;\n        }\n        case \"column\": {\n          if (u === void 0)\n            u = be(this);\n          else if (!e.isAnyArray(u))\n            throw new TypeError(\"scale must be an array\");\n          return ve(this, u), this;\n        }\n        case void 0: {\n          if (u === void 0)\n            u = Ee(this);\n          else if (typeof u != \"number\")\n            throw new TypeError(\"scale must be a number\");\n          return Ae(this, u), this;\n        }\n        default:\n          throw new Error(`invalid option: ${_}`);\n      }\n    }\n    toString(_) {\n      return a(this, _);\n    }\n    [Symbol.iterator]() {\n      return this.entries();\n    }\n    /**\n     * iterator from left to right, from top to bottom\n     * yield [row, column, value]\n     * @returns {Generator<[number, number, number], void, void>}\n     */\n    *entries() {\n      for (let _ = 0; _ < this.rows; _++)\n        for (let d = 0; d < this.columns; d++)\n          yield [_, d, this.get(_, d)];\n    }\n    /**\n     * iterator from left to right, from top to bottom\n     * yield value\n     * @returns {Generator<number, void, void>}\n     */\n    *values() {\n      for (let _ = 0; _ < this.rows; _++)\n        for (let d = 0; d < this.columns; d++)\n          yield this.get(_, d);\n    }\n  }\n  _e.prototype.klass = \"Matrix\", typeof Symbol < \"u\" && (_e.prototype[Symbol.for(\"nodejs.util.inspect.custom\")] = n);\n  function Be(M, _) {\n    return M - _;\n  }\n  function Me(M) {\n    return M.every((_) => typeof _ == \"number\");\n  }\n  _e.random = _e.rand, _e.randomInt = _e.randInt, _e.diagonal = _e.diag, _e.prototype.diagonal = _e.prototype.diag, _e.identity = _e.eye, _e.prototype.negate = _e.prototype.neg, _e.prototype.tensorProduct = _e.prototype.kroneckerProduct;\n  const ee = class ee extends _e {\n    constructor(d, u) {\n      super();\n      It(this, de);\n      /**\n       * @type {Float64Array[]}\n       */\n      $e(this, \"data\");\n      if (ee.isMatrix(d))\n        $t(this, de, Ct).call(this, d.rows, d.columns), ee.copy(d, this);\n      else if (Number.isInteger(d) && d >= 0)\n        $t(this, de, Ct).call(this, d, u);\n      else if (e.isAnyArray(d)) {\n        const v = d;\n        if (d = v.length, u = d ? v[0].length : 0, typeof u != \"number\")\n          throw new TypeError(\n            \"Data must be a 2D array with at least one element\"\n          );\n        this.data = [];\n        for (let S = 0; S < d; S++) {\n          if (v[S].length !== u)\n            throw new RangeError(\"Inconsistent array dimensions\");\n          if (!Me(v[S]))\n            throw new TypeError(\"Input data contains non-numeric values\");\n          this.data.push(Float64Array.from(v[S]));\n        }\n        this.rows = d, this.columns = u;\n      } else\n        throw new TypeError(\n          \"First argument must be a positive number or an array\"\n        );\n    }\n    set(d, u, v) {\n      return this.data[d][u] = v, this;\n    }\n    get(d, u) {\n      return this.data[d][u];\n    }\n    removeRow(d) {\n      return f(this, d), this.data.splice(d, 1), this.rows -= 1, this;\n    }\n    addRow(d, u) {\n      return u === void 0 && (u = d, d = this.rows), f(this, d, !0), u = Float64Array.from(w(this, u)), this.data.splice(d, 0, u), this.rows += 1, this;\n    }\n    removeColumn(d) {\n      b(this, d);\n      for (let u = 0; u < this.rows; u++) {\n        const v = new Float64Array(this.columns - 1);\n        for (let S = 0; S < d; S++)\n          v[S] = this.data[u][S];\n        for (let S = d + 1; S < this.columns; S++)\n          v[S - 1] = this.data[u][S];\n        this.data[u] = v;\n      }\n      return this.columns -= 1, this;\n    }\n    addColumn(d, u) {\n      typeof u > \"u\" && (u = d, d = this.columns), b(this, d, !0), u = g(this, u);\n      for (let v = 0; v < this.rows; v++) {\n        const S = new Float64Array(this.columns + 1);\n        let L = 0;\n        for (; L < d; L++)\n          S[L] = this.data[v][L];\n        for (S[L++] = u[v]; L < this.columns + 1; L++)\n          S[L] = this.data[v][L - 1];\n        this.data[v] = S;\n      }\n      return this.columns += 1, this;\n    }\n  };\n  de = new WeakSet(), /**\n   * Init an empty matrix\n   * @param {number} nRows\n   * @param {number} nColumns\n   */\n  Ct = function(d, u) {\n    if (this.data = [], Number.isInteger(u) && u >= 0)\n      for (let v = 0; v < d; v++)\n        this.data.push(new Float64Array(u));\n    else\n      throw new TypeError(\"nColumns must be a positive integer\");\n    this.rows = d, this.columns = u;\n  };\n  let re = ee;\n  l(_e, re);\n  const We = class We extends _e {\n    /**\n     * @param {number | AbstractMatrix | ArrayLike<ArrayLike<number>>} diagonalSize\n     * @return {this}\n     */\n    constructor(d) {\n      super();\n      /** @type {Matrix} */\n      It(this, oe);\n      if (re.isMatrix(d)) {\n        if (!d.isSymmetric())\n          throw new TypeError(\"not symmetric data\");\n        Dt(this, oe, re.copy(\n          d,\n          new re(d.rows, d.rows)\n        ));\n      } else if (Number.isInteger(d) && d >= 0)\n        Dt(this, oe, new re(d, d));\n      else if (Dt(this, oe, new re(d)), !this.isSymmetric())\n        throw new TypeError(\"not symmetric data\");\n    }\n    get size() {\n      return St(this, oe).size;\n    }\n    get rows() {\n      return St(this, oe).rows;\n    }\n    get columns() {\n      return St(this, oe).columns;\n    }\n    get diagonalSize() {\n      return this.rows;\n    }\n    /**\n     * not the same as matrix.isSymmetric()\n     * Here is to check if it's instanceof SymmetricMatrix without bundling issues\n     *\n     * @param value\n     * @returns {boolean}\n     */\n    static isSymmetricMatrix(d) {\n      return re.isMatrix(d) && d.klassType === \"SymmetricMatrix\";\n    }\n    /**\n     * @param diagonalSize\n     * @return {SymmetricMatrix}\n     */\n    static zeros(d) {\n      return new this(d);\n    }\n    /**\n     * @param diagonalSize\n     * @return {SymmetricMatrix}\n     */\n    static ones(d) {\n      return new this(d).fill(1);\n    }\n    clone() {\n      const d = new We(this.diagonalSize);\n      for (const [u, v, S] of this.upperRightEntries())\n        d.set(u, v, S);\n      return d;\n    }\n    toMatrix() {\n      return new re(this);\n    }\n    get(d, u) {\n      return St(this, oe).get(d, u);\n    }\n    set(d, u, v) {\n      return St(this, oe).set(d, u, v), St(this, oe).set(u, d, v), this;\n    }\n    removeCross(d) {\n      return St(this, oe).removeRow(d), St(this, oe).removeColumn(d), this;\n    }\n    addCross(d, u) {\n      u === void 0 && (u = d, d = this.diagonalSize);\n      const v = u.slice();\n      return v.splice(d, 1), St(this, oe).addRow(d, v), St(this, oe).addColumn(d, u), this;\n    }\n    /**\n     * @param {Mask[]} mask\n     */\n    applyMask(d) {\n      if (d.length !== this.diagonalSize)\n        throw new RangeError(\"Mask size do not match with matrix size\");\n      const u = [];\n      for (const [v, S] of d.entries())\n        S || u.push(v);\n      u.reverse();\n      for (const v of u)\n        this.removeCross(v);\n      return this;\n    }\n    /**\n     * Compact format upper-right corner of matrix\n     * iterate from left to right, from top to bottom.\n     *\n     * ```\n     *   A B C D\n     * A 1 2 3 4\n     * B 2 5 6 7\n     * C 3 6 8 9\n     * D 4 7 9 10\n     * ```\n     *\n     * will return compact 1D array `[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]`\n     *\n     * length is S(i=0, n=sideSize) => 10 for a 4 sideSized matrix\n     *\n     * @returns {number[]}\n     */\n    toCompact() {\n      const { diagonalSize: d } = this, u = new Array(d * (d + 1) / 2);\n      for (let v = 0, S = 0, L = 0; L < u.length; L++)\n        u[L] = this.get(S, v), ++v >= d && (v = ++S);\n      return u;\n    }\n    /**\n     * @param {number[]} compact\n     * @return {SymmetricMatrix}\n     */\n    static fromCompact(d) {\n      const u = d.length, v = (Math.sqrt(8 * u + 1) - 1) / 2;\n      if (!Number.isInteger(v))\n        throw new TypeError(\n          `This array is not a compact representation of a Symmetric Matrix, ${JSON.stringify(\n            d\n          )}`\n        );\n      const S = new We(v);\n      for (let L = 0, q = 0, X = 0; X < u; X++)\n        S.set(L, q, d[X]), ++L >= v && (L = ++q);\n      return S;\n    }\n    /**\n     * half iterator upper-right-corner from left to right, from top to bottom\n     * yield [row, column, value]\n     *\n     * @returns {Generator<[number, number, number], void, void>}\n     */\n    *upperRightEntries() {\n      for (let d = 0, u = 0; d < this.diagonalSize; void 0) {\n        const v = this.get(d, u);\n        yield [d, u, v], ++u >= this.diagonalSize && (u = ++d);\n      }\n    }\n    /**\n     * half iterator upper-right-corner from left to right, from top to bottom\n     * yield value\n     *\n     * @returns {Generator<[number, number, number], void, void>}\n     */\n    *upperRightValues() {\n      for (let d = 0, u = 0; d < this.diagonalSize; void 0)\n        yield this.get(d, u), ++u >= this.diagonalSize && (u = ++d);\n    }\n  };\n  oe = new WeakMap();\n  let Te = We;\n  Te.prototype.klassType = \"SymmetricMatrix\";\n  class Fe extends Te {\n    /**\n     * not the same as matrix.isSymmetric()\n     * Here is to check if it's instanceof SymmetricMatrix without bundling issues\n     *\n     * @param value\n     * @returns {boolean}\n     */\n    static isDistanceMatrix(_) {\n      return Te.isSymmetricMatrix(_) && _.klassSubType === \"DistanceMatrix\";\n    }\n    constructor(_) {\n      if (super(_), !this.isDistance())\n        throw new TypeError(\"Provided arguments do no produce a distance matrix\");\n    }\n    set(_, d, u) {\n      return _ === d && (u = 0), super.set(_, d, u);\n    }\n    addCross(_, d) {\n      return d === void 0 && (d = _, _ = this.diagonalSize), d = d.slice(), d[_] = 0, super.addCross(_, d);\n    }\n    toSymmetricMatrix() {\n      return new Te(this);\n    }\n    clone() {\n      const _ = new Fe(this.diagonalSize);\n      for (const [d, u, v] of this.upperRightEntries())\n        d !== u && _.set(d, u, v);\n      return _;\n    }\n    /**\n     * Compact format upper-right corner of matrix\n     * no diagonal (only zeros)\n     * iterable from left to right, from top to bottom.\n     *\n     * ```\n     *   A B C D\n     * A 0 1 2 3\n     * B 1 0 4 5\n     * C 2 4 0 6\n     * D 3 5 6 0\n     * ```\n     *\n     * will return compact 1D array `[1, 2, 3, 4, 5, 6]`\n     *\n     * length is S(i=0, n=sideSize-1) => 6 for a 4 side sized matrix\n     *\n     * @returns {number[]}\n     */\n    toCompact() {\n      const { diagonalSize: _ } = this, d = (_ - 1) * _ / 2, u = new Array(d);\n      for (let v = 1, S = 0, L = 0; L < u.length; L++)\n        u[L] = this.get(S, v), ++v >= _ && (v = ++S + 1);\n      return u;\n    }\n    /**\n     * @param {number[]} compact\n     */\n    static fromCompact(_) {\n      const d = _.length;\n      if (d === 0)\n        return new this(0);\n      const u = (Math.sqrt(8 * d + 1) + 1) / 2;\n      if (!Number.isInteger(u))\n        throw new TypeError(\n          `This array is not a compact representation of a DistanceMatrix, ${JSON.stringify(\n            _\n          )}`\n        );\n      const v = new this(u);\n      for (let S = 1, L = 0, q = 0; q < d; q++)\n        v.set(S, L, _[q]), ++S >= u && (S = ++L + 1);\n      return v;\n    }\n  }\n  Fe.prototype.klassSubType = \"DistanceMatrix\";\n  class Se extends _e {\n    constructor(_, d, u) {\n      super(), this.matrix = _, this.rows = d, this.columns = u;\n    }\n  }\n  class Ye extends Se {\n    constructor(_, d) {\n      b(_, d), super(_, _.rows, 1), this.column = d;\n    }\n    set(_, d, u) {\n      return this.matrix.set(_, this.column, u), this;\n    }\n    get(_) {\n      return this.matrix.get(_, this.column);\n    }\n  }\n  class Je extends Se {\n    constructor(_, d) {\n      k(_, d), super(_, _.rows, d.length), this.columnIndices = d;\n    }\n    set(_, d, u) {\n      return this.matrix.set(_, this.columnIndices[d], u), this;\n    }\n    get(_, d) {\n      return this.matrix.get(_, this.columnIndices[d]);\n    }\n  }\n  class et extends Se {\n    constructor(_) {\n      super(_, _.rows, _.columns);\n    }\n    set(_, d, u) {\n      return this.matrix.set(_, this.columns - d - 1, u), this;\n    }\n    get(_, d) {\n      return this.matrix.get(_, this.columns - d - 1);\n    }\n  }\n  class Ve extends Se {\n    constructor(_) {\n      super(_, _.rows, _.columns);\n    }\n    set(_, d, u) {\n      return this.matrix.set(this.rows - _ - 1, d, u), this;\n    }\n    get(_, d) {\n      return this.matrix.get(this.rows - _ - 1, d);\n    }\n  }\n  class tt extends Se {\n    constructor(_, d) {\n      f(_, d), super(_, 1, _.columns), this.row = d;\n    }\n    set(_, d, u) {\n      return this.matrix.set(this.row, d, u), this;\n    }\n    get(_, d) {\n      return this.matrix.get(this.row, d);\n    }\n  }\n  class qe extends Se {\n    constructor(_, d) {\n      E(_, d), super(_, d.length, _.columns), this.rowIndices = d;\n    }\n    set(_, d, u) {\n      return this.matrix.set(this.rowIndices[_], d, u), this;\n    }\n    get(_, d) {\n      return this.matrix.get(this.rowIndices[_], d);\n    }\n  }\n  class Re extends Se {\n    constructor(_, d, u) {\n      E(_, d), k(_, u), super(_, d.length, u.length), this.rowIndices = d, this.columnIndices = u;\n    }\n    set(_, d, u) {\n      return this.matrix.set(\n        this.rowIndices[_],\n        this.columnIndices[d],\n        u\n      ), this;\n    }\n    get(_, d) {\n      return this.matrix.get(\n        this.rowIndices[_],\n        this.columnIndices[d]\n      );\n    }\n  }\n  class nt extends Se {\n    constructor(_, d, u, v, S) {\n      A(_, d, u, v, S), super(_, u - d + 1, S - v + 1), this.startRow = d, this.startColumn = v;\n    }\n    set(_, d, u) {\n      return this.matrix.set(\n        this.startRow + _,\n        this.startColumn + d,\n        u\n      ), this;\n    }\n    get(_, d) {\n      return this.matrix.get(\n        this.startRow + _,\n        this.startColumn + d\n      );\n    }\n  }\n  class Ge extends Se {\n    constructor(_) {\n      super(_, _.columns, _.rows);\n    }\n    set(_, d, u) {\n      return this.matrix.set(d, _, u), this;\n    }\n    get(_, d) {\n      return this.matrix.get(d, _);\n    }\n  }\n  class Ne extends _e {\n    constructor(_, d = {}) {\n      const { rows: u = 1 } = d;\n      if (_.length % u !== 0)\n        throw new Error(\"the data length is not divisible by the number of rows\");\n      super(), this.rows = u, this.columns = _.length / u, this.data = _;\n    }\n    set(_, d, u) {\n      let v = this._calculateIndex(_, d);\n      return this.data[v] = u, this;\n    }\n    get(_, d) {\n      let u = this._calculateIndex(_, d);\n      return this.data[u];\n    }\n    _calculateIndex(_, d) {\n      return _ * this.columns + d;\n    }\n  }\n  class he extends _e {\n    constructor(_) {\n      super(), this.data = _, this.rows = _.length, this.columns = _[0].length;\n    }\n    set(_, d, u) {\n      return this.data[_][d] = u, this;\n    }\n    get(_, d) {\n      return this.data[_][d];\n    }\n  }\n  function Qe(M, _) {\n    if (e.isAnyArray(M))\n      return M[0] && e.isAnyArray(M[0]) ? new he(M) : new Ne(M, _);\n    throw new Error(\"the argument is not an array\");\n  }\n  class Ze {\n    constructor(_) {\n      _ = he.checkMatrix(_);\n      let d = _.clone(), u = d.rows, v = d.columns, S = new Float64Array(u), L = 1, q, X, j, ae, K, ce, we, le, ge;\n      for (q = 0; q < u; q++)\n        S[q] = q;\n      for (le = new Float64Array(u), X = 0; X < v; X++) {\n        for (q = 0; q < u; q++)\n          le[q] = d.get(q, X);\n        for (q = 0; q < u; q++) {\n          for (ge = Math.min(q, X), K = 0, j = 0; j < ge; j++)\n            K += d.get(q, j) * le[j];\n          le[q] -= K, d.set(q, X, le[q]);\n        }\n        for (ae = X, q = X + 1; q < u; q++)\n          Math.abs(le[q]) > Math.abs(le[ae]) && (ae = q);\n        if (ae !== X) {\n          for (j = 0; j < v; j++)\n            ce = d.get(ae, j), d.set(ae, j, d.get(X, j)), d.set(X, j, ce);\n          we = S[ae], S[ae] = S[X], S[X] = we, L = -L;\n        }\n        if (X < u && d.get(X, X) !== 0)\n          for (q = X + 1; q < u; q++)\n            d.set(q, X, d.get(q, X) / d.get(X, X));\n      }\n      this.LU = d, this.pivotVector = S, this.pivotSign = L;\n    }\n    isSingular() {\n      let _ = this.LU, d = _.columns;\n      for (let u = 0; u < d; u++)\n        if (_.get(u, u) === 0)\n          return !0;\n      return !1;\n    }\n    solve(_) {\n      _ = re.checkMatrix(_);\n      let d = this.LU;\n      if (d.rows !== _.rows)\n        throw new Error(\"Invalid matrix dimensions\");\n      if (this.isSingular())\n        throw new Error(\"LU matrix is singular\");\n      let v = _.columns, S = _.subMatrixRow(this.pivotVector, 0, v - 1), L = d.columns, q, X, j;\n      for (j = 0; j < L; j++)\n        for (q = j + 1; q < L; q++)\n          for (X = 0; X < v; X++)\n            S.set(q, X, S.get(q, X) - S.get(j, X) * d.get(q, j));\n      for (j = L - 1; j >= 0; j--) {\n        for (X = 0; X < v; X++)\n          S.set(j, X, S.get(j, X) / d.get(j, j));\n        for (q = 0; q < j; q++)\n          for (X = 0; X < v; X++)\n            S.set(q, X, S.get(q, X) - S.get(j, X) * d.get(q, j));\n      }\n      return S;\n    }\n    get determinant() {\n      let _ = this.LU;\n      if (!_.isSquare())\n        throw new Error(\"Matrix must be square\");\n      let d = this.pivotSign, u = _.columns;\n      for (let v = 0; v < u; v++)\n        d *= _.get(v, v);\n      return d;\n    }\n    get lowerTriangularMatrix() {\n      let _ = this.LU, d = _.rows, u = _.columns, v = new re(d, u);\n      for (let S = 0; S < d; S++)\n        for (let L = 0; L < u; L++)\n          S > L ? v.set(S, L, _.get(S, L)) : S === L ? v.set(S, L, 1) : v.set(S, L, 0);\n      return v;\n    }\n    get upperTriangularMatrix() {\n      let _ = this.LU, d = _.rows, u = _.columns, v = new re(d, u);\n      for (let S = 0; S < d; S++)\n        for (let L = 0; L < u; L++)\n          S <= L ? v.set(S, L, _.get(S, L)) : v.set(S, L, 0);\n      return v;\n    }\n    get pivotPermutationVector() {\n      return Array.from(this.pivotVector);\n    }\n  }\n  function He(M, _) {\n    let d = 0;\n    return Math.abs(M) > Math.abs(_) ? (d = _ / M, Math.abs(M) * Math.sqrt(1 + d * d)) : _ !== 0 ? (d = M / _, Math.abs(_) * Math.sqrt(1 + d * d)) : 0;\n  }\n  class De {\n    constructor(_) {\n      _ = he.checkMatrix(_);\n      let d = _.clone(), u = _.rows, v = _.columns, S = new Float64Array(v), L, q, X, j;\n      for (X = 0; X < v; X++) {\n        let ae = 0;\n        for (L = X; L < u; L++)\n          ae = He(ae, d.get(L, X));\n        if (ae !== 0) {\n          for (d.get(X, X) < 0 && (ae = -ae), L = X; L < u; L++)\n            d.set(L, X, d.get(L, X) / ae);\n          for (d.set(X, X, d.get(X, X) + 1), q = X + 1; q < v; q++) {\n            for (j = 0, L = X; L < u; L++)\n              j += d.get(L, X) * d.get(L, q);\n            for (j = -j / d.get(X, X), L = X; L < u; L++)\n              d.set(L, q, d.get(L, q) + j * d.get(L, X));\n          }\n        }\n        S[X] = -ae;\n      }\n      this.QR = d, this.Rdiag = S;\n    }\n    solve(_) {\n      _ = re.checkMatrix(_);\n      let d = this.QR, u = d.rows;\n      if (_.rows !== u)\n        throw new Error(\"Matrix row dimensions must agree\");\n      if (!this.isFullRank())\n        throw new Error(\"Matrix is rank deficient\");\n      let v = _.columns, S = _.clone(), L = d.columns, q, X, j, ae;\n      for (j = 0; j < L; j++)\n        for (X = 0; X < v; X++) {\n          for (ae = 0, q = j; q < u; q++)\n            ae += d.get(q, j) * S.get(q, X);\n          for (ae = -ae / d.get(j, j), q = j; q < u; q++)\n            S.set(q, X, S.get(q, X) + ae * d.get(q, j));\n        }\n      for (j = L - 1; j >= 0; j--) {\n        for (X = 0; X < v; X++)\n          S.set(j, X, S.get(j, X) / this.Rdiag[j]);\n        for (q = 0; q < j; q++)\n          for (X = 0; X < v; X++)\n            S.set(q, X, S.get(q, X) - S.get(j, X) * d.get(q, j));\n      }\n      return S.subMatrix(0, L - 1, 0, v - 1);\n    }\n    isFullRank() {\n      let _ = this.QR.columns;\n      for (let d = 0; d < _; d++)\n        if (this.Rdiag[d] === 0)\n          return !1;\n      return !0;\n    }\n    get upperTriangularMatrix() {\n      let _ = this.QR, d = _.columns, u = new re(d, d), v, S;\n      for (v = 0; v < d; v++)\n        for (S = 0; S < d; S++)\n          v < S ? u.set(v, S, _.get(v, S)) : v === S ? u.set(v, S, this.Rdiag[v]) : u.set(v, S, 0);\n      return u;\n    }\n    get orthogonalMatrix() {\n      let _ = this.QR, d = _.rows, u = _.columns, v = new re(d, u), S, L, q, X;\n      for (q = u - 1; q >= 0; q--) {\n        for (S = 0; S < d; S++)\n          v.set(S, q, 0);\n        for (v.set(q, q, 1), L = q; L < u; L++)\n          if (_.get(q, q) !== 0) {\n            for (X = 0, S = q; S < d; S++)\n              X += _.get(S, q) * v.get(S, L);\n            for (X = -X / _.get(q, q), S = q; S < d; S++)\n              v.set(S, L, v.get(S, L) + X * _.get(S, q));\n          }\n      }\n      return v;\n    }\n  }\n  class lt {\n    constructor(_, d = {}) {\n      if (_ = he.checkMatrix(_), _.isEmpty())\n        throw new Error(\"Matrix must be non-empty\");\n      let u = _.rows, v = _.columns;\n      const {\n        computeLeftSingularVectors: S = !0,\n        computeRightSingularVectors: L = !0,\n        autoTranspose: q = !1\n      } = d;\n      let X = !!S, j = !!L, ae = !1, K;\n      if (u < v)\n        if (!q)\n          K = _.clone(), console.warn(\n            \"Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose\"\n          );\n        else {\n          K = _.transpose(), u = K.rows, v = K.columns, ae = !0;\n          let se = X;\n          X = j, j = se;\n        }\n      else\n        K = _.clone();\n      let ce = Math.min(u, v), we = Math.min(u + 1, v), le = new Float64Array(we), ge = new re(u, ce), Ue = new re(v, v), ie = new Float64Array(v), Ce = new Float64Array(u), Xe = new Float64Array(we);\n      for (let se = 0; se < we; se++) Xe[se] = se;\n      let ht = Math.min(u - 1, v), ft = Math.max(0, Math.min(v - 2, u)), dt = Math.max(ht, ft);\n      for (let se = 0; se < dt; se++) {\n        if (se < ht) {\n          le[se] = 0;\n          for (let Ie = se; Ie < u; Ie++)\n            le[se] = He(le[se], K.get(Ie, se));\n          if (le[se] !== 0) {\n            K.get(se, se) < 0 && (le[se] = -le[se]);\n            for (let Ie = se; Ie < u; Ie++)\n              K.set(Ie, se, K.get(Ie, se) / le[se]);\n            K.set(se, se, K.get(se, se) + 1);\n          }\n          le[se] = -le[se];\n        }\n        for (let Ie = se + 1; Ie < v; Ie++) {\n          if (se < ht && le[se] !== 0) {\n            let Ke = 0;\n            for (let Pe = se; Pe < u; Pe++)\n              Ke += K.get(Pe, se) * K.get(Pe, Ie);\n            Ke = -Ke / K.get(se, se);\n            for (let Pe = se; Pe < u; Pe++)\n              K.set(Pe, Ie, K.get(Pe, Ie) + Ke * K.get(Pe, se));\n          }\n          ie[Ie] = K.get(se, Ie);\n        }\n        if (X && se < ht)\n          for (let Ie = se; Ie < u; Ie++)\n            ge.set(Ie, se, K.get(Ie, se));\n        if (se < ft) {\n          ie[se] = 0;\n          for (let Ie = se + 1; Ie < v; Ie++)\n            ie[se] = He(ie[se], ie[Ie]);\n          if (ie[se] !== 0) {\n            ie[se + 1] < 0 && (ie[se] = 0 - ie[se]);\n            for (let Ie = se + 1; Ie < v; Ie++)\n              ie[Ie] /= ie[se];\n            ie[se + 1] += 1;\n          }\n          if (ie[se] = -ie[se], se + 1 < u && ie[se] !== 0) {\n            for (let Ie = se + 1; Ie < u; Ie++)\n              Ce[Ie] = 0;\n            for (let Ie = se + 1; Ie < u; Ie++)\n              for (let Ke = se + 1; Ke < v; Ke++)\n                Ce[Ie] += ie[Ke] * K.get(Ie, Ke);\n            for (let Ie = se + 1; Ie < v; Ie++) {\n              let Ke = -ie[Ie] / ie[se + 1];\n              for (let Pe = se + 1; Pe < u; Pe++)\n                K.set(Pe, Ie, K.get(Pe, Ie) + Ke * Ce[Pe]);\n            }\n          }\n          if (j)\n            for (let Ie = se + 1; Ie < v; Ie++)\n              Ue.set(Ie, se, ie[Ie]);\n        }\n      }\n      let rt = Math.min(v, u + 1);\n      if (ht < v && (le[ht] = K.get(ht, ht)), u < rt && (le[rt - 1] = 0), ft + 1 < rt && (ie[ft] = K.get(ft, rt - 1)), ie[rt - 1] = 0, X) {\n        for (let se = ht; se < ce; se++) {\n          for (let Ie = 0; Ie < u; Ie++)\n            ge.set(Ie, se, 0);\n          ge.set(se, se, 1);\n        }\n        for (let se = ht - 1; se >= 0; se--)\n          if (le[se] !== 0) {\n            for (let Ie = se + 1; Ie < ce; Ie++) {\n              let Ke = 0;\n              for (let Pe = se; Pe < u; Pe++)\n                Ke += ge.get(Pe, se) * ge.get(Pe, Ie);\n              Ke = -Ke / ge.get(se, se);\n              for (let Pe = se; Pe < u; Pe++)\n                ge.set(Pe, Ie, ge.get(Pe, Ie) + Ke * ge.get(Pe, se));\n            }\n            for (let Ie = se; Ie < u; Ie++)\n              ge.set(Ie, se, -ge.get(Ie, se));\n            ge.set(se, se, 1 + ge.get(se, se));\n            for (let Ie = 0; Ie < se - 1; Ie++)\n              ge.set(Ie, se, 0);\n          } else {\n            for (let Ie = 0; Ie < u; Ie++)\n              ge.set(Ie, se, 0);\n            ge.set(se, se, 1);\n          }\n      }\n      if (j)\n        for (let se = v - 1; se >= 0; se--) {\n          if (se < ft && ie[se] !== 0)\n            for (let Ie = se + 1; Ie < v; Ie++) {\n              let Ke = 0;\n              for (let Pe = se + 1; Pe < v; Pe++)\n                Ke += Ue.get(Pe, se) * Ue.get(Pe, Ie);\n              Ke = -Ke / Ue.get(se + 1, se);\n              for (let Pe = se + 1; Pe < v; Pe++)\n                Ue.set(Pe, Ie, Ue.get(Pe, Ie) + Ke * Ue.get(Pe, se));\n            }\n          for (let Ie = 0; Ie < v; Ie++)\n            Ue.set(Ie, se, 0);\n          Ue.set(se, se, 1);\n        }\n      let at = rt - 1, gt = Number.EPSILON;\n      for (; rt > 0; ) {\n        let se, Ie;\n        for (se = rt - 2; se >= -1 && se !== -1; se--) {\n          const Ke = Number.MIN_VALUE + gt * Math.abs(le[se] + Math.abs(le[se + 1]));\n          if (Math.abs(ie[se]) <= Ke || Number.isNaN(ie[se])) {\n            ie[se] = 0;\n            break;\n          }\n        }\n        if (se === rt - 2)\n          Ie = 4;\n        else {\n          let Ke;\n          for (Ke = rt - 1; Ke >= se && Ke !== se; Ke--) {\n            let Pe = (Ke !== rt ? Math.abs(ie[Ke]) : 0) + (Ke !== se + 1 ? Math.abs(ie[Ke - 1]) : 0);\n            if (Math.abs(le[Ke]) <= gt * Pe) {\n              le[Ke] = 0;\n              break;\n            }\n          }\n          Ke === se ? Ie = 3 : Ke === rt - 1 ? Ie = 1 : (Ie = 2, se = Ke);\n        }\n        switch (se++, Ie) {\n          case 1: {\n            let Ke = ie[rt - 2];\n            ie[rt - 2] = 0;\n            for (let Pe = rt - 2; Pe >= se; Pe--) {\n              let mt = He(le[Pe], Ke), ct = le[Pe] / mt, pt = Ke / mt;\n              if (le[Pe] = mt, Pe !== se && (Ke = -pt * ie[Pe - 1], ie[Pe - 1] = ct * ie[Pe - 1]), j)\n                for (let _t = 0; _t < v; _t++)\n                  mt = ct * Ue.get(_t, Pe) + pt * Ue.get(_t, rt - 1), Ue.set(_t, rt - 1, -pt * Ue.get(_t, Pe) + ct * Ue.get(_t, rt - 1)), Ue.set(_t, Pe, mt);\n            }\n            break;\n          }\n          case 2: {\n            let Ke = ie[se - 1];\n            ie[se - 1] = 0;\n            for (let Pe = se; Pe < rt; Pe++) {\n              let mt = He(le[Pe], Ke), ct = le[Pe] / mt, pt = Ke / mt;\n              if (le[Pe] = mt, Ke = -pt * ie[Pe], ie[Pe] = ct * ie[Pe], X)\n                for (let _t = 0; _t < u; _t++)\n                  mt = ct * ge.get(_t, Pe) + pt * ge.get(_t, se - 1), ge.set(_t, se - 1, -pt * ge.get(_t, Pe) + ct * ge.get(_t, se - 1)), ge.set(_t, Pe, mt);\n            }\n            break;\n          }\n          case 3: {\n            const Ke = Math.max(\n              Math.abs(le[rt - 1]),\n              Math.abs(le[rt - 2]),\n              Math.abs(ie[rt - 2]),\n              Math.abs(le[se]),\n              Math.abs(ie[se])\n            ), Pe = le[rt - 1] / Ke, mt = le[rt - 2] / Ke, ct = ie[rt - 2] / Ke, pt = le[se] / Ke, _t = ie[se] / Ke, bt = ((mt + Pe) * (mt - Pe) + ct * ct) / 2, Mt = Pe * ct * (Pe * ct);\n            let xt = 0;\n            (bt !== 0 || Mt !== 0) && (bt < 0 ? xt = 0 - Math.sqrt(bt * bt + Mt) : xt = Math.sqrt(bt * bt + Mt), xt = Mt / (bt + xt));\n            let kt = (pt + Pe) * (pt - Pe) + xt, At = pt * _t;\n            for (let ut = se; ut < rt - 1; ut++) {\n              let vt = He(kt, At);\n              vt === 0 && (vt = Number.MIN_VALUE);\n              let yt = kt / vt, Et = At / vt;\n              if (ut !== se && (ie[ut - 1] = vt), kt = yt * le[ut] + Et * ie[ut], ie[ut] = yt * ie[ut] - Et * le[ut], At = Et * le[ut + 1], le[ut + 1] = yt * le[ut + 1], j)\n                for (let wt = 0; wt < v; wt++)\n                  vt = yt * Ue.get(wt, ut) + Et * Ue.get(wt, ut + 1), Ue.set(wt, ut + 1, -Et * Ue.get(wt, ut) + yt * Ue.get(wt, ut + 1)), Ue.set(wt, ut, vt);\n              if (vt = He(kt, At), vt === 0 && (vt = Number.MIN_VALUE), yt = kt / vt, Et = At / vt, le[ut] = vt, kt = yt * ie[ut] + Et * le[ut + 1], le[ut + 1] = -Et * ie[ut] + yt * le[ut + 1], At = Et * ie[ut + 1], ie[ut + 1] = yt * ie[ut + 1], X && ut < u - 1)\n                for (let wt = 0; wt < u; wt++)\n                  vt = yt * ge.get(wt, ut) + Et * ge.get(wt, ut + 1), ge.set(wt, ut + 1, -Et * ge.get(wt, ut) + yt * ge.get(wt, ut + 1)), ge.set(wt, ut, vt);\n            }\n            ie[rt - 2] = kt;\n            break;\n          }\n          case 4: {\n            if (le[se] <= 0 && (le[se] = le[se] < 0 ? -le[se] : 0, j))\n              for (let Ke = 0; Ke <= at; Ke++)\n                Ue.set(Ke, se, -Ue.get(Ke, se));\n            for (; se < at && !(le[se] >= le[se + 1]); ) {\n              let Ke = le[se];\n              if (le[se] = le[se + 1], le[se + 1] = Ke, j && se < v - 1)\n                for (let Pe = 0; Pe < v; Pe++)\n                  Ke = Ue.get(Pe, se + 1), Ue.set(Pe, se + 1, Ue.get(Pe, se)), Ue.set(Pe, se, Ke);\n              if (X && se < u - 1)\n                for (let Pe = 0; Pe < u; Pe++)\n                  Ke = ge.get(Pe, se + 1), ge.set(Pe, se + 1, ge.get(Pe, se)), ge.set(Pe, se, Ke);\n              se++;\n            }\n            rt--;\n            break;\n          }\n        }\n      }\n      if (ae) {\n        let se = Ue;\n        Ue = ge, ge = se;\n      }\n      this.m = u, this.n = v, this.s = le, this.U = ge, this.V = Ue;\n    }\n    solve(_) {\n      let d = _, u = this.threshold, v = this.s.length, S = re.zeros(v, v);\n      for (let ce = 0; ce < v; ce++)\n        Math.abs(this.s[ce]) <= u ? S.set(ce, ce, 0) : S.set(ce, ce, 1 / this.s[ce]);\n      let L = this.U, q = this.rightSingularVectors, X = q.mmul(S), j = q.rows, ae = L.rows, K = re.zeros(j, ae);\n      for (let ce = 0; ce < j; ce++)\n        for (let we = 0; we < ae; we++) {\n          let le = 0;\n          for (let ge = 0; ge < v; ge++)\n            le += X.get(ce, ge) * L.get(we, ge);\n          K.set(ce, we, le);\n        }\n      return K.mmul(d);\n    }\n    solveForDiagonal(_) {\n      return this.solve(re.diag(_));\n    }\n    inverse() {\n      let _ = this.V, d = this.threshold, u = _.rows, v = _.columns, S = new re(u, this.s.length);\n      for (let ae = 0; ae < u; ae++)\n        for (let K = 0; K < v; K++)\n          Math.abs(this.s[K]) > d && S.set(ae, K, _.get(ae, K) / this.s[K]);\n      let L = this.U, q = L.rows, X = L.columns, j = new re(u, q);\n      for (let ae = 0; ae < u; ae++)\n        for (let K = 0; K < q; K++) {\n          let ce = 0;\n          for (let we = 0; we < X; we++)\n            ce += S.get(ae, we) * L.get(K, we);\n          j.set(ae, K, ce);\n        }\n      return j;\n    }\n    get condition() {\n      return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n    }\n    get norm2() {\n      return this.s[0];\n    }\n    get rank() {\n      let _ = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON, d = 0, u = this.s;\n      for (let v = 0, S = u.length; v < S; v++)\n        u[v] > _ && d++;\n      return d;\n    }\n    get diagonal() {\n      return Array.from(this.s);\n    }\n    get threshold() {\n      return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\n    }\n    get leftSingularVectors() {\n      return this.U;\n    }\n    get rightSingularVectors() {\n      return this.V;\n    }\n    get diagonalMatrix() {\n      return re.diag(this.s);\n    }\n  }\n  function ot(M, _ = !1) {\n    return M = he.checkMatrix(M), _ ? new lt(M).inverse() : Le(M, re.eye(M.rows));\n  }\n  function Le(M, _, d = !1) {\n    return M = he.checkMatrix(M), _ = he.checkMatrix(_), d ? new lt(M).solve(_) : M.isSquare() ? new Ze(M).solve(_) : new De(M).solve(_);\n  }\n  function ze(M) {\n    if (M = re.checkMatrix(M), M.isSquare()) {\n      if (M.columns === 0)\n        return 1;\n      let _, d, u, v;\n      if (M.columns === 2)\n        return _ = M.get(0, 0), d = M.get(0, 1), u = M.get(1, 0), v = M.get(1, 1), _ * v - d * u;\n      if (M.columns === 3) {\n        let S, L, q;\n        return S = new Re(M, [1, 2], [1, 2]), L = new Re(M, [1, 2], [0, 2]), q = new Re(M, [1, 2], [0, 1]), _ = M.get(0, 0), d = M.get(0, 1), u = M.get(0, 2), _ * ze(S) - d * ze(L) + u * ze(q);\n      } else\n        return new Ze(M).determinant;\n    } else\n      throw Error(\"determinant can only be calculated for a square matrix\");\n  }\n  function je(M, _) {\n    let d = [];\n    for (let u = 0; u < M; u++)\n      u !== _ && d.push(u);\n    return d;\n  }\n  function Oe(M, _, d, u = 1e-9, v = 1e-9) {\n    if (M > v)\n      return new Array(_.rows + 1).fill(0);\n    {\n      let S = _.addRow(d, [0]);\n      for (let L = 0; L < S.rows; L++)\n        Math.abs(S.get(L, 0)) < u && S.set(L, 0, 0);\n      return S.to1DArray();\n    }\n  }\n  function st(M, _ = {}) {\n    const { thresholdValue: d = 1e-9, thresholdError: u = 1e-9 } = _;\n    M = re.checkMatrix(M);\n    let v = M.rows, S = new re(v, v);\n    for (let L = 0; L < v; L++) {\n      let q = re.columnVector(M.getRow(L)), X = M.subMatrixRow(je(v, L)).transpose(), ae = new lt(X).solve(q), K = re.sub(q, X.mmul(ae)).abs().max();\n      S.setRow(\n        L,\n        Oe(K, ae, L, d, u)\n      );\n    }\n    return S;\n  }\n  function Z(M, _ = Number.EPSILON) {\n    if (M = re.checkMatrix(M), M.isEmpty())\n      return M.transpose();\n    let d = new lt(M, { autoTranspose: !0 }), u = d.leftSingularVectors, v = d.rightSingularVectors, S = d.diagonal;\n    for (let L = 0; L < S.length; L++)\n      Math.abs(S[L]) > _ ? S[L] = 1 / S[L] : S[L] = 0;\n    return v.mmul(re.diag(S).mmul(u.transpose()));\n  }\n  function ue(M, _ = M, d = {}) {\n    M = new re(M);\n    let u = !1;\n    if (typeof _ == \"object\" && !re.isMatrix(_) && !e.isAnyArray(_) ? (d = _, _ = M, u = !0) : _ = new re(_), M.rows !== _.rows)\n      throw new TypeError(\"Both matrices must have the same number of rows\");\n    const { center: v = !0 } = d;\n    v && (M = M.center(\"column\"), u || (_ = _.center(\"column\")));\n    const S = M.transpose().mmul(_);\n    for (let L = 0; L < S.rows; L++)\n      for (let q = 0; q < S.columns; q++)\n        S.set(L, q, S.get(L, q) * (1 / (M.rows - 1)));\n    return S;\n  }\n  function xe(M, _ = M, d = {}) {\n    M = new re(M);\n    let u = !1;\n    if (typeof _ == \"object\" && !re.isMatrix(_) && !e.isAnyArray(_) ? (d = _, _ = M, u = !0) : _ = new re(_), M.rows !== _.rows)\n      throw new TypeError(\"Both matrices must have the same number of rows\");\n    const { center: v = !0, scale: S = !0 } = d;\n    v && (M.center(\"column\"), u || _.center(\"column\")), S && (M.scale(\"column\"), u || _.scale(\"column\"));\n    const L = M.standardDeviation(\"column\", { unbiased: !0 }), q = u ? L : _.standardDeviation(\"column\", { unbiased: !0 }), X = M.transpose().mmul(_);\n    for (let j = 0; j < X.rows; j++)\n      for (let ae = 0; ae < X.columns; ae++)\n        X.set(\n          j,\n          ae,\n          X.get(j, ae) * (1 / (L[j] * q[ae])) * (1 / (M.rows - 1))\n        );\n    return X;\n  }\n  class ke {\n    constructor(_, d = {}) {\n      const { assumeSymmetric: u = !1 } = d;\n      if (_ = he.checkMatrix(_), !_.isSquare())\n        throw new Error(\"Matrix is not a square matrix\");\n      if (_.isEmpty())\n        throw new Error(\"Matrix must be non-empty\");\n      let v = _.columns, S = new re(v, v), L = new Float64Array(v), q = new Float64Array(v), X = _, j, ae, K = !1;\n      if (u ? K = !0 : K = _.isSymmetric(), K) {\n        for (j = 0; j < v; j++)\n          for (ae = 0; ae < v; ae++)\n            S.set(j, ae, X.get(j, ae));\n        te(v, q, L, S), me(v, q, L, S);\n      } else {\n        let ce = new re(v, v), we = new Float64Array(v);\n        for (ae = 0; ae < v; ae++)\n          for (j = 0; j < v; j++)\n            ce.set(j, ae, X.get(j, ae));\n        U(v, ce, we, S), ye(v, q, L, S, ce);\n      }\n      this.n = v, this.e = q, this.d = L, this.V = S;\n    }\n    get realEigenvalues() {\n      return Array.from(this.d);\n    }\n    get imaginaryEigenvalues() {\n      return Array.from(this.e);\n    }\n    get eigenvectorMatrix() {\n      return this.V;\n    }\n    get diagonalMatrix() {\n      let _ = this.n, d = this.e, u = this.d, v = new re(_, _), S, L;\n      for (S = 0; S < _; S++) {\n        for (L = 0; L < _; L++)\n          v.set(S, L, 0);\n        v.set(S, S, u[S]), d[S] > 0 ? v.set(S, S + 1, d[S]) : d[S] < 0 && v.set(S, S - 1, d[S]);\n      }\n      return v;\n    }\n  }\n  function te(M, _, d, u) {\n    let v, S, L, q, X, j, ae, K;\n    for (X = 0; X < M; X++)\n      d[X] = u.get(M - 1, X);\n    for (q = M - 1; q > 0; q--) {\n      for (K = 0, L = 0, j = 0; j < q; j++)\n        K = K + Math.abs(d[j]);\n      if (K === 0)\n        for (_[q] = d[q - 1], X = 0; X < q; X++)\n          d[X] = u.get(q - 1, X), u.set(q, X, 0), u.set(X, q, 0);\n      else {\n        for (j = 0; j < q; j++)\n          d[j] /= K, L += d[j] * d[j];\n        for (v = d[q - 1], S = Math.sqrt(L), v > 0 && (S = -S), _[q] = K * S, L = L - v * S, d[q - 1] = v - S, X = 0; X < q; X++)\n          _[X] = 0;\n        for (X = 0; X < q; X++) {\n          for (v = d[X], u.set(X, q, v), S = _[X] + u.get(X, X) * v, j = X + 1; j <= q - 1; j++)\n            S += u.get(j, X) * d[j], _[j] += u.get(j, X) * v;\n          _[X] = S;\n        }\n        for (v = 0, X = 0; X < q; X++)\n          _[X] /= L, v += _[X] * d[X];\n        for (ae = v / (L + L), X = 0; X < q; X++)\n          _[X] -= ae * d[X];\n        for (X = 0; X < q; X++) {\n          for (v = d[X], S = _[X], j = X; j <= q - 1; j++)\n            u.set(j, X, u.get(j, X) - (v * _[j] + S * d[j]));\n          d[X] = u.get(q - 1, X), u.set(q, X, 0);\n        }\n      }\n      d[q] = L;\n    }\n    for (q = 0; q < M - 1; q++) {\n      if (u.set(M - 1, q, u.get(q, q)), u.set(q, q, 1), L = d[q + 1], L !== 0) {\n        for (j = 0; j <= q; j++)\n          d[j] = u.get(j, q + 1) / L;\n        for (X = 0; X <= q; X++) {\n          for (S = 0, j = 0; j <= q; j++)\n            S += u.get(j, q + 1) * u.get(j, X);\n          for (j = 0; j <= q; j++)\n            u.set(j, X, u.get(j, X) - S * d[j]);\n        }\n      }\n      for (j = 0; j <= q; j++)\n        u.set(j, q + 1, 0);\n    }\n    for (X = 0; X < M; X++)\n      d[X] = u.get(M - 1, X), u.set(M - 1, X, 0);\n    u.set(M - 1, M - 1, 1), _[0] = 0;\n  }\n  function me(M, _, d, u) {\n    let v, S, L, q, X, j, ae, K, ce, we, le, ge, Ue, ie, Ce, Xe;\n    for (L = 1; L < M; L++)\n      _[L - 1] = _[L];\n    _[M - 1] = 0;\n    let ht = 0, ft = 0, dt = Number.EPSILON;\n    for (j = 0; j < M; j++) {\n      for (ft = Math.max(ft, Math.abs(d[j]) + Math.abs(_[j])), ae = j; ae < M && !(Math.abs(_[ae]) <= dt * ft); )\n        ae++;\n      if (ae > j)\n        do {\n          for (v = d[j], K = (d[j + 1] - v) / (2 * _[j]), ce = He(K, 1), K < 0 && (ce = -ce), d[j] = _[j] / (K + ce), d[j + 1] = _[j] * (K + ce), we = d[j + 1], S = v - d[j], L = j + 2; L < M; L++)\n            d[L] -= S;\n          for (ht = ht + S, K = d[ae], le = 1, ge = le, Ue = le, ie = _[j + 1], Ce = 0, Xe = 0, L = ae - 1; L >= j; L--)\n            for (Ue = ge, ge = le, Xe = Ce, v = le * _[L], S = le * K, ce = He(K, _[L]), _[L + 1] = Ce * ce, Ce = _[L] / ce, le = K / ce, K = le * d[L] - Ce * v, d[L + 1] = S + Ce * (le * v + Ce * d[L]), X = 0; X < M; X++)\n              S = u.get(X, L + 1), u.set(X, L + 1, Ce * u.get(X, L) + le * S), u.set(X, L, le * u.get(X, L) - Ce * S);\n          K = -Ce * Xe * Ue * ie * _[j] / we, _[j] = Ce * K, d[j] = le * K;\n        } while (Math.abs(_[j]) > dt * ft);\n      d[j] = d[j] + ht, _[j] = 0;\n    }\n    for (L = 0; L < M - 1; L++) {\n      for (X = L, K = d[L], q = L + 1; q < M; q++)\n        d[q] < K && (X = q, K = d[q]);\n      if (X !== L)\n        for (d[X] = d[L], d[L] = K, q = 0; q < M; q++)\n          K = u.get(q, L), u.set(q, L, u.get(q, X)), u.set(q, X, K);\n    }\n  }\n  function U(M, _, d, u) {\n    let v = 0, S = M - 1, L, q, X, j, ae, K, ce;\n    for (K = v + 1; K <= S - 1; K++) {\n      for (ce = 0, j = K; j <= S; j++)\n        ce = ce + Math.abs(_.get(j, K - 1));\n      if (ce !== 0) {\n        for (X = 0, j = S; j >= K; j--)\n          d[j] = _.get(j, K - 1) / ce, X += d[j] * d[j];\n        for (q = Math.sqrt(X), d[K] > 0 && (q = -q), X = X - d[K] * q, d[K] = d[K] - q, ae = K; ae < M; ae++) {\n          for (L = 0, j = S; j >= K; j--)\n            L += d[j] * _.get(j, ae);\n          for (L = L / X, j = K; j <= S; j++)\n            _.set(j, ae, _.get(j, ae) - L * d[j]);\n        }\n        for (j = 0; j <= S; j++) {\n          for (L = 0, ae = S; ae >= K; ae--)\n            L += d[ae] * _.get(j, ae);\n          for (L = L / X, ae = K; ae <= S; ae++)\n            _.set(j, ae, _.get(j, ae) - L * d[ae]);\n        }\n        d[K] = ce * d[K], _.set(K, K - 1, ce * q);\n      }\n    }\n    for (j = 0; j < M; j++)\n      for (ae = 0; ae < M; ae++)\n        u.set(j, ae, j === ae ? 1 : 0);\n    for (K = S - 1; K >= v + 1; K--)\n      if (_.get(K, K - 1) !== 0) {\n        for (j = K + 1; j <= S; j++)\n          d[j] = _.get(j, K - 1);\n        for (ae = K; ae <= S; ae++) {\n          for (q = 0, j = K; j <= S; j++)\n            q += d[j] * u.get(j, ae);\n          for (q = q / d[K] / _.get(K, K - 1), j = K; j <= S; j++)\n            u.set(j, ae, u.get(j, ae) + q * d[j]);\n        }\n      }\n  }\n  function ye(M, _, d, u, v) {\n    let S = M - 1, L = 0, q = M - 1, X = Number.EPSILON, j = 0, ae = 0, K = 0, ce = 0, we = 0, le = 0, ge = 0, Ue = 0, ie, Ce, Xe, ht, ft, dt, rt, at, gt, se, Ie, Ke, Pe, mt, ct;\n    for (ie = 0; ie < M; ie++)\n      for ((ie < L || ie > q) && (d[ie] = v.get(ie, ie), _[ie] = 0), Ce = Math.max(ie - 1, 0); Ce < M; Ce++)\n        ae = ae + Math.abs(v.get(ie, Ce));\n    for (; S >= L; ) {\n      for (ht = S; ht > L && (le = Math.abs(v.get(ht - 1, ht - 1)) + Math.abs(v.get(ht, ht)), le === 0 && (le = ae), !(Math.abs(v.get(ht, ht - 1)) < X * le)); )\n        ht--;\n      if (ht === S)\n        v.set(S, S, v.get(S, S) + j), d[S] = v.get(S, S), _[S] = 0, S--, Ue = 0;\n      else if (ht === S - 1) {\n        if (rt = v.get(S, S - 1) * v.get(S - 1, S), K = (v.get(S - 1, S - 1) - v.get(S, S)) / 2, ce = K * K + rt, ge = Math.sqrt(Math.abs(ce)), v.set(S, S, v.get(S, S) + j), v.set(S - 1, S - 1, v.get(S - 1, S - 1) + j), at = v.get(S, S), ce >= 0) {\n          for (ge = K >= 0 ? K + ge : K - ge, d[S - 1] = at + ge, d[S] = d[S - 1], ge !== 0 && (d[S] = at - rt / ge), _[S - 1] = 0, _[S] = 0, at = v.get(S, S - 1), le = Math.abs(at) + Math.abs(ge), K = at / le, ce = ge / le, we = Math.sqrt(K * K + ce * ce), K = K / we, ce = ce / we, Ce = S - 1; Ce < M; Ce++)\n            ge = v.get(S - 1, Ce), v.set(S - 1, Ce, ce * ge + K * v.get(S, Ce)), v.set(S, Ce, ce * v.get(S, Ce) - K * ge);\n          for (ie = 0; ie <= S; ie++)\n            ge = v.get(ie, S - 1), v.set(ie, S - 1, ce * ge + K * v.get(ie, S)), v.set(ie, S, ce * v.get(ie, S) - K * ge);\n          for (ie = L; ie <= q; ie++)\n            ge = u.get(ie, S - 1), u.set(ie, S - 1, ce * ge + K * u.get(ie, S)), u.set(ie, S, ce * u.get(ie, S) - K * ge);\n        } else\n          d[S - 1] = at + K, d[S] = at + K, _[S - 1] = ge, _[S] = -ge;\n        S = S - 2, Ue = 0;\n      } else {\n        if (at = v.get(S, S), gt = 0, rt = 0, ht < S && (gt = v.get(S - 1, S - 1), rt = v.get(S, S - 1) * v.get(S - 1, S)), Ue === 10) {\n          for (j += at, ie = L; ie <= S; ie++)\n            v.set(ie, ie, v.get(ie, ie) - at);\n          le = Math.abs(v.get(S, S - 1)) + Math.abs(v.get(S - 1, S - 2)), at = gt = 0.75 * le, rt = -0.4375 * le * le;\n        }\n        if (Ue === 30 && (le = (gt - at) / 2, le = le * le + rt, le > 0)) {\n          for (le = Math.sqrt(le), gt < at && (le = -le), le = at - rt / ((gt - at) / 2 + le), ie = L; ie <= S; ie++)\n            v.set(ie, ie, v.get(ie, ie) - le);\n          j += le, at = gt = rt = 0.964;\n        }\n        for (Ue = Ue + 1, ft = S - 2; ft >= ht && (ge = v.get(ft, ft), we = at - ge, le = gt - ge, K = (we * le - rt) / v.get(ft + 1, ft) + v.get(ft, ft + 1), ce = v.get(ft + 1, ft + 1) - ge - we - le, we = v.get(ft + 2, ft + 1), le = Math.abs(K) + Math.abs(ce) + Math.abs(we), K = K / le, ce = ce / le, we = we / le, !(ft === ht || Math.abs(v.get(ft, ft - 1)) * (Math.abs(ce) + Math.abs(we)) < X * (Math.abs(K) * (Math.abs(v.get(ft - 1, ft - 1)) + Math.abs(ge) + Math.abs(v.get(ft + 1, ft + 1)))))); )\n          ft--;\n        for (ie = ft + 2; ie <= S; ie++)\n          v.set(ie, ie - 2, 0), ie > ft + 2 && v.set(ie, ie - 3, 0);\n        for (Xe = ft; Xe <= S - 1 && (mt = Xe !== S - 1, Xe !== ft && (K = v.get(Xe, Xe - 1), ce = v.get(Xe + 1, Xe - 1), we = mt ? v.get(Xe + 2, Xe - 1) : 0, at = Math.abs(K) + Math.abs(ce) + Math.abs(we), at !== 0 && (K = K / at, ce = ce / at, we = we / at)), at !== 0); Xe++)\n          if (le = Math.sqrt(K * K + ce * ce + we * we), K < 0 && (le = -le), le !== 0) {\n            for (Xe !== ft ? v.set(Xe, Xe - 1, -le * at) : ht !== ft && v.set(Xe, Xe - 1, -v.get(Xe, Xe - 1)), K = K + le, at = K / le, gt = ce / le, ge = we / le, ce = ce / K, we = we / K, Ce = Xe; Ce < M; Ce++)\n              K = v.get(Xe, Ce) + ce * v.get(Xe + 1, Ce), mt && (K = K + we * v.get(Xe + 2, Ce), v.set(Xe + 2, Ce, v.get(Xe + 2, Ce) - K * ge)), v.set(Xe, Ce, v.get(Xe, Ce) - K * at), v.set(Xe + 1, Ce, v.get(Xe + 1, Ce) - K * gt);\n            for (ie = 0; ie <= Math.min(S, Xe + 3); ie++)\n              K = at * v.get(ie, Xe) + gt * v.get(ie, Xe + 1), mt && (K = K + ge * v.get(ie, Xe + 2), v.set(ie, Xe + 2, v.get(ie, Xe + 2) - K * we)), v.set(ie, Xe, v.get(ie, Xe) - K), v.set(ie, Xe + 1, v.get(ie, Xe + 1) - K * ce);\n            for (ie = L; ie <= q; ie++)\n              K = at * u.get(ie, Xe) + gt * u.get(ie, Xe + 1), mt && (K = K + ge * u.get(ie, Xe + 2), u.set(ie, Xe + 2, u.get(ie, Xe + 2) - K * we)), u.set(ie, Xe, u.get(ie, Xe) - K), u.set(ie, Xe + 1, u.get(ie, Xe + 1) - K * ce);\n          }\n      }\n    }\n    if (ae !== 0) {\n      for (S = M - 1; S >= 0; S--)\n        if (K = d[S], ce = _[S], ce === 0)\n          for (ht = S, v.set(S, S, 1), ie = S - 1; ie >= 0; ie--) {\n            for (rt = v.get(ie, ie) - K, we = 0, Ce = ht; Ce <= S; Ce++)\n              we = we + v.get(ie, Ce) * v.get(Ce, S);\n            if (_[ie] < 0)\n              ge = rt, le = we;\n            else if (ht = ie, _[ie] === 0 ? v.set(ie, S, rt !== 0 ? -we / rt : -we / (X * ae)) : (at = v.get(ie, ie + 1), gt = v.get(ie + 1, ie), ce = (d[ie] - K) * (d[ie] - K) + _[ie] * _[ie], dt = (at * le - ge * we) / ce, v.set(ie, S, dt), v.set(\n              ie + 1,\n              S,\n              Math.abs(at) > Math.abs(ge) ? (-we - rt * dt) / at : (-le - gt * dt) / ge\n            )), dt = Math.abs(v.get(ie, S)), X * dt * dt > 1)\n              for (Ce = ie; Ce <= S; Ce++)\n                v.set(Ce, S, v.get(Ce, S) / dt);\n          }\n        else if (ce < 0)\n          for (ht = S - 1, Math.abs(v.get(S, S - 1)) > Math.abs(v.get(S - 1, S)) ? (v.set(S - 1, S - 1, ce / v.get(S, S - 1)), v.set(S - 1, S, -(v.get(S, S) - K) / v.get(S, S - 1))) : (ct = it(0, -v.get(S - 1, S), v.get(S - 1, S - 1) - K, ce), v.set(S - 1, S - 1, ct[0]), v.set(S - 1, S, ct[1])), v.set(S, S - 1, 0), v.set(S, S, 1), ie = S - 2; ie >= 0; ie--) {\n            for (se = 0, Ie = 0, Ce = ht; Ce <= S; Ce++)\n              se = se + v.get(ie, Ce) * v.get(Ce, S - 1), Ie = Ie + v.get(ie, Ce) * v.get(Ce, S);\n            if (rt = v.get(ie, ie) - K, _[ie] < 0)\n              ge = rt, we = se, le = Ie;\n            else if (ht = ie, _[ie] === 0 ? (ct = it(-se, -Ie, rt, ce), v.set(ie, S - 1, ct[0]), v.set(ie, S, ct[1])) : (at = v.get(ie, ie + 1), gt = v.get(ie + 1, ie), Ke = (d[ie] - K) * (d[ie] - K) + _[ie] * _[ie] - ce * ce, Pe = (d[ie] - K) * 2 * ce, Ke === 0 && Pe === 0 && (Ke = X * ae * (Math.abs(rt) + Math.abs(ce) + Math.abs(at) + Math.abs(gt) + Math.abs(ge))), ct = it(\n              at * we - ge * se + ce * Ie,\n              at * le - ge * Ie - ce * se,\n              Ke,\n              Pe\n            ), v.set(ie, S - 1, ct[0]), v.set(ie, S, ct[1]), Math.abs(at) > Math.abs(ge) + Math.abs(ce) ? (v.set(\n              ie + 1,\n              S - 1,\n              (-se - rt * v.get(ie, S - 1) + ce * v.get(ie, S)) / at\n            ), v.set(\n              ie + 1,\n              S,\n              (-Ie - rt * v.get(ie, S) - ce * v.get(ie, S - 1)) / at\n            )) : (ct = it(\n              -we - gt * v.get(ie, S - 1),\n              -le - gt * v.get(ie, S),\n              ge,\n              ce\n            ), v.set(ie + 1, S - 1, ct[0]), v.set(ie + 1, S, ct[1]))), dt = Math.max(Math.abs(v.get(ie, S - 1)), Math.abs(v.get(ie, S))), X * dt * dt > 1)\n              for (Ce = ie; Ce <= S; Ce++)\n                v.set(Ce, S - 1, v.get(Ce, S - 1) / dt), v.set(Ce, S, v.get(Ce, S) / dt);\n          }\n      for (ie = 0; ie < M; ie++)\n        if (ie < L || ie > q)\n          for (Ce = ie; Ce < M; Ce++)\n            u.set(ie, Ce, v.get(ie, Ce));\n      for (Ce = M - 1; Ce >= L; Ce--)\n        for (ie = L; ie <= q; ie++) {\n          for (ge = 0, Xe = L; Xe <= Math.min(Ce, q); Xe++)\n            ge = ge + u.get(ie, Xe) * v.get(Xe, Ce);\n          u.set(ie, Ce, ge);\n        }\n    }\n  }\n  function it(M, _, d, u) {\n    let v, S;\n    return Math.abs(d) > Math.abs(u) ? (v = u / d, S = d + v * u, [(M + v * _) / S, (_ - v * M) / S]) : (v = d / u, S = u + v * d, [(v * M + _) / S, (v * _ - M) / S]);\n  }\n  class I {\n    constructor(_) {\n      if (_ = he.checkMatrix(_), !_.isSymmetric())\n        throw new Error(\"Matrix is not symmetric\");\n      let d = _, u = d.rows, v = new re(u, u), S = !0, L, q, X;\n      for (q = 0; q < u; q++) {\n        let j = 0;\n        for (X = 0; X < q; X++) {\n          let ae = 0;\n          for (L = 0; L < X; L++)\n            ae += v.get(X, L) * v.get(q, L);\n          ae = (d.get(q, X) - ae) / v.get(X, X), v.set(q, X, ae), j = j + ae * ae;\n        }\n        for (j = d.get(q, q) - j, S && (S = j > 0), v.set(q, q, Math.sqrt(Math.max(j, 0))), X = q + 1; X < u; X++)\n          v.set(q, X, 0);\n      }\n      this.L = v, this.positiveDefinite = S;\n    }\n    isPositiveDefinite() {\n      return this.positiveDefinite;\n    }\n    solve(_) {\n      _ = he.checkMatrix(_);\n      let d = this.L, u = d.rows;\n      if (_.rows !== u)\n        throw new Error(\"Matrix dimensions do not match\");\n      if (this.isPositiveDefinite() === !1)\n        throw new Error(\"Matrix is not positive definite\");\n      let v = _.columns, S = _.clone(), L, q, X;\n      for (X = 0; X < u; X++)\n        for (q = 0; q < v; q++) {\n          for (L = 0; L < X; L++)\n            S.set(X, q, S.get(X, q) - S.get(L, q) * d.get(X, L));\n          S.set(X, q, S.get(X, q) / d.get(X, X));\n        }\n      for (X = u - 1; X >= 0; X--)\n        for (q = 0; q < v; q++) {\n          for (L = X + 1; L < u; L++)\n            S.set(X, q, S.get(X, q) - S.get(L, q) * d.get(L, X));\n          S.set(X, q, S.get(X, q) / d.get(X, X));\n        }\n      return S;\n    }\n    get lowerTriangularMatrix() {\n      return this.L;\n    }\n  }\n  class fe {\n    constructor(_, d = {}) {\n      _ = he.checkMatrix(_);\n      let { Y: u } = d;\n      const {\n        scaleScores: v = !1,\n        maxIterations: S = 1e3,\n        terminationCriteria: L = 1e-10\n      } = d;\n      let q;\n      if (u) {\n        if (e.isAnyArray(u) && typeof u[0] == \"number\" ? u = re.columnVector(u) : u = he.checkMatrix(u), u.rows !== _.rows)\n          throw new Error(\"Y should have the same number of rows as X\");\n        q = u.getColumnVector(0);\n      } else\n        q = _.getColumnVector(0);\n      let X = 1, j, ae, K, ce;\n      for (let we = 0; we < S && X > L; we++)\n        K = _.transpose().mmul(q).div(q.transpose().mmul(q).get(0, 0)), K = K.div(K.norm()), j = _.mmul(K).div(K.transpose().mmul(K).get(0, 0)), we > 0 && (X = j.clone().sub(ce).pow(2).sum()), ce = j.clone(), u ? (ae = u.transpose().mmul(j).div(j.transpose().mmul(j).get(0, 0)), ae = ae.div(ae.norm()), q = u.mmul(ae).div(ae.transpose().mmul(ae).get(0, 0))) : q = j;\n      if (u) {\n        let we = _.transpose().mmul(j).div(j.transpose().mmul(j).get(0, 0));\n        we = we.div(we.norm());\n        let le = _.clone().sub(j.clone().mmul(we.transpose())), ge = q.transpose().mmul(j).div(j.transpose().mmul(j).get(0, 0)), Ue = u.clone().sub(\n          j.clone().mulS(ge.get(0, 0)).mmul(ae.transpose())\n        );\n        this.t = j, this.p = we.transpose(), this.w = K.transpose(), this.q = ae, this.u = q, this.s = j.transpose().mmul(j), this.xResidual = le, this.yResidual = Ue, this.betas = ge;\n      } else\n        this.w = K.transpose(), this.s = j.transpose().mmul(j).sqrt(), v ? this.t = j.clone().div(this.s.get(0, 0)) : this.t = j, this.xResidual = _.sub(j.mmul(K.transpose()));\n    }\n  }\n  return matrix$1.AbstractMatrix = _e, matrix$1.CHO = I, matrix$1.CholeskyDecomposition = I, matrix$1.DistanceMatrix = Fe, matrix$1.EVD = ke, matrix$1.EigenvalueDecomposition = ke, matrix$1.LU = Ze, matrix$1.LuDecomposition = Ze, matrix$1.Matrix = re, matrix$1.MatrixColumnSelectionView = Je, matrix$1.MatrixColumnView = Ye, matrix$1.MatrixFlipColumnView = et, matrix$1.MatrixFlipRowView = Ve, matrix$1.MatrixRowSelectionView = qe, matrix$1.MatrixRowView = tt, matrix$1.MatrixSelectionView = Re, matrix$1.MatrixSubView = nt, matrix$1.MatrixTransposeView = Ge, matrix$1.NIPALS = fe, matrix$1.Nipals = fe, matrix$1.QR = De, matrix$1.QrDecomposition = De, matrix$1.SVD = lt, matrix$1.SingularValueDecomposition = lt, matrix$1.SymmetricMatrix = Te, matrix$1.WrapperMatrix1D = Ne, matrix$1.WrapperMatrix2D = he, matrix$1.correlation = xe, matrix$1.covariance = ue, matrix$1.default = re, matrix$1.determinant = ze, matrix$1.inverse = ot, matrix$1.linearDependencies = st, matrix$1.pseudoInverse = Z, matrix$1.solve = Le, matrix$1.wrap = Qe, matrix$1;\n}\nvar matrixExports = /* @__PURE__ */ requireMatrix();\nconst matrix = /* @__PURE__ */ getDefaultExportFromCjs(matrixExports), Matrix$1 = matrixExports.Matrix, SVD = matrixExports.SVD, SingularValueDecomposition = matrixExports.SingularValueDecomposition;\nmatrix.Matrix ? matrix.Matrix : matrixExports.Matrix;\nconst inverse = matrixExports.inverse, solve = matrixExports.solve;\nfunction getSeparatedKernel(e) {\n  const i = new SVD(e, { autoTranspose: !0 });\n  if (i.rank !== 1) return null;\n  const t = Math.sqrt(i.s[0]), r = i.U.to2DArray().map((a) => a[0] * t), n = i.V.to2DArray().map((a) => a[0] * t);\n  return [r, n];\n}\nfunction convolution(e, i = {}) {\n  let {\n    channels: t,\n    bitDepth: r,\n    normalize: n = !1,\n    divisor: a = 1,\n    border: s = \"copy\",\n    algorithm: o = \"auto\"\n  } = i, h = {};\n  r && (h.bitDepth = r);\n  let l = Image.createFrom(this, h);\n  if (t = validateArrayOfChannels(this, t), o !== \"separable\")\n    ({ kernel: e } = validateKernel(e));\n  else if (!Array.isArray(e) || e.length !== 2)\n    throw new RangeError(\n      \"separable convolution requires two arrays of numbers to represent the kernel\"\n    );\n  if (o === \"auto\") {\n    let $ = getSeparatedKernel(e);\n    $ !== null ? (o = \"separable\", e = $) : (e.length > 9 || e[0].length > 9) && this.width <= 4096 && this.height <= 4096 ? o = \"fft\" : o = \"direct\";\n  }\n  let f, b;\n  o === \"separable\" ? (f = Math.floor(e[0].length / 2), b = Math.floor(e[1].length / 2)) : (f = Math.floor(e.length / 2), b = Math.floor(e[0].length / 2));\n  let w = l.isClamped, g = new Array(this.height * this.width), E, k, A, T, C, D;\n  for (T = 0; T < t.length; T++) {\n    for (C = t[T], A = 0; A < this.height; A++)\n      for (k = 0; k < this.width; k++)\n        E = A * this.width + k, g[E] = this.data[E * this.channels + C];\n    if (o === \"direct\")\n      D = srcExports$1.direct(g, e, {\n        rows: this.height,\n        cols: this.width,\n        normalize: n,\n        divisor: a\n      });\n    else if (o === \"separable\") {\n      if (D = convolutionSeparable(\n        g,\n        e,\n        this.width,\n        this.height\n      ), n) {\n        a = 0;\n        for (let $ = 0; $ < e[0].length; $++)\n          for (let P = 0; P < e[1].length; P++)\n            a += e[0][$] * e[1][P];\n      }\n      if (a !== 1)\n        for (let $ = 0; $ < D.length; $++)\n          D[$] /= a;\n    } else\n      D = srcExports$1.fft(g, e, {\n        rows: this.height,\n        cols: this.width,\n        normalize: n,\n        divisor: a\n      });\n    for (A = 0; A < this.height; A++)\n      for (k = 0; k < this.width; k++)\n        E = A * this.width + k, w ? l.data[E * this.channels + C] = clamp(\n          D[E],\n          l\n        ) : l.data[E * this.channels + C] = D[E];\n  }\n  if (this.alpha && !t.includes(this.channels))\n    for (k = this.components; k < this.data.length; k = k + this.channels)\n      l.data[k] = this.data[k];\n  return s !== \"periodic\" && l.setBorder({ size: [b, f], algorithm: s }), l;\n}\nfunction gradientFilter(e = {}) {\n  let {\n    direction: i = \"xy\",\n    border: t = \"copy\",\n    kernelX: r,\n    kernelY: n,\n    channels: a,\n    bitDepth: s = this.bitDepth\n  } = e;\n  switch (this.checkProcessable(\"gradientFilter\", {\n    bitDepth: [8, 16]\n  }), i) {\n    case \"x\":\n      if (!r) throw new Error(\"kernelX option is missing\");\n      return convolution.call(this, r, {\n        channels: a,\n        border: t,\n        bitDepth: s\n      });\n    case \"y\":\n      if (!n) throw new Error(\"kernelY option is missing\");\n      return convolution.call(this, n, {\n        channels: a,\n        border: t,\n        bitDepth: s\n      });\n    case \"xy\": {\n      if (!r) throw new Error(\"kernelX option is missing\");\n      if (!n) throw new Error(\"kernelY option is missing\");\n      const o = convolution.call(this, r, {\n        channels: a,\n        border: t,\n        bitDepth: 32\n      }), h = convolution.call(this, n, {\n        channels: a,\n        border: t,\n        bitDepth: 32\n      });\n      return o.hypotenuse(h, { bitDepth: s, channels: a });\n    }\n    default:\n      throw new Error(`Unknown parameter direction: ${i}`);\n  }\n}\nfunction sobelFilter(e) {\n  return gradientFilter.call(\n    this,\n    Object.assign({}, e, {\n      kernelX: SOBEL_X,\n      kernelY: SOBEL_Y\n    })\n  );\n}\nfunction scharrFilter(e) {\n  return gradientFilter.call(\n    this,\n    Object.assign({}, e, {\n      kernelX: SCHARR_X,\n      kernelY: SCHARR_Y\n    })\n  );\n}\nvar newArray_1, hasRequiredNewArray;\nfunction requireNewArray() {\n  if (hasRequiredNewArray) return newArray_1;\n  hasRequiredNewArray = 1, newArray_1 = e;\n  function e(i, t) {\n    i = i || 0;\n    for (var r = new Array(i), n = 0; n < i; n++)\n      r[n] = t;\n    return r;\n  }\n  return newArray_1;\n}\nvar newArrayExports = requireNewArray();\nconst newArray = /* @__PURE__ */ getDefaultExportFromCjs(newArrayExports);\nfunction level(e = {}) {\n  let {\n    algorithm: i = \"range\",\n    channels: t,\n    min: r = this.min,\n    max: n = this.max\n  } = e;\n  switch (this.checkProcessable(\"level\", {\n    bitDepth: [8, 16, 32]\n  }), t = validateArrayOfChannels(this, { channels: t }), t.length !== this.channel && (Array.isArray(r) && r.length === this.channels && (r = r.filter((a, s) => t.includes(s))), Array.isArray(n) && n.length === this.channels && (n = n.filter((a, s) => t.includes(s)))), i) {\n    case \"range\":\n      r < 0 && (r = 0), n > this.maxValue && (n = this.maxValue), Array.isArray(r) || (r = newArray(t.length, r)), Array.isArray(n) || (n = newArray(t.length, n)), processImage(this, r, n, t);\n      break;\n    default:\n      throw new Error(`level: algorithm not implement: ${i}`);\n  }\n  return this;\n}\nfunction processImage(e, i, t, r) {\n  let n = 1e-5, a = new Array(r.length);\n  for (let s = 0; s < r.length; s++)\n    i[s] === 0 && t[s] === e.maxValue || t[s] === i[s] ? a[s] = 0 : a[s] = (e.maxValue + 1 - n) / (t[s] - i[s]), i[s] += (0.5 - n / 2) / a[s];\n  for (let s = 0; s < r.length; s++) {\n    let o = r[s];\n    if (a[s] !== 0)\n      for (let h = 0; h < e.data.length; h += e.channels)\n        e.data[h + o] = Math.min(\n          Math.max(0, (e.data[h + o] - i[s]) * a[s] + 0.5 | 0),\n          e.maxValue\n        );\n  }\n}\nvar isArrayType, hasRequiredIsArrayType;\nfunction requireIsArrayType() {\n  if (hasRequiredIsArrayType) return isArrayType;\n  hasRequiredIsArrayType = 1;\n  var e = Object.prototype.toString;\n  return isArrayType = function(t) {\n    return e.call(t).substr(-6, 5) === \"Array\";\n  }, isArrayType;\n}\nvar isArrayTypeExports = requireIsArrayType();\nconst isArray = /* @__PURE__ */ getDefaultExportFromCjs(isArrayTypeExports);\nfunction checkNumberArray(e) {\n  if (isNaN(e)) {\n    if (e instanceof Image)\n      return e.data;\n    if (!isArray(e))\n      throw new Error(\n        \"checkNumberArray: the value should be either a number, array or Image\"\n      );\n    return e;\n  } else {\n    if (e <= 0)\n      throw new Error(\"checkNumberArray: the value must be greater than 0\");\n    return e;\n  }\n}\nfunction add(e, i = {}) {\n  let { channels: t } = i;\n  if (this.checkProcessable(\"add\", {\n    bitDepth: [8, 16]\n  }), t = validateArrayOfChannels(this, { channels: t }), e = checkNumberArray(e), isNaN(e)) {\n    if (this.data.length !== e.length)\n      throw new Error(\"add: the data size is different\");\n    for (let r = 0; r < t.length; r++) {\n      let n = t[r];\n      for (let a = 0; a < this.data.length; a += this.channels)\n        this.data[a + n] = Math.max(\n          0,\n          Math.min(this.maxValue, this.data[a + n] + e[a + n] >> 0)\n        );\n    }\n  } else\n    for (let r = 0; r < t.length; r++) {\n      let n = t[r];\n      for (let a = 0; a < this.data.length; a += this.channels)\n        this.data[a + n] = Math.min(\n          this.maxValue,\n          this.data[a + n] + e >> 0\n        );\n    }\n  return this;\n}\nfunction subtract(e, i = {}) {\n  let { channels: t } = i;\n  if (this.checkProcessable(\"subtract\", {\n    bitDepth: [8, 16]\n  }), t = validateArrayOfChannels(this, { channels: t }), e = checkNumberArray(e), isNaN(e)) {\n    if (this.data.length !== e.length)\n      throw new Error(\"subtract: the data size is different\");\n    for (let r = 0; r < t.length; r++) {\n      let n = t[r];\n      for (let a = 0; a < this.data.length; a += this.channels)\n        this.data[a + n] = Math.max(\n          0,\n          Math.min(this.maxValue, this.data[a + n] - e[a + n] >> 0)\n        );\n    }\n  } else\n    for (let r = 0; r < t.length; r++) {\n      let n = t[r];\n      for (let a = 0; a < this.data.length; a += this.channels)\n        this.data[a + n] = Math.max(0, this.data[a + n] - e >> 0);\n    }\n  return this;\n}\nfunction subtractImage(e, i = {}) {\n  let { channels: t, absolute: r = !1 } = i;\n  if (this.checkProcessable(\"subtractImage\", {\n    bitDepth: [8, 16]\n  }), this.width !== e.width || this.height !== e.height)\n    throw new Error(\"subtractImage: both images must have the same size\");\n  if (this.alpha !== e.alpha || this.bitDepth !== e.bitDepth)\n    throw new Error(\n      \"subtractImage: both images must have the same alpha and bitDepth\"\n    );\n  if (this.channels !== e.channels)\n    throw new Error(\n      \"subtractImage: both images must have the same number of channels\"\n    );\n  let n = this.clone();\n  t = validateArrayOfChannels(this, { channels: t });\n  for (let a = 0; a < t.length; a++) {\n    let s = t[a];\n    for (let o = s; o < this.data.length; o += this.channels) {\n      let h = this.data[o] - e.data[o];\n      r ? n.data[o] = Math.abs(h) : n.data[o] = Math.max(h, 0);\n    }\n  }\n  return n;\n}\nfunction hypotenuse(e, i = {}) {\n  let { bitDepth: t = this.bitDepth, channels: r } = i;\n  if (this.checkProcessable(\"hypotenuse\", {\n    bitDepth: [8, 16, 32]\n  }), this.width !== e.width || this.height !== e.height)\n    throw new Error(\"hypotenuse: both images must have the same size\");\n  if (this.alpha !== e.alpha || this.bitDepth !== e.bitDepth)\n    throw new Error(\n      \"hypotenuse: both images must have the same alpha and bitDepth\"\n    );\n  if (this.channels !== e.channels)\n    throw new Error(\n      \"hypotenuse: both images must have the same number of channels\"\n    );\n  let n = Image.createFrom(this, { bitDepth: t });\n  r = validateArrayOfChannels(this, { channels: r });\n  let a = n.isClamped;\n  for (let s = 0; s < r.length; s++) {\n    let o = r[s];\n    for (let h = o; h < this.data.length; h += this.channels) {\n      let l = Math.hypot(this.data[h], e.data[h]);\n      a ? n.data[h] = Math.min(\n        Math.max(Math.round(l), 0),\n        n.maxValue\n      ) : n.data[h] = l;\n    }\n  }\n  return n;\n}\nfunction multiply(e, i = {}) {\n  let { channels: t } = i;\n  if (this.checkProcessable(\"multiply\", {\n    bitDepth: [8, 16]\n  }), e <= 0)\n    throw new Error(\"multiply: the value must be greater than 0\");\n  if (t = validateArrayOfChannels(this, { channels: t }), e = checkNumberArray(e), isNaN(e)) {\n    if (this.data.length !== e.length)\n      throw new Error(\"multiply: the data size is different\");\n    for (let r = 0; r < t.length; r++) {\n      let n = t[r];\n      for (let a = 0; a < this.data.length; a += this.channels)\n        this.data[a + n] = Math.max(\n          0,\n          Math.min(this.maxValue, this.data[a + n] * e[a + n] >> 0)\n        );\n    }\n  } else\n    for (let r = 0; r < t.length; r++) {\n      let n = t[r];\n      for (let a = 0; a < this.data.length; a += this.channels)\n        this.data[a + n] = Math.min(\n          this.maxValue,\n          this.data[a + n] * e >> 0\n        );\n    }\n  return this;\n}\nfunction divide(e, i = {}) {\n  let { channels: t } = i;\n  if (this.checkProcessable(\"divide\", {\n    bitDepth: [8, 16]\n  }), t = validateArrayOfChannels(this, { channels: t }), e = checkNumberArray(e), isNaN(e)) {\n    if (this.data.length !== e.length)\n      throw new Error(\"divide: the: the data size is different\");\n    for (let r = 0; r < t.length; r++) {\n      let n = t[r];\n      for (let a = 0; a < this.data.length; a += this.channels)\n        this.data[a + n] = Math.max(\n          0,\n          Math.min(this.maxValue, this.data[a + n] / e[a + n] >> 0)\n        );\n    }\n  } else\n    for (let r = 0; r < t.length; r++) {\n      let n = t[r];\n      for (let a = 0; a < this.data.length; a += this.channels)\n        this.data[a + n] = Math.min(\n          this.maxValue,\n          this.data[a + n] / e >> 0\n        );\n    }\n  return this;\n}\nclass BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression)\n      throw new Error(\"BaseRegression must be subclassed\");\n  }\n  predict(i) {\n    if (typeof i == \"number\")\n      return this._predict(i);\n    if (isAnyArray(i)) {\n      const t = [];\n      for (let r = 0; r < i.length; r++)\n        t.push(this._predict(i[r]));\n      return t;\n    } else\n      throw new TypeError(\"x must be a number or array\");\n  }\n  _predict() {\n    throw new Error(\"_predict must be implemented\");\n  }\n  train() {\n  }\n  toString() {\n    return \"\";\n  }\n  toLaTeX() {\n    return \"\";\n  }\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(i, t) {\n    if (!isAnyArray(i) || !isAnyArray(t) || i.length !== t.length)\n      throw new Error(\"x and y must be arrays of the same length\");\n    const r = i.length, n = new Array(r);\n    for (let g = 0; g < r; g++)\n      n[g] = this._predict(i[g]);\n    let a = 0, s = 0, o = 0, h = 0, l = 0, f = 0, b = 0;\n    for (let g = 0; g < r; g++)\n      a += n[g], s += t[g], l += n[g] * n[g], f += t[g] * t[g], b += n[g] * t[g], t[g] !== 0 && (o += (t[g] - n[g]) * (t[g] - n[g]) / t[g]), h += (t[g] - n[g]) * (t[g] - n[g]);\n    const w = (r * b - a * s) / Math.sqrt((r * l - a * a) * (r * f - s * s));\n    return {\n      r: w,\n      r2: w * w,\n      chi2: o,\n      rmsd: Math.sqrt(h / r)\n    };\n  }\n}\nfunction squaredEuclidean(e, i) {\n  let t = 0;\n  for (let r = 0; r < e.length; r++)\n    t += (e[r] - i[r]) * (e[r] - i[r]);\n  return t;\n}\nfunction euclidean(e, i) {\n  return Math.sqrt(squaredEuclidean(e, i));\n}\nconst euclidean$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  euclidean,\n  squaredEuclidean\n}, Symbol.toStringTag, { value: \"Module\" })), require$$0 = /* @__PURE__ */ getAugmentedNamespace(euclidean$1);\nvar gaussianKernel, hasRequiredGaussianKernel;\nfunction requireGaussianKernel() {\n  if (hasRequiredGaussianKernel) return gaussianKernel;\n  hasRequiredGaussianKernel = 1;\n  const { squaredEuclidean: e } = require$$0, i = {\n    sigma: 1\n  };\n  class t {\n    constructor(n) {\n      n = Object.assign({}, i, n), this.sigma = n.sigma, this.divisor = 2 * n.sigma * n.sigma;\n    }\n    compute(n, a) {\n      const s = e(n, a);\n      return Math.exp(-s / this.divisor);\n    }\n  }\n  return gaussianKernel = t, gaussianKernel;\n}\nvar polynomialKernel, hasRequiredPolynomialKernel;\nfunction requirePolynomialKernel() {\n  if (hasRequiredPolynomialKernel) return polynomialKernel;\n  hasRequiredPolynomialKernel = 1;\n  const e = {\n    degree: 1,\n    constant: 1,\n    scale: 1\n  };\n  class i {\n    constructor(r) {\n      r = Object.assign({}, e, r), this.degree = r.degree, this.constant = r.constant, this.scale = r.scale;\n    }\n    compute(r, n) {\n      for (var a = 0, s = 0; s < r.length; s++)\n        a += r[s] * n[s];\n      return Math.pow(this.scale * a + this.constant, this.degree);\n    }\n  }\n  return polynomialKernel = i, polynomialKernel;\n}\nvar sigmoidKernel, hasRequiredSigmoidKernel;\nfunction requireSigmoidKernel() {\n  if (hasRequiredSigmoidKernel) return sigmoidKernel;\n  hasRequiredSigmoidKernel = 1;\n  const e = {\n    alpha: 0.01,\n    constant: -Math.E\n  };\n  class i {\n    constructor(r) {\n      r = Object.assign({}, e, r), this.alpha = r.alpha, this.constant = r.constant;\n    }\n    compute(r, n) {\n      for (var a = 0, s = 0; s < r.length; s++)\n        a += r[s] * n[s];\n      return Math.tanh(this.alpha * a + this.constant);\n    }\n  }\n  return sigmoidKernel = i, sigmoidKernel;\n}\nvar anovaKernel, hasRequiredAnovaKernel;\nfunction requireAnovaKernel() {\n  if (hasRequiredAnovaKernel) return anovaKernel;\n  hasRequiredAnovaKernel = 1;\n  const e = {\n    sigma: 1,\n    degree: 1\n  };\n  class i {\n    constructor(r) {\n      r = Object.assign({}, e, r), this.sigma = r.sigma, this.degree = r.degree;\n    }\n    compute(r, n) {\n      for (var a = 0, s = Math.min(r.length, n.length), o = 1; o <= s; ++o)\n        a += Math.pow(\n          Math.exp(\n            -this.sigma * Math.pow(Math.pow(r[o - 1], o) - Math.pow(n[o - 1], o), 2)\n          ),\n          this.degree\n        );\n      return a;\n    }\n  }\n  return anovaKernel = i, anovaKernel;\n}\nvar cauchyKernel, hasRequiredCauchyKernel;\nfunction requireCauchyKernel() {\n  if (hasRequiredCauchyKernel) return cauchyKernel;\n  hasRequiredCauchyKernel = 1;\n  const { squaredEuclidean: e } = require$$0, i = {\n    sigma: 1\n  };\n  class t {\n    constructor(n) {\n      n = Object.assign({}, i, n), this.sigma = n.sigma;\n    }\n    compute(n, a) {\n      return 1 / (1 + e(n, a) / (this.sigma * this.sigma));\n    }\n  }\n  return cauchyKernel = t, cauchyKernel;\n}\nvar exponentialKernel, hasRequiredExponentialKernel;\nfunction requireExponentialKernel() {\n  if (hasRequiredExponentialKernel) return exponentialKernel;\n  hasRequiredExponentialKernel = 1;\n  const { euclidean: e } = require$$0, i = {\n    sigma: 1\n  };\n  class t {\n    constructor(n) {\n      n = Object.assign({}, i, n), this.sigma = n.sigma, this.divisor = 2 * n.sigma * n.sigma;\n    }\n    compute(n, a) {\n      const s = e(n, a);\n      return Math.exp(-s / this.divisor);\n    }\n  }\n  return exponentialKernel = t, exponentialKernel;\n}\nvar histogramIntersectionKernel, hasRequiredHistogramIntersectionKernel;\nfunction requireHistogramIntersectionKernel() {\n  if (hasRequiredHistogramIntersectionKernel) return histogramIntersectionKernel;\n  hasRequiredHistogramIntersectionKernel = 1;\n  class e {\n    compute(t, r) {\n      for (var n = Math.min(t.length, r.length), a = 0, s = 0; s < n; ++s)\n        a += Math.min(t[s], r[s]);\n      return a;\n    }\n  }\n  return histogramIntersectionKernel = e, histogramIntersectionKernel;\n}\nvar laplacianKernel, hasRequiredLaplacianKernel;\nfunction requireLaplacianKernel() {\n  if (hasRequiredLaplacianKernel) return laplacianKernel;\n  hasRequiredLaplacianKernel = 1;\n  const { euclidean: e } = require$$0, i = {\n    sigma: 1\n  };\n  class t {\n    constructor(n) {\n      n = Object.assign({}, i, n), this.sigma = n.sigma;\n    }\n    compute(n, a) {\n      const s = e(n, a);\n      return Math.exp(-s / this.sigma);\n    }\n  }\n  return laplacianKernel = t, laplacianKernel;\n}\nvar multiquadraticKernel, hasRequiredMultiquadraticKernel;\nfunction requireMultiquadraticKernel() {\n  if (hasRequiredMultiquadraticKernel) return multiquadraticKernel;\n  hasRequiredMultiquadraticKernel = 1;\n  const { squaredEuclidean: e } = require$$0, i = {\n    constant: 1\n  };\n  class t {\n    constructor(n) {\n      n = Object.assign({}, i, n), this.constant = n.constant;\n    }\n    compute(n, a) {\n      return Math.sqrt(e(n, a) + this.constant * this.constant);\n    }\n  }\n  return multiquadraticKernel = t, multiquadraticKernel;\n}\nvar rationalQuadraticKernel, hasRequiredRationalQuadraticKernel;\nfunction requireRationalQuadraticKernel() {\n  if (hasRequiredRationalQuadraticKernel) return rationalQuadraticKernel;\n  hasRequiredRationalQuadraticKernel = 1;\n  const { squaredEuclidean: e } = require$$0, i = {\n    constant: 1\n  };\n  class t {\n    constructor(n) {\n      n = Object.assign({}, i, n), this.constant = n.constant;\n    }\n    compute(n, a) {\n      const s = e(n, a);\n      return 1 - s / (s + this.constant);\n    }\n  }\n  return rationalQuadraticKernel = t, rationalQuadraticKernel;\n}\nvar kernel, hasRequiredKernel;\nfunction requireKernel() {\n  if (hasRequiredKernel) return kernel;\n  hasRequiredKernel = 1;\n  const { Matrix: e, MatrixTransposeView: i } = /* @__PURE__ */ requireMatrix(), t = requireGaussianKernel(), r = requirePolynomialKernel(), n = requireSigmoidKernel(), a = requireAnovaKernel(), s = requireCauchyKernel(), o = requireExponentialKernel(), h = requireHistogramIntersectionKernel(), l = requireLaplacianKernel(), f = requireMultiquadraticKernel(), b = requireRationalQuadraticKernel(), w = {\n    gaussian: t,\n    rbf: t,\n    polynomial: r,\n    poly: r,\n    anova: a,\n    cauchy: s,\n    exponential: o,\n    histogram: h,\n    min: h,\n    laplacian: l,\n    multiquadratic: f,\n    rational: b,\n    sigmoid: n,\n    mlp: n\n  };\n  class g {\n    constructor(k, A) {\n      if (this.kernelType = k, k !== \"linear\")\n        if (typeof k == \"string\") {\n          k = k.toLowerCase();\n          var T = w[k];\n          if (T)\n            this.kernelFunction = new T(A);\n          else\n            throw new Error(`unsupported kernel type: ${k}`);\n        } else if (typeof k == \"object\" && typeof k.compute == \"function\")\n          this.kernelFunction = k;\n        else\n          throw new TypeError(\n            \"first argument must be a valid kernel type or instance\"\n          );\n    }\n    compute(k, A) {\n      if (k = e.checkMatrix(k), A === void 0 ? A = k : A = e.checkMatrix(A), this.kernelType === \"linear\")\n        return k.mmul(new i(A));\n      const T = new e(k.rows, A.rows);\n      if (k === A)\n        for (let C = 0; C < k.rows; C++)\n          for (let D = C; D < k.rows; D++) {\n            const $ = this.kernelFunction.compute(\n              k.getRow(C),\n              k.getRow(D)\n            );\n            T.set(C, D, $), T.set(D, C, $);\n          }\n      else\n        for (let C = 0; C < k.rows; C++)\n          for (let D = 0; D < A.rows; D++)\n            T.set(\n              C,\n              D,\n              this.kernelFunction.compute(k.getRow(C), A.getRow(D))\n            );\n      return T;\n    }\n  }\n  return kernel = g, kernel;\n}\nvar kernelExports = requireKernel();\nconst Kernel = /* @__PURE__ */ getDefaultExportFromCjs(kernelExports), defaultOptions$2 = {\n  lambda: 0.1,\n  kernelType: \"gaussian\",\n  kernelOptions: {},\n  computeCoefficient: !1\n};\nclass KernelRidgeRegression extends BaseRegression {\n  constructor(i, t, r) {\n    if (super(), i === !0)\n      this.alpha = t.alpha, this.inputs = t.inputs, this.kernelType = t.kernelType, this.kernelOptions = t.kernelOptions, this.kernel = new Kernel(t.kernelType, t.kernelOptions);\n    else {\n      i = Matrix$1.checkMatrix(i), r = Object.assign({}, defaultOptions$2, r);\n      const n = new Kernel(\n        r.kernelType,\n        r.kernelOptions\n      ), a = n.compute(i), s = i.rows;\n      a.add(Matrix$1.eye(s, s).mul(r.lambda)), this.alpha = solve(a, t), this.inputs = i, this.kernelType = r.kernelType, this.kernelOptions = r.kernelOptions, this.kernel = n;\n    }\n  }\n  _predict(i) {\n    return this.kernel.compute([i], this.inputs).mmul(this.alpha).getRow(0);\n  }\n  toJSON() {\n    return {\n      name: \"kernelRidgeRegression\",\n      alpha: this.alpha,\n      inputs: this.inputs,\n      kernelType: this.kernelType,\n      kernelOptions: this.kernelOptions\n    };\n  }\n  static load(i) {\n    if (i.name !== \"kernelRidgeRegression\")\n      throw new TypeError(\"not a KRR model\");\n    return new KernelRidgeRegression(!0, i);\n  }\n}\nfunction background$1(e, i, t) {\n  const r = new KernelRidgeRegression(e, i, t), n = new Array(this.size);\n  for (let o = 0; o < this.width; o++)\n    for (let h = 0; h < this.height; h++)\n      n[h * this.width + o] = [o, h];\n  const a = r.predict(n), s = Image.createFrom(this);\n  for (let o = 0; o < this.size; o++)\n    s.data[o] = Math.min(this.maxValue, Math.max(0, a[o][0]));\n  return s;\n}\nfunction dilate(e = {}) {\n  let {\n    kernel: i = [\n      [1, 1, 1],\n      [1, 1, 1],\n      [1, 1, 1]\n    ],\n    iterations: t = 1\n  } = e;\n  if (this.checkProcessable(\"dilate\", {\n    bitDepth: [1, 8, 16],\n    components: 1,\n    alpha: 0\n  }), i.columns % 2 === 0 || i.rows % 2 === 0)\n    throw new TypeError(\n      \"dilate: The number of rows and columns of the kernel must be odd\"\n    );\n  let r = !0;\n  e: for (const a of i)\n    for (const s of a)\n      if (s !== 1) {\n        r = !1;\n        break e;\n      }\n  let n = this;\n  for (let a = 0; a < t; a++)\n    if (this.bitDepth === 1)\n      if (r) {\n        const s = n.clone();\n        n = dilateOnceBinaryOnlyOnes(\n          n,\n          s,\n          i.length,\n          i[0].length\n        );\n      } else {\n        const s = Image.createFrom(n);\n        n = dilateOnceBinary(n, s, i);\n      }\n    else if (r) {\n      const s = Image.createFrom(n);\n      n = dilateOnceGreyOnlyOnes(\n        n,\n        s,\n        i.length,\n        i[0].length\n      );\n    } else {\n      const s = Image.createFrom(n);\n      n = dilateOnceGrey(n, s, i);\n    }\n  return n;\n}\nfunction dilateOnceGrey(e, i, t) {\n  const r = t.length, n = t[0].length;\n  let a = (r - 1) / 2, s = (n - 1) / 2;\n  for (let o = 0; o < e.height; o++)\n    for (let h = 0; h < e.width; h++) {\n      let l = 0;\n      for (let f = 0; f < n; f++)\n        for (let b = 0; b < r; b++) {\n          if (t[b][f] !== 1) continue;\n          let w = b - a + h, g = f - s + o;\n          if (w < 0 || g < 0 || w >= e.width || g >= e.height) continue;\n          const E = e.getValueXY(w, g, 0);\n          E > l && (l = E);\n        }\n      i.setValueXY(h, o, 0, l);\n    }\n  return i;\n}\nfunction dilateOnceGreyOnlyOnes(e, i, t, r) {\n  const n = (t - 1) / 2, a = (r - 1) / 2, s = [];\n  for (let o = 0; o < e.width; o++)\n    s.push(0);\n  for (let o = 0; o < e.height; o++) {\n    for (let h = 0; h < e.width; h++) {\n      let l = 0;\n      for (let f = Math.max(0, o - a); f < Math.min(e.height, o + a + 1); f++) {\n        const b = e.getValueXY(h, f, 0);\n        b > l && (l = b);\n      }\n      s[h] = l;\n    }\n    for (let h = 0; h < e.width; h++) {\n      let l = 0;\n      for (let f = Math.max(0, h - n); f < Math.min(e.width, h + n + 1); f++)\n        s[f] > l && (l = s[f]);\n      i.setValueXY(h, o, 0, l);\n    }\n  }\n  return i;\n}\nfunction dilateOnceBinary(e, i, t) {\n  const r = t.length, n = t[0].length;\n  let a = (r - 1) / 2, s = (n - 1) / 2;\n  for (let o = 0; o < e.height; o++)\n    for (let h = 0; h < e.width; h++) {\n      let l = 0;\n      e: for (let f = 0; f < n; f++)\n        for (let b = 0; b < r; b++) {\n          if (t[b][f] !== 1) continue;\n          let w = b - a + h, g = f - s + o;\n          if (g < 0 || w < 0 || w >= e.width || g >= e.height) continue;\n          if (e.getBitXY(w, g) === 1) {\n            l = 1;\n            break e;\n          }\n        }\n      l === 1 && i.setBitXY(h, o);\n    }\n  return i;\n}\nfunction dilateOnceBinaryOnlyOnes(e, i, t, r) {\n  const n = (t - 1) / 2, a = (r - 1) / 2, s = [];\n  for (let o = 0; o < e.width; o++)\n    s.push(1);\n  for (let o = 0; o < e.height; o++) {\n    for (let h = 0; h < e.width; h++) {\n      s[h] = 0;\n      for (let l = Math.max(0, o - a); l < Math.min(e.height, o + a + 1); l++)\n        if (e.getBitXY(h, l) === 1) {\n          s[h] = 1;\n          break;\n        }\n    }\n    for (let h = 0; h < e.width; h++)\n      if (i.getBitXY(h, o) !== 1) {\n        for (let l = Math.max(0, h - n); l < Math.min(e.width, h + n + 1); l++)\n          if (s[l] === 1) {\n            i.setBitXY(h, o);\n            break;\n          }\n      }\n  }\n  return i;\n}\nfunction erode(e = {}) {\n  let {\n    kernel: i = [\n      [1, 1, 1],\n      [1, 1, 1],\n      [1, 1, 1]\n    ],\n    iterations: t = 1\n  } = e;\n  if (this.checkProcessable(\"erode\", {\n    bitDepth: [1, 8, 16],\n    components: 1,\n    alpha: 0\n  }), i.columns % 2 === 0 || i.rows % 2 === 0)\n    throw new TypeError(\n      \"erode: The number of rows and columns of the kernel must be odd\"\n    );\n  let r = !0;\n  e: for (const a of i)\n    for (const s of a)\n      if (s !== 1) {\n        r = !1;\n        break e;\n      }\n  let n = this;\n  for (let a = 0; a < t; a++)\n    if (this.bitDepth === 1)\n      if (r) {\n        const s = n.clone();\n        n = erodeOnceBinaryOnlyOnes(\n          n,\n          s,\n          i.length,\n          i[0].length\n        );\n      } else {\n        const s = Image.createFrom(n);\n        n = erodeOnceBinary(n, s, i);\n      }\n    else if (r) {\n      const s = Image.createFrom(n);\n      n = erodeOnceGreyOnlyOnes(\n        n,\n        s,\n        i.length,\n        i[0].length\n      );\n    } else {\n      const s = Image.createFrom(n);\n      n = erodeOnceGrey(n, s, i);\n    }\n  return n;\n}\nfunction erodeOnceGrey(e, i, t) {\n  const r = t.length, n = t[0].length;\n  let a = (r - 1) / 2, s = (n - 1) / 2;\n  for (let o = 0; o < e.height; o++)\n    for (let h = 0; h < e.width; h++) {\n      let l = e.maxValue;\n      for (let f = 0; f < n; f++)\n        for (let b = 0; b < r; b++) {\n          if (t[b][f] !== 1) continue;\n          let w = b - a + h, g = f - s + o;\n          if (w < 0 || g < 0 || w >= e.width || g >= e.height) continue;\n          const E = e.getValueXY(w, g, 0);\n          E < l && (l = E);\n        }\n      i.setValueXY(h, o, 0, l);\n    }\n  return i;\n}\nfunction erodeOnceGreyOnlyOnes(e, i, t, r) {\n  const n = (t - 1) / 2, a = (r - 1) / 2, s = [];\n  for (let o = 0; o < e.width; o++)\n    s.push(0);\n  for (let o = 0; o < e.height; o++) {\n    for (let h = 0; h < e.width; h++) {\n      let l = e.maxValue;\n      for (let f = Math.max(0, o - a); f < Math.min(e.height, o + a + 1); f++) {\n        const b = e.getValueXY(h, f, 0);\n        b < l && (l = b);\n      }\n      s[h] = l;\n    }\n    for (let h = 0; h < e.width; h++) {\n      let l = e.maxValue;\n      for (let f = Math.max(0, h - n); f < Math.min(e.width, h + n + 1); f++)\n        s[f] < l && (l = s[f]);\n      i.setValueXY(h, o, 0, l);\n    }\n  }\n  return i;\n}\nfunction erodeOnceBinary(e, i, t) {\n  const r = t.length, n = t[0].length;\n  let a = (r - 1) / 2, s = (n - 1) / 2;\n  for (let o = 0; o < e.height; o++)\n    for (let h = 0; h < e.width; h++) {\n      let l = 1;\n      e: for (let f = 0; f < n; f++)\n        for (let b = 0; b < r; b++) {\n          if (t[b][f] !== 1) continue;\n          let w = b - a + h, g = f - s + o;\n          if (g < 0 || w < 0 || w >= e.width || g >= e.height) continue;\n          if (e.getBitXY(w, g) === 0) {\n            l = 0;\n            break e;\n          }\n        }\n      l === 1 && i.setBitXY(h, o);\n    }\n  return i;\n}\nfunction erodeOnceBinaryOnlyOnes(e, i, t, r) {\n  const n = (t - 1) / 2, a = (r - 1) / 2, s = [];\n  for (let o = 0; o < e.width; o++)\n    s.push(0);\n  for (let o = 0; o < e.height; o++) {\n    for (let h = 0; h < e.width; h++) {\n      s[h] = 1;\n      for (let l = Math.max(0, o - a); l < Math.min(e.height, o + a + 1); l++)\n        if (e.getBitXY(h, l) === 0) {\n          s[h] = 0;\n          break;\n        }\n    }\n    for (let h = 0; h < e.width; h++)\n      if (i.getBitXY(h, o) !== 0) {\n        for (let l = Math.max(0, h - n); l < Math.min(e.width, h + n + 1); l++)\n          if (s[l] === 0) {\n            i.clearBitXY(h, o);\n            break;\n          }\n      }\n  }\n  return i;\n}\nfunction open(e = {}) {\n  let {\n    kernel: i = [\n      [1, 1, 1],\n      [1, 1, 1],\n      [1, 1, 1]\n    ],\n    iterations: t = 1\n  } = e;\n  if (this.checkProcessable(\"open\", {\n    bitDepth: [8, 16],\n    components: 1,\n    alpha: 0\n  }), i.columns % 2 === 0 || i.rows % 2 === 0)\n    throw new TypeError(\n      \"open: The number of rows and columns of the kernel must be odd\"\n    );\n  let r = this;\n  for (let n = 0; n < t; n++)\n    r = r.erode({ kernel: i }), r = r.dilate({ kernel: i });\n  return r;\n}\nfunction close(e = {}) {\n  let {\n    kernel: i = [\n      [1, 1, 1],\n      [1, 1, 1],\n      [1, 1, 1]\n    ],\n    iterations: t = 1\n  } = e;\n  if (this.checkProcessable(\"close\", {\n    bitDepth: [1, 8, 16],\n    components: 1,\n    alpha: 0\n  }), i.columns % 2 === 0 || i.rows % 2 === 0)\n    throw new TypeError(\n      \"close: The number of rows and columns of the kernel must be odd\"\n    );\n  let r = this;\n  for (let n = 0; n < t; n++)\n    r = r.dilate({ kernel: i }).erode({ kernel: i });\n  return r;\n}\nfunction topHat(e = {}) {\n  let {\n    kernel: i = [\n      [1, 1, 1],\n      [1, 1, 1],\n      [1, 1, 1]\n    ],\n    iterations: t = 1\n  } = e;\n  if (this.checkProcessable(\"topHat\", {\n    bitDepth: [8, 16],\n    components: 1,\n    alpha: 0\n  }), i.length % 2 === 0 || i[0].length % 2 === 0)\n    throw new TypeError(\n      \"topHat: The number of rows and columns of the kernel must be odd\"\n    );\n  let r = this;\n  for (let n = 0; n < t; n++)\n    r = r.open({ kernel: i }).subtractImage(r, { absolute: !0 });\n  return r;\n}\nfunction blackHat(e = {}) {\n  let {\n    kernel: i = [\n      [1, 1, 1],\n      [1, 1, 1],\n      [1, 1, 1]\n    ],\n    iterations: t = 1\n  } = e;\n  if (this.checkProcessable(\"blackHat\", {\n    bitDepth: [8, 16],\n    components: 1,\n    alpha: 0\n  }), i.columns % 2 === 0 || i.rows % 2 === 0)\n    throw new TypeError(\n      \"blackHat: The number of rows and columns of the kernel must be odd\"\n    );\n  let r = this;\n  for (let n = 0; n < t; n++)\n    r = r.close({ kernel: i }).subtractImage(r, { absolute: !0 });\n  return r;\n}\nfunction morphologicalGradient(e = {}) {\n  let {\n    kernel: i = [\n      [1, 1, 1],\n      [1, 1, 1],\n      [1, 1, 1]\n    ],\n    iterations: t = 1\n  } = e;\n  if (this.checkProcessable(\"morphologicalGradient\", {\n    bitDepth: [8, 16],\n    components: 1,\n    alpha: 0\n  }), i.columns % 2 === 0 || i.rows % 2 === 0)\n    throw new TypeError(\n      \"morphologicalGradient: The number of rows and columns of the kernel must be odd\"\n    );\n  let r = this;\n  for (let n = 0; n < t; n++) {\n    let a = r.dilate({ kernel: i }), s = r.erode({ kernel: i });\n    r = a.subtractImage(s, { absolute: !0 });\n  }\n  return r;\n}\nfunction order4Points(e) {\n  let i = 0, t = 0, r = 0, n = 0, a = e[0][0], s = 0;\n  for (let l = 1; l < e.length; l++)\n    e[l][0] < a && (a = e[l][0], s = l);\n  let o = e[(s + 1) % e.length][0], h = (s + 1) % e.length;\n  for (let l = 1; l < e.length; l++)\n    e[l][0] < o && l !== s && (o = e[l][0], h = l);\n  return e[h][1] < e[s][1] ? (i = e[h], n = e[s], s !== (h + 1) % 4 ? (t = e[(h + 1) % 4], r = e[(h + 2) % 4]) : (t = e[(h + 2) % 4], r = e[(h + 3) % 4])) : (n = e[h], i = e[s], h !== (s + 1) % 4 ? (t = e[(s + 1) % 4], r = e[(s + 2) % 4]) : (t = e[(s + 2) % 4], r = e[(s + 3) % 4])), [i, t, r, n];\n}\nfunction distance2Points(e, i) {\n  return Math.sqrt(Math.pow(e[0] - i[0], 2) + Math.pow(e[1] - i[1], 2));\n}\nfunction crossVect(e, i) {\n  return [\n    e[1] * i[2] - e[2] * i[1],\n    e[2] * i[0] - e[0] * i[2],\n    e[0] * i[1] - e[1] * i[0]\n  ];\n}\nfunction dotVect(e, i) {\n  return e[0] * i[0] + e[1] * i[1] + e[2] * i[2];\n}\nfunction computeWidthAndHeigth(e, i, t, r, n, a) {\n  let s = Math.max(distance2Points(e, i), distance2Points(r, t)), o = Math.max(distance2Points(e, r), distance2Points(i, t)), h = 0, l = 0, f = Math.ceil(n / 2), b = Math.ceil(a / 2), w = s / o, g = [e[0], e[1], 1], E = [i[0], i[1], 1], k = [r[0], r[1], 1], A = [t[0], t[1], 1], T = dotVect(crossVect(g, A), k) / dotVect(crossVect(E, A), k), C = dotVect(crossVect(g, A), E) / dotVect(crossVect(k, A), E), D = [T * E[0] - g[0], T * E[1] - g[1], T * E[2] - g[2]], $ = [C * k[0] - g[0], C * k[1] - g[1], C * k[2] - g[2]], P = D[0], z = D[1], B = D[2], F = $[0], O = $[1], N = $[2], G = 1 / (B * N) * (P * F - (P * N + B * F) * f + B * N * f * f + (z * O - (z * N + B * O) * b + B * N * b * b));\n  G >= 0 ? G = Math.sqrt(G) : G = Math.sqrt(-G);\n  let V = new Matrix$1([\n    [G, 0, f],\n    [0, G, b],\n    [0, 0, 1]\n  ]), J = V.transpose(), Q = inverse(J), W = inverse(V), ne = Matrix$1.rowVector(D), pe = Matrix$1.rowVector($), be = Math.sqrt(\n    dotVect(ne.mmul(Q).mmul(W).to1DArray(), D) / dotVect(pe.mmul(Q).mmul(W).to1DArray(), $)\n  );\n  return be === 0 || w === 0 ? (h = Math.ceil(s), l = Math.ceil(o)) : be < w ? (h = Math.ceil(s), l = Math.ceil(h / be)) : (l = Math.ceil(o), h = Math.ceil(be * l)), [h, l];\n}\nfunction projectionPoint(e, i, t, r, n, a, s, o, h, l, f, b) {\n  let [w, g] = [\n    (t * e + r * i + n) / (h * e + l * i + 1),\n    (a * e + s * i + o) / (h * e + l * i + 1)\n  ];\n  return f.getValueXY(Math.floor(w), Math.floor(g), b);\n}\nfunction warpingFourPoints(e, i = {}) {\n  let { calculateRatio: t = !0 } = i;\n  if (e.length !== 4)\n    throw new Error(\n      `The array pts must have four elements, which are the four corners. Currently, pts have ${e.length} elements`\n    );\n  let [r, n, a, s] = e, o = [r, n, a, s], [h, l, f, b] = order4Points(o), w, g;\n  t ? [w, g] = computeWidthAndHeigth(\n    h,\n    l,\n    f,\n    b,\n    this.width,\n    this.height\n  ) : (w = Math.ceil(\n    Math.max(distance2Points(h, l), distance2Points(b, f))\n  ), g = Math.ceil(\n    Math.max(distance2Points(h, b), distance2Points(l, f))\n  ));\n  let E = Image.createFrom(this, {\n    width: w,\n    height: g\n  }), [k, A] = h, [T, C] = l, [D, $] = f, [P, z] = b, [B, F] = [0, 0], [O, N] = [0, w - 1], [G, V] = [g - 1, w - 1], [J, Q] = [g - 1, 0], W = new Matrix$1([\n    [B, F, 1, 0, 0, 0, -B * k, -F * k],\n    [O, N, 1, 0, 0, 0, -O * T, -N * T],\n    [G, V, 1, 0, 0, 0, -G * D, -F * D],\n    [J, Q, 1, 0, 0, 0, -J * P, -Q * P],\n    [0, 0, 0, B, F, 1, -B * A, -F * A],\n    [0, 0, 0, O, N, 1, -O * C, -N * C],\n    [0, 0, 0, G, V, 1, -G * $, -V * $],\n    [0, 0, 0, J, Q, 1, -J * z, -Q * z]\n  ]), ne = Matrix$1.columnVector([k, T, D, P, A, C, $, z]), be = new SingularValueDecomposition(W).solve(ne), [ve, Ee, Ae, _e, Be, Me, re, Te] = be.to1DArray(), Fe = new Matrix$1(g, w);\n  for (let Se = 0; Se < this.channels; Se++) {\n    for (let Ye = 0; Ye < g; Ye++)\n      for (let Je = 0; Je < w; Je++)\n        Fe.set(\n          Ye,\n          Je,\n          projectionPoint(Ye, Je, ve, Ee, Ae, _e, Be, Me, re, Te, this, Se)\n        );\n    E.setMatrix(Fe, { channel: Se });\n  }\n  return E;\n}\nfunction crop(e = {}) {\n  let {\n    x: i = 0,\n    y: t = 0,\n    width: r = this.width - i,\n    height: n = this.height - t\n  } = e;\n  if (this.checkProcessable(\"crop\", {\n    bitDepth: [1, 8, 16]\n  }), i = Math.round(i), t = Math.round(t), r = Math.round(r), n = Math.round(n), i > this.width - 1 || t > this.height - 1)\n    throw new RangeError(\n      `crop: origin (x:${i}, y:${t}) out of range (${this.width - 1}; ${this.height - 1})`\n    );\n  if (r <= 0 || n <= 0)\n    throw new RangeError(\n      `crop: width and height (width:${r}; height:${n}) must be positive numbers`\n    );\n  if (i < 0 || t < 0)\n    throw new RangeError(\n      `crop: x and y (x:${i}, y:${t}) must be positive numbers`\n    );\n  if (r > this.width - i || n > this.height - t)\n    throw new RangeError(\n      `crop: (x: ${i}, y:${t}, width:${r}, height:${n}) size is out of range`\n    );\n  let a = this;\n  if (this.bitDepth === 1) {\n    const s = new Image(r, n, {\n      kind: \"BINARY\",\n      parent: this\n    });\n    a = cropBinary(this, s, i, t, r, n);\n  } else {\n    const s = Image.createFrom(this, {\n      width: r,\n      height: n,\n      position: [i, t]\n    });\n    a = cropDefault(this, s, i, t, r, n);\n  }\n  return a;\n}\nfunction cropDefault(e, i, t, r, n, a) {\n  let s = n * e.channels, o = r + a, h = 0, l = t * e.channels;\n  for (let f = r; f < o; f++) {\n    let b = f * e.width * e.channels + l, w = b + s;\n    for (; b < w; b++)\n      i.data[h++] = e.data[b];\n  }\n  return i;\n}\nfunction cropBinary(e, i, t, r, n, a) {\n  let s = n * e.channels, o = r + a, h = 0, l = t * e.channels;\n  for (let f = r; f < o; f++) {\n    let b = f * e.width * e.channels + l, w = b + s;\n    for (; b < w; b++)\n      e.getBit(b) && i.setBit(h), ++h;\n  }\n  return i;\n}\nfunction cropAlpha(e = {}) {\n  this.checkProcessable(\"cropAlpha\", {\n    alpha: 1\n  });\n  const { threshold: i = this.maxValue } = e;\n  let t = findLeft(this, i, this.components);\n  if (t === -1)\n    throw new Error(\n      \"Could not find new dimensions. Threshold may be too high.\"\n    );\n  let r = findTop(this, i, this.components, t), n = findBottom(this, i, this.components, t), a = findRight(this, i, this.components, t, r, n);\n  return this.crop({\n    x: t,\n    y: r,\n    width: a - t + 1,\n    height: n - r + 1\n  });\n}\nfunction findLeft(e, i, t) {\n  for (let r = 0; r < e.width; r++)\n    for (let n = 0; n < e.height; n++)\n      if (e.getValueXY(r, n, t) >= i)\n        return r;\n  return -1;\n}\nfunction findTop(e, i, t, r) {\n  for (let n = 0; n < e.height; n++)\n    for (let a = r; a < e.width; a++)\n      if (e.getValueXY(a, n, t) >= i)\n        return n;\n  return -1;\n}\nfunction findBottom(e, i, t, r) {\n  for (let n = e.height - 1; n >= 0; n--)\n    for (let a = r; a < e.width; a++)\n      if (e.getValueXY(a, n, t) >= i)\n        return n;\n  return -1;\n}\nfunction findRight(e, i, t, r, n, a) {\n  for (let s = e.width - 1; s >= r; s--)\n    for (let o = n; o <= a; o++)\n      if (e.getValueXY(s, o, t) >= i)\n        return s;\n  return -1;\n}\nfunction getFactor(e) {\n  if (typeof e == \"string\") {\n    const i = e[e.length - 1];\n    e = parseFloat(e), i === \"%\" && (e /= 100);\n  }\n  return e;\n}\nfunction getThreshold$1(e, i) {\n  if (!i)\n    throw Error(\"getThreshold : the maxValue should be specified\");\n  if (typeof e == \"string\") {\n    if (e[e.length - 1] !== \"%\")\n      throw Error(\n        \"getThreshold : if the value is a string it must finish by %\"\n      );\n    return parseFloat(e) / 100 * i;\n  } else {\n    if (typeof e == \"number\")\n      return e < 1 ? e * i : e;\n    throw Error(\"getThreshold : the value is not valid\");\n  }\n}\nfunction factorDimensions(e, i, t) {\n  e = getFactor(e);\n  let r = Math.round(e * i), n = Math.round(e * t);\n  return r <= 0 && (r = 1), n <= 0 && (n = 1), {\n    width: r,\n    height: n\n  };\n}\nfunction checkRow(e, i) {\n  if (i < 0 || i >= e.height)\n    throw new RangeError(\n      `row must be included between 0 and ${e.height - 1}. Current value: ${i}`\n    );\n}\nfunction checkColumn(e, i) {\n  if (i < 0 || i >= e.width)\n    throw new RangeError(\n      `column must be included between 0 and ${e.width - 1}. Current value: ${i}`\n    );\n}\nfunction checkChannel(e, i) {\n  if (i < 0 || i >= e.channels)\n    throw new RangeError(\n      `channel must be included between 0 and ${e.channels - 1}. Current value: ${i}`\n    );\n}\nconst validInterpolations = {\n  nearestneighbor: \"nearestNeighbor\",\n  nearestneighbour: \"nearestNeighbor\",\n  bilinear: \"bilinear\"\n};\nfunction checkInterpolation(e) {\n  if (typeof e != \"string\")\n    throw new TypeError(\"interpolation must be a string\");\n  if (e = e.toLowerCase(), !validInterpolations[e])\n    throw new RangeError(`invalid interpolation algorithm: ${e}`);\n  return validInterpolations[e];\n}\nfunction nearestNeighbor(e, i, t) {\n  const r = this.width / i, n = this.height / t;\n  if (this.bitDepth > 1)\n    for (let a = 0; a < i; a++) {\n      const s = Math.floor((a + 0.5) * r);\n      for (let o = 0; o < t; o++) {\n        const h = Math.floor((o + 0.5) * n);\n        for (let l = 0; l < this.channels; l++)\n          e.setValueXY(a, o, l, this.getValueXY(s, h, l));\n      }\n    }\n  else\n    for (let a = 0; a < i; a++) {\n      const s = Math.floor((a + 0.5) * r);\n      for (let o = 0; o < t; o++) {\n        const h = Math.floor((o + 0.5) * n);\n        this.getBitXY(s, h) && e.setBitXY(a, o);\n      }\n    }\n}\nfunction resize(e = {}) {\n  const {\n    factor: i = 1,\n    interpolation: t = validInterpolations.nearestneighbor,\n    preserveAspectRatio: r = !0\n  } = e, n = checkInterpolation(t);\n  let a = e.width, s = e.height;\n  if (a || (s && r ? a = Math.round(s * (this.width / this.height)) : a = this.width), s || (r ? s = Math.round(a * (this.height / this.width)) : s = this.height), { width: a, height: s } = factorDimensions(i, a, s), a === this.width && s === this.height) {\n    const f = this.clone();\n    return f.position = [0, 0], f;\n  }\n  let o = Math.round((this.width - a) / 2), h = Math.round((this.height - s) / 2);\n  const l = Image.createFrom(this, {\n    width: a,\n    height: s,\n    position: [o, h]\n  });\n  switch (n) {\n    case validInterpolations.nearestneighbor:\n      nearestNeighbor.call(this, l, a, s);\n      break;\n    default:\n      throw new Error(\n        `unsupported resize interpolation: ${n}`\n      );\n  }\n  return l;\n}\nfunction hsv() {\n  this.checkProcessable(\"hsv\", {\n    bitDepth: [8, 16],\n    alpha: [0, 1],\n    colorModel: [RGB$1]\n  });\n  let e = Image.createFrom(this, {\n    colorModel: HSV\n  }), i = 0, t = this.data;\n  for (let r = 0; r < t.length; r += this.channels) {\n    let n = t[r], a = t[r + 1], s = t[r + 2], o = Math.min(n, a, s), h = Math.max(n, a, s), l = h - o, f = 0, b = h === 0 ? 0 : l / h, w = h;\n    if (h !== o) {\n      switch (h) {\n        case n:\n          f = (a - s) / l + (a < s ? 6 : 0);\n          break;\n        case a:\n          f = (s - n) / l + 2;\n          break;\n        case s:\n          f = (n - a) / l + 4;\n          break;\n        default:\n          throw new Error(\"unreachable\");\n      }\n      f /= 6;\n    }\n    e.data[i++] = f * this.maxValue, e.data[i++] = b * this.maxValue, e.data[i++] = w, this.alpha && (e.data[i++] = t[r + 3]);\n  }\n  return e;\n}\nfunction hsl$1() {\n  this.checkProcessable(\"hsl\", {\n    bitDepth: [8, 16],\n    alpha: [0, 1],\n    colorModel: [RGB$1]\n  });\n  let e = Image.createFrom(this, {\n    colorModel: HSL\n  }), i = Math.floor(this.maxValue / 2), t = 0, r = this.data;\n  for (let n = 0; n < r.length; n += this.channels) {\n    let a = r[n], s = r[n + 1], o = r[n + 2], h = Math.max(a, s, o), l = Math.min(a, s, o), f = 0, b = 0, w = (h + l) / 2;\n    if (h !== l) {\n      let g = h - l;\n      switch (b = w > i ? g / (2 - h - l) : g / (h + l), h) {\n        case a:\n          f = (s - o) / g + (s < o ? 6 : 0);\n          break;\n        case s:\n          f = (o - a) / g + 2;\n          break;\n        case o:\n          f = (a - s) / g + 4;\n          break;\n        default:\n          throw new Error(\"unreachable\");\n      }\n      f /= 6;\n    }\n    e.data[t++] = f * this.maxValue, e.data[t++] = b * this.maxValue, e.data[t++] = w, this.alpha && (e.data[t++] = r[n + 3]);\n  }\n  return e;\n}\nfunction cmyk() {\n  this.checkProcessable(\"cmyk\", {\n    bitDepth: [8, 16],\n    alpha: [0, 1],\n    colorModel: [RGB$1]\n  });\n  let e = Image.createFrom(this, {\n    components: 4,\n    colorModel: CMYK$1\n  }), i = 0, t = this.data;\n  for (let r = 0; r < t.length; r += this.channels) {\n    let n = t[r], a = t[r + 1], s = t[r + 2], o = Math.min(\n      this.maxValue - n,\n      this.maxValue - a,\n      this.maxValue - s\n    ), h = (this.maxValue - n - o) / (1 - o / this.maxValue), l = (this.maxValue - a - o) / (1 - o / this.maxValue), f = (this.maxValue - s - o) / (1 - o / this.maxValue);\n    e.data[i++] = Math.round(h), e.data[i++] = Math.round(l), e.data[i++] = Math.round(f), e.data[i++] = Math.round(o), this.alpha && (e.data[i++] = t[r + 3]);\n  }\n  return e;\n}\nfunction rgba8() {\n  return new Image(this.width, this.height, this.getRGBAData(), {\n    kind: \"RGBA\",\n    parent: this\n  });\n}\nconst methods$1 = {\n  luma709(e, i, t) {\n    return e * 6966 + i * 23436 + t * 2366 >> 15;\n  },\n  luma601(e, i, t) {\n    return e * 9798 + i * 19235 + t * 3735 >> 15;\n  },\n  maximum(e, i, t) {\n    return Math.max(e, i, t);\n  },\n  minimum(e, i, t) {\n    return Math.min(e, i, t);\n  },\n  average(e, i, t) {\n    return (e + i + t) / 3 >> 0;\n  },\n  minmax(e, i, t) {\n    return (Math.max(e, i, t) + Math.min(e, i, t)) / 2;\n  },\n  red(e) {\n    return e;\n  },\n  green(e, i) {\n    return i;\n  },\n  blue(e, i, t) {\n    return t;\n  },\n  cyan(e, i, t, r) {\n    let n = methods$1.black(e, i, t, r);\n    return (r.maxValue - e - n) / (1 - n / r.maxValue) >> 0;\n  },\n  magenta(e, i, t, r) {\n    let n = methods$1.black(e, i, t, r);\n    return (r.maxValue - i - n) / (1 - n / r.maxValue) >> 0;\n  },\n  yellow(e, i, t, r) {\n    let n = methods$1.black(e, i, t, r);\n    return (r.maxValue - t - n) / (1 - n / r.maxValue) >> 0;\n  },\n  black(e, i, t, r) {\n    return Math.min(\n      r.maxValue - e,\n      r.maxValue - i,\n      r.maxValue - t\n    );\n  },\n  hue(e, i, t, r) {\n    let n = methods$1.min(e, i, t), a = methods$1.max(e, i, t);\n    if (a === n)\n      return 0;\n    let s = 0, o = a - n;\n    switch (a) {\n      case e:\n        s = (i - t) / o + (i < t ? 6 : 0);\n        break;\n      case i:\n        s = (t - e) / o + 2;\n        break;\n      case t:\n        s = (e - i) / o + 4;\n        break;\n      default:\n        throw new Error(\"unreachable\");\n    }\n    return s / 6 * r.maxValue >> 0;\n  },\n  saturation(e, i, t, r) {\n    let n = methods$1.min(e, i, t), a = methods$1.max(e, i, t), s = a - n;\n    return a === 0 ? 0 : s / a * r.maxValue;\n  },\n  lightness(e, i, t) {\n    let r = methods$1.min(e, i, t);\n    return (methods$1.max(e, i, t) + r) / 2;\n  }\n};\nObject.defineProperty(methods$1, \"luminosity\", {\n  enumerable: !1,\n  value: methods$1.lightness\n});\nObject.defineProperty(methods$1, \"luminance\", {\n  enumerable: !1,\n  value: methods$1.lightness\n});\nObject.defineProperty(methods$1, \"min\", {\n  enumerable: !1,\n  value: methods$1.minimum\n});\nObject.defineProperty(methods$1, \"max\", {\n  enumerable: !1,\n  value: methods$1.maximum\n});\nObject.defineProperty(methods$1, \"brightness\", {\n  enumerable: !1,\n  value: methods$1.maximum\n});\nObject.keys(methods$1).forEach((e) => {\n});\nfunction grey(e = {}) {\n  let { algorithm: i = \"luma709\", keepAlpha: t = !1, mergeAlpha: r = !0 } = e;\n  if (typeof i != \"string\" && typeof i != \"function\")\n    throw new TypeError(\"algorithm must be a string or a function\");\n  this.checkProcessable(\"grey\", {\n    bitDepth: [8, 16],\n    alpha: [0, 1]\n  }), this.components === 1 && (i = \"red\"), t &= this.alpha, r &= this.alpha, t && (r = !1);\n  let n = getOutputImage(this, e, {\n    components: 1,\n    alpha: t,\n    colorModel: GREY$1\n  }), a;\n  if (typeof i == \"function\")\n    a = i;\n  else if (a = methods$1[i.toLowerCase()], !a)\n    throw new Error(`unsupported grey algorithm: ${i}`);\n  let s = 0;\n  for (let o = 0; o < this.data.length; o += this.channels)\n    r ? n.data[s++] = clamp(\n      a(this.data[o], this.data[o + 1], this.data[o + 2], this) * this.data[o + this.components] / this.maxValue,\n      this\n    ) : (n.data[s++] = clamp(\n      a(this.data[o], this.data[o + 1], this.data[o + 2], this),\n      this\n    ), n.alpha && (n.data[s++] = this.data[o + this.components]));\n  return n;\n}\nfunction huang(e) {\n  let i = 0;\n  for (let f = 0; f < e.length; f++)\n    if (e[f] !== 0) {\n      i = f;\n      break;\n    }\n  let t = e.length - 1;\n  for (let f = e.length - 1; f >= i; f--)\n    if (e[f] !== 0) {\n      t = f;\n      break;\n    }\n  let r = 1 / (t - i), n = new Array(e.length), a = 0, s = 0;\n  for (let f = i; f < e.length; f++)\n    a += f * e[f], s += e[f], n[f] = a / s;\n  let o = new Array(e.length);\n  a = s = 0;\n  for (let f = t; f > 0; f--)\n    a += f * e[f], s += e[f], o[f - 1] = a / s;\n  let h = -1, l = Number.MAX_VALUE;\n  for (let f = 0; f < e.length; f++) {\n    let b = 0, w;\n    for (let g = 0; g <= f; g++)\n      w = 1 / (1 + r * Math.abs(g - n[f])), w < 1e-6 || w > 0.999999 || (b += e[g] * (-w * Math.log(w) - (1 - w) * Math.log(1 - w)));\n    for (let g = f + 1; g < e.length; g++)\n      w = 1 / (1 + r * Math.abs(g - o[f])), w < 1e-6 || w > 0.999999 || (b += e[g] * (-w * Math.log(w) - (1 - w) * Math.log(1 - w)));\n    b < l && (l = b, h = f);\n  }\n  return h;\n}\nfunction intermodes(e) {\n  let i = e.slice(), t = 0;\n  for (; !bimodalTest$1(i); ) {\n    let n = 0, a = 0, s = i[0];\n    for (let o = 0; o < e.length - 1; o++)\n      n = a, a = s, s = i[o + 1], i[o] = (n + a + s) / 3;\n    if (i[e.length - 1] = (a + s) / 3, t++, t > 1e4)\n      throw new Error(\"Intermodes Threshold not found after 10000 iterations\");\n  }\n  let r = 0;\n  for (let n = 1; n < e.length - 1; n++)\n    i[n - 1] < i[n] && i[n + 1] < i[n] && (r += n);\n  return Math.floor(r / 2);\n}\nfunction bimodalTest$1(e) {\n  let i = !1, t = 0;\n  for (let r = 1; r < e.length - 1; r++)\n    if (e[r - 1] < e[r] && e[r + 1] < e[r] && (t++, t > 2))\n      return !1;\n  return t === 2 && (i = !0), i;\n}\nfunction isodata(e) {\n  let i, t, r, n, a = 0;\n  for (let s = 1; s < e.length; s++)\n    if (e[s] > 0) {\n      a = s + 1;\n      break;\n    }\n  for (; ; ) {\n    i = 0, r = 0;\n    for (let s = 0; s < a; s++)\n      r = r + e[s], i = i + e[s] * s;\n    n = 0, t = 0;\n    for (let s = a + 1; s < e.length; s++)\n      t += e[s], n += e[s] * s;\n    if (r > 0 && t > 0 && (i /= r, n /= t, a === Math.round((i + n) / 2)))\n      break;\n    if (a++, a > e.length - 2)\n      throw new Error(\"Threshold not found\");\n  }\n  return a;\n}\nfunction li(e, i) {\n  let t, r, n, a, s, o, h, l, f, b, w, g;\n  w = 0.5, b = 0;\n  for (let E = 0; E < e.length; E++)\n    b += E * e[E];\n  b /= i, h = b;\n  do {\n    o = h, t = o + 0.5 | 0, r = 0, a = 0;\n    for (let E = 0; E <= t; E++)\n      r += E * e[E], a += e[E];\n    l = a === 0 ? 0 : r / a, n = 0, s = 0;\n    for (let E = t + 1; E < e.length; E++)\n      n += E * e[E], s += e[E];\n    f = s === 0 ? 0 : n / s, g = (l - f) / (Math.log(l) - Math.log(f)), g < -Number.EPSILON ? h = g - 0.5 | 0 : h = g + 0.5 | 0;\n  } while (Math.abs(h - o) > w);\n  return t;\n}\nfunction maxEntropy(e, i) {\n  let t = new Array(e.length);\n  for (let w = 0; w < e.length; w++)\n    t[w] = e[w] / i;\n  let r = new Array(e.length), n = new Array(e.length);\n  r[0] = t[0], n[0] = 1 - r[0];\n  for (let w = 1; w < e.length; w++)\n    r[w] = r[w - 1] + t[w], n[w] = 1 - r[w];\n  let a = 0;\n  for (let w = 0; w < e.length; w++)\n    if (Math.abs(r[w]) >= Number.EPSILON) {\n      a = w;\n      break;\n    }\n  let s = e.length - 1;\n  for (let w = e.length - 1; w >= a; w--)\n    if (Math.abs(n[w]) >= Number.EPSILON) {\n      s = w;\n      break;\n    }\n  let o = -1, h, l = Number.MIN_VALUE, f, b;\n  for (let w = a; w <= s; w++) {\n    f = 0;\n    for (let g = 0; g <= w; g++)\n      e[g] !== 0 && (f -= t[g] / r[w] * Math.log(t[g] / r[w]));\n    b = 0;\n    for (let g = w + 1; g < e.length; g++)\n      e[g] !== 0 && (b -= t[g] / n[w] * Math.log(t[g] / n[w]));\n    h = f + b, l < h && (l = h, o = w);\n  }\n  return o;\n}\nfunction mean$1(e, i) {\n  let t = 0;\n  for (let r = 0; r < e.length; r++)\n    t += r * e[r];\n  return Math.floor(t / i);\n}\nfunction minError(e, i) {\n  let t, r = -2, n, a, s, o, h, l, f, b, w, g, E, k = 0;\n  for (let A = 0; A < e.length; A++)\n    k += A * e[A];\n  for (k /= i, t = k; t !== r; ) {\n    let A = sumA(e, t), T = sumA(e, e.length - 1), C = sumB(e, t), D = sumB(e, e.length - 1), $ = sumC(e, t), P = sumC(e, e.length - 1);\n    if (n = C / A, a = (D - C) / (T - A), s = A / T, o = (T - A) / T, h = $ / A - n * n, l = (P - $) / (T - A) - a * a, f = 1 / h - 1 / l, b = n / h - a / l, w = n * n / h - a * a / l + Math.log10(h * (o * o) / (l * (s * s))), g = b * b - f * w, g < 0)\n      return t;\n    r = t, E = (b + Math.sqrt(g)) / f, isNaN(E) ? t = r : t = Math.floor(E);\n  }\n  return t;\n}\nfunction sumA(e, i) {\n  let t = 0;\n  for (let r = 0; r <= i; r++)\n    t += e[r];\n  return t;\n}\nfunction sumB(e, i) {\n  let t = 0;\n  for (let r = 0; r <= i; r++)\n    t += r * e[r];\n  return t;\n}\nfunction sumC(e, i) {\n  let t = 0;\n  for (let r = 0; r <= i; r++)\n    t += r * r * e[r];\n  return t;\n}\nfunction minimum(e) {\n  if (e.length < 2)\n    return 0;\n  let i = 0, t = -1, r = -1, n = new Array(e.length);\n  for (let a = 0; a < e.length; a++)\n    n[a] = e[a], e[a] > 0 && (r = a);\n  for (; !bimodalTest(n); )\n    if (n = smoothed(n), i++, i > 1e4)\n      return t;\n  return t = minimumBetweenPeeks(n, r), t;\n}\nfunction smoothed(e) {\n  let i = new Array(e.length);\n  for (let t = 1; t < e.length - 1; t++)\n    i[t] = (e[t - 1] + e[t] + e[t + 1]) / 3;\n  return i[0] = (e[0] + e[1]) / 3, i[e.length - 1] = (e[e.length - 2] + e[e.length - 1]) / 3, i;\n}\nfunction minimumBetweenPeeks(e, i) {\n  let t;\n  for (let r = 1; r < i; r++)\n    if (e[r - 1] > e[r] && e[r + 1] >= e[r]) {\n      t = r;\n      break;\n    }\n  return t;\n}\nfunction bimodalTest(e) {\n  let i = e.length, t = !1, r = 0;\n  for (let n = 1; n < i - 1; n++)\n    if (e[n - 1] < e[n] && e[n + 1] < e[n] && (r++, r > 2))\n      return !1;\n  return r === 2 && (t = !0), t;\n}\nfunction moments(e, i) {\n  let t = 1, r = 0, n = 0, a = 0, s = 0, o, h, l, f, b, w, g = -1, E = e.length, k = new Array(E);\n  for (let A = 0; A < E; A++)\n    k[A] = e[A] / i;\n  for (let A = 0; A < E; A++)\n    r += A * k[A], n += A * A * k[A], a += A * A * A * k[A];\n  h = t * n - r * r, l = (-n * n + r * a) / h, f = (t * -a + n * r) / h, b = 0.5 * (-f - Math.sqrt(f * f - 4 * l)), w = 0.5 * (-f + Math.sqrt(f * f - 4 * l)), o = (w - r) / (w - b);\n  for (let A = 0; A < E; A++)\n    if (s += k[A], s > o) {\n      g = A;\n      break;\n    }\n  return g;\n}\nfunction otsu(e, i) {\n  let t = 0, r = 0, n = 0, a = 0, s = 0;\n  for (let o = 0; o < e.length; o++)\n    s += o * e[o];\n  for (let o = 0; o < e.length; o++) {\n    r = r + e[o];\n    const h = i - r;\n    if (r === 0 || h === 0)\n      continue;\n    t = t + o * e[o];\n    const l = (s - t) / h, f = r * h * (t / r - l) * (t / r - l);\n    f >= n && (a = o, n = f);\n  }\n  return a;\n}\nfunction percentile(e) {\n  let i = -1, t = 0.5, r = new Array(e.length), n = partialSum(e, e.length - 1), a = 1;\n  for (let s = 0; s < e.length; s++)\n    r[s] = Math.abs(partialSum(e, s) / n - t), r[s] < a && (a = r[s], i = s);\n  return i;\n}\nfunction partialSum(e, i) {\n  let t = 0;\n  for (let r = 0; r <= i; r++)\n    t += e[r];\n  return t;\n}\nfunction renyiEntropy(e, i) {\n  let t, r, n, a = new Array(e.length), s = new Array(e.length), o = new Array(e.length), h = 0, l = 0, f = 0, b = 0, w = 0, g = 0, k = 1 / (1 - 0.5), T = 1 / (1 - 2);\n  for (let P = 0; P < e.length; P++)\n    a[P] = e[P] / i;\n  s[0] = a[0], o[0] = 1 - s[0];\n  for (let P = 1; P < e.length; P++)\n    s[P] = s[P - 1] + a[P], o[P] = 1 - s[P];\n  r = 0;\n  for (let P = 0; P < e.length; P++)\n    if (Math.abs(s[P]) >= Number.EPSILON) {\n      r = P;\n      break;\n    }\n  n = e.length - 1;\n  for (let P = e.length - 1; P >= r; P--)\n    if (Math.abs(o[P]) >= Number.EPSILON) {\n      n = P;\n      break;\n    }\n  for (let P = r; P <= n; P++) {\n    let z = 0, B = 0, F = 0;\n    for (let W = 0; W <= P; W++)\n      e[W] !== 0 && (z -= a[W] / s[P] * Math.log(a[W] / s[P])), B += Math.sqrt(a[W] / s[P]), F += a[W] * a[W] / (s[P] * s[P]);\n    let O = 0, N = 0, G = 0;\n    for (let W = P + 1; W < e.length; W++)\n      e[W] !== 0 && (O -= a[W] / o[P] * Math.log(a[W] / o[P])), N += Math.sqrt(a[W] / o[P]), G += a[W] * a[W] / (o[P] * o[P]);\n    let V = z + O, J = k * (B * N > 0 ? Math.log(B * N) : 0), Q = T * (F * G > 0 ? Math.log(F * G) : 0);\n    V > b && (b = V, h = P), J > w && (w = J, l = P), Q > g && (g = Q, f = P);\n  }\n  let C = [h, l, f];\n  C.sort((P, z) => P - z);\n  let D;\n  Math.abs(C[0] - C[1]) <= 5 ? Math.abs(C[1] - C[2]) <= 5 ? D = [1, 2, 1] : D = [0, 1, 3] : Math.abs(C[1] - C[2]) <= 5 ? D = [3, 1, 0] : D = [1, 2, 1];\n  let $ = s[C[2]] - s[C[0]];\n  return t = Math.round(\n    C[0] * (s[C[0]] + 0.25 * $ * D[0]) + 0.25 * C[1] * $ * D[1] + C[2] * (o[C[2]] + 0.25 * $ * D[2])\n  ), t;\n}\nfunction shanbhag(e, i) {\n  let t = new Array(e.length);\n  for (let g = 0; g < e.length; g++)\n    t[g] = e[g] / i;\n  let r = new Array(e.length), n = new Array(e.length);\n  r[0] = t[0], n[0] = 1 - r[0];\n  for (let g = 1; g < e.length; g++)\n    r[g] = r[g - 1] + t[g], n[g] = 1 - r[g];\n  let a = 0;\n  for (let g = 0; g < e.length; g++)\n    if (Math.abs(r[g]) >= Number.EPSILON) {\n      a = g;\n      break;\n    }\n  let s = e.length - 1;\n  for (let g = e.length - 1; g >= a; g--)\n    if (Math.abs(n[g]) >= Number.EPSILON) {\n      s = g;\n      break;\n    }\n  let o = -1, h = Number.MAX_VALUE, l, f, b, w;\n  for (let g = a; g <= s; g++) {\n    b = 0, l = 0.5 / r[g];\n    for (let E = 1; E <= g; E++)\n      b -= t[E] * Math.log(1 - l * r[E - 1]);\n    b *= l, w = 0, l = 0.5 / n[g];\n    for (let E = g + 1; E < e.length; E++)\n      w -= t[E] * Math.log(1 - l * n[E]);\n    w *= l, f = Math.abs(b - w), f < h && (h = f, o = g);\n  }\n  return o;\n}\nfunction triangle$1(e) {\n  let i = 0, t = 0, r = 0, n = 0;\n  for (let b = 0; b < e.length; b++)\n    if (e[b] > 0) {\n      i = b;\n      break;\n    }\n  i > 0 && i--;\n  for (let b = e.length - 1; b > 0; b--)\n    if (e[b] > 0) {\n      n = b;\n      break;\n    }\n  n < e.length - 1 && n++;\n  for (let b = 0; b < e.length; b++)\n    e[b] > t && (r = b, t = e[b]);\n  let a = !1;\n  if (r - i < n - r) {\n    a = !0;\n    let b = 0, w = e.length - 1;\n    for (; b < w; ) {\n      let g = e[b];\n      e[b] = e[w], e[w] = g, b++, w--;\n    }\n    i = e.length - 1 - n, r = e.length - 1 - r;\n  }\n  if (i === r)\n    return i;\n  let s, o, h;\n  s = e[r], o = i - r, h = Math.sqrt(s * s + o * o), s /= h, o /= h, h = s * i + o * e[i];\n  let l = i, f = 0;\n  for (let b = i + 1; b <= r; b++) {\n    let w = s * b + o * e[b] - h;\n    w > f && (l = b, f = w);\n  }\n  if (l--, a) {\n    let b = 0, w = e.length - 1;\n    for (; b < w; ) {\n      let g = e[b];\n      e[b] = e[w], e[w] = g, b++, w--;\n    }\n    return e.length - 1 - l;\n  } else\n    return l;\n}\nfunction yen(e, i) {\n  let t = new Array(e.length);\n  for (let l = 0; l < e.length; l++)\n    t[l] = e[l] / i;\n  let r = new Array(e.length);\n  r[0] = t[0];\n  for (let l = 1; l < e.length; l++)\n    r[l] = r[l - 1] + t[l];\n  let n = new Array(e.length);\n  n[0] = t[0] * t[0];\n  for (let l = 1; l < e.length; l++)\n    n[l] = n[l - 1] + t[l] * t[l];\n  let a = new Array(e.length);\n  a[e.length - 1] = 0;\n  for (let l = e.length - 2; l >= 0; l--)\n    a[l] = a[l + 1] + t[l + 1] * t[l + 1];\n  let s = -1, o = Number.MIN_VALUE, h;\n  for (let l = 0; l < e.length; l++)\n    h = -1 * (n[l] * a[l] > 0 ? Math.log(n[l] * a[l]) : 0) + 2 * (r[l] * (1 - r[l]) > 0 ? Math.log(r[l] * (1 - r[l])) : 0), h > o && (o = h, s = l);\n  return s;\n}\nconst methods = {\n  huang,\n  intermodes,\n  isodata,\n  li,\n  maxentropy: maxEntropy,\n  mean: mean$1,\n  minerror: minError,\n  minimum,\n  moments,\n  otsu,\n  percentile,\n  renyientropy: renyiEntropy,\n  shanbhag,\n  triangle: triangle$1,\n  yen\n}, names = {};\nObject.keys(methods).forEach((e) => {\n  names[e] = e;\n});\nfunction getThreshold(e = {}) {\n  let { algorithm: i = names.otsu } = e;\n  this.checkProcessable(\"getThreshold\", {\n    components: 1,\n    bitDepth: [8, 16]\n  });\n  let t = methods[i.toLowerCase()];\n  if (t) {\n    let r = this.getHistogram();\n    return t(r, this.size);\n  } else\n    throw new Error(`unknown thresholding algorithm: ${i}`);\n}\nconst THRESHOLD = \"threshold\";\nfunction mask(e = {}) {\n  let {\n    algorithm: i = THRESHOLD,\n    threshold: t = 0.5,\n    useAlpha: r = !0,\n    invert: n = !1\n  } = e;\n  this.checkProcessable(\"mask\", {\n    components: 1,\n    bitDepth: [8, 16]\n  }), i === THRESHOLD ? t = getThreshold$1(t, this.maxValue) : t = getThreshold.call(this, e);\n  let a = new Image(this.width, this.height, {\n    kind: \"BINARY\",\n    parent: this\n  }), s = 0;\n  if (this.alpha && r)\n    for (let o = 0; o < this.data.length; o += this.channels) {\n      let h = this.data[o] + (this.maxValue - this.data[o]) * (this.maxValue - this.data[o + 1]) / this.maxValue;\n      (n && h <= t || !n && h >= t) && a.setBit(s), s++;\n    }\n  else\n    for (let o = 0; o < this.data.length; o += this.channels)\n      (n && this.data[o] <= t || !n && this.data[o] >= t) && a.setBit(s), s++;\n  return a;\n}\nfunction copyImage(e, i, t, r) {\n  let n = e.width, a = e.height, s = i.width, o = e.channels;\n  for (let h = 0; h < n; h++)\n    for (let l = 0; l < a; l++)\n      for (let f = 0; f < o; f++) {\n        let b = (l * n + h) * o + f, w = ((r + l) * s + t + h) * o + f;\n        i.data[w] = e.data[b];\n      }\n}\nfunction pad(e = {}) {\n  let { size: i = 0, algorithm: t = \"copy\", color: r } = e;\n  if (this.checkProcessable(\"pad\", {\n    bitDepth: [8, 16]\n  }), t === \"set\") {\n    if (r.length !== this.channels)\n      throw new Error(\n        `pad: the color array must have the same length as the number of channels. Here: ${this.channels}`\n      );\n    for (let h = 0; h < r.length; h++)\n      r[h] === 0 && (r[h] = 1e-3);\n  } else\n    r = newArray(this.channels, null);\n  Array.isArray(i) || (i = [i, i]);\n  let n = this.width + i[0] * 2, a = this.height + i[1] * 2, s = this.channels, o = Image.createFrom(this, { width: n, height: a });\n  copyImage(this, o, i[0], i[1]);\n  for (let h = i[0]; h < n - i[0]; h++)\n    for (let l = 0; l < s; l++) {\n      let f = r[l] || o.data[(i[1] * n + h) * s + l];\n      for (let b = 0; b < i[1]; b++)\n        o.data[(b * n + h) * s + l] = f;\n      f = r[l] || o.data[((a - i[1] - 1) * n + h) * s + l];\n      for (let b = a - i[1]; b < a; b++)\n        o.data[(b * n + h) * s + l] = f;\n    }\n  for (let h = 0; h < a; h++)\n    for (let l = 0; l < s; l++) {\n      let f = r[l] || o.data[(h * n + i[0]) * s + l];\n      for (let b = 0; b < i[0]; b++)\n        o.data[(h * n + b) * s + l] = f;\n      f = r[l] || o.data[(h * n + n - i[0] - 1) * s + l];\n      for (let b = n - i[0]; b < n; b++)\n        o.data[(h * n + b) * s + l] = f;\n    }\n  return o;\n}\nfunction colorDepth(e = 8) {\n  if (this.checkProcessable(\"colorDepth\", {\n    bitDepth: [1, 8, 16]\n  }), ![8, 16].includes(e))\n    throw Error(\"You need to specify the new colorDepth as 8 or 16\");\n  if (this.bitDepth === e)\n    return this.clone();\n  let i = Image.createFrom(this, { bitDepth: e });\n  switch (e) {\n    case 8:\n      if (this.bitDepth === 1)\n        for (let t = 0; t < this.size; t++)\n          this.getBit(t) && (i.data[t] = 255);\n      else\n        for (let t = 0; t < this.data.length; t++)\n          i.data[t] = this.data[t] >> 8;\n      break;\n    case 16:\n      if (this.bitDepth === 1)\n        for (let t = 0; t < this.size; t++)\n          this.getBit(t) && (i.data[t] = 65535);\n      else\n        for (let t = 0; t < this.data.length; t++)\n          i.data[t] = this.data[t] << 8 | this.data[t];\n      break;\n    default:\n      throw new Error(\"colorDepth conversion unexpected case\");\n  }\n  return i;\n}\nfunction rotateFree(e, i = {}) {\n  const {\n    interpolation: t = validInterpolations.nearestneighbor,\n    width: r = this.width,\n    height: n = this.height\n  } = i;\n  if (typeof e != \"number\")\n    throw new TypeError(\"degrees must be a number\");\n  const a = checkInterpolation(t), s = e * Math.PI / 180, o = Math.floor(\n    Math.abs(r * Math.cos(s)) + Math.abs(n * Math.sin(s))\n  ), h = Math.floor(\n    Math.abs(n * Math.cos(s)) + Math.abs(r * Math.sin(s))\n  ), l = Math.cos(-s), f = Math.sin(-s);\n  let b = o / 2, w = h / 2;\n  o % 2 === 0 ? (b = b - 0.5, h % 2 === 0 ? w = w - 0.5 : w = Math.floor(w)) : (b = Math.floor(b), h % 2 === 0 ? w = w - 0.5 : w = Math.floor(w));\n  const g = Math.floor(r / 2 - b), E = Math.floor(n / 2 - w);\n  if (this.bitDepth === 1) {\n    const k = new Image(o, h, {\n      kind: \"BINARY\",\n      parent: this\n    });\n    switch (a) {\n      case validInterpolations.nearestneighbor:\n        return rotateBinaryNearestNeighbor(\n          this,\n          k,\n          g,\n          E,\n          b,\n          w,\n          l,\n          f\n        );\n      case validInterpolations.bilinear:\n        return rotateBinaryBilinear(\n          this,\n          k,\n          g,\n          E,\n          b,\n          w,\n          l,\n          f\n        );\n      default:\n        throw new Error(\n          `unsupported rotate interpolation: ${a}`\n        );\n    }\n  } else {\n    const k = Image.createFrom(this, {\n      width: o,\n      height: h\n    });\n    switch (a) {\n      case validInterpolations.nearestneighbor:\n        return rotateNearestNeighbor(\n          this,\n          k,\n          g,\n          E,\n          b,\n          w,\n          l,\n          f\n        );\n      case validInterpolations.bilinear:\n        return rotateBilinear(\n          this,\n          k,\n          g,\n          E,\n          b,\n          w,\n          l,\n          f\n        );\n      default:\n        throw new Error(\n          `unsupported rotate interpolation: ${a}`\n        );\n    }\n  }\n}\nfunction rotateNearestNeighbor(e, i, t, r, n, a, s, o) {\n  for (let h = 0; h < i.width; h += 1)\n    for (let l = 0; l < i.height; l += 1)\n      for (let f = 0; f < e.channels; f++) {\n        let b = Math.round((h - n) * s - (l - a) * o + n) + t, w = Math.round((l - a) * s + (h - n) * o + a) + r;\n        b < 0 || b >= e.width || w < 0 || w >= e.height ? e.alpha === 1 && f === e.channels - 1 ? i.setValueXY(h, l, f, 0) : i.setValueXY(h, l, f, e.maxValue) : i.setValueXY(h, l, f, e.getValueXY(b, w, f));\n      }\n  return i;\n}\nfunction rotateBinaryNearestNeighbor(e, i, t, r, n, a, s, o) {\n  for (let h = 0; h < i.width; h += 1)\n    for (let l = 0; l < i.height; l += 1) {\n      let f = Math.round((h - n) * s - (l - a) * o + n) + t, b = Math.round((l - a) * s + (h - n) * o + a) + r;\n      (f < 0 || f >= e.width || b < 0 || b >= e.height || e.getBitXY(f, b)) && i.setBitXY(h, l);\n    }\n  return i;\n}\nfunction rotateBilinear(e, i, t, r, n, a, s, o) {\n  let h = e.width * e.channels;\n  for (let l = 0; l < i.height; l++)\n    for (let f = 0; f < i.width; f++) {\n      let b = (f - n) * s - (l - a) * o + n + t, w = (l - a) * s + (f - n) * o + a + r, g = b | 0, E = w | 0, k = b - g, A = w - E;\n      for (let T = 0; T < e.channels; T++)\n        if (b < 0 || b >= e.width || w < 0 || w >= e.height)\n          e.alpha === 1 && T === e.channels - 1 ? i.setValueXY(f, l, T, 0) : i.setValueXY(f, l, T, e.maxValue);\n        else {\n          let C = (E * e.width + g) * e.channels + T, D = e.data[C], $ = e.data[C + e.channels], P = e.data[C + h], z = e.data[C + h + e.channels], B = D + k * ($ - D) + A * (P - D) + k * A * (D - $ - P + z) | 0;\n          i.setValueXY(f, l, T, B);\n        }\n    }\n  return i;\n}\nfunction rotateBinaryBilinear(e, i, t, r, n, a, s, o) {\n  let h = e.width;\n  for (let l = 0; l < i.height; l++)\n    for (let f = 0; f < i.width; f++) {\n      let b = (f - n) * s - (l - a) * o + n + t, w = (l - a) * s + (f - n) * o + a + r, g = b | 0, E = w | 0, k = b - g, A = w - E;\n      if (b < 0 || b >= e.width || w < 0 || w >= e.height)\n        i.setBitXY(f, l);\n      else {\n        let T = E * e.width + g, C = e.getBit(T), D = e.getBit(T + 1), $ = e.getBit(T + h), P = e.getBit(T + 1 + h);\n        (C | k & D - C | A & $ - C | k & A & C - D - $ + P) > 0 && i.setBitXY(f, l);\n      }\n    }\n  return i;\n}\nfunction rotate$1(e, i) {\n  if (this.checkProcessable(\"rotate\", {\n    bitDepth: [1, 8, 16]\n  }), typeof e != \"number\")\n    throw new TypeError(\"angle must be a number\");\n  switch (e < 0 && (e = Math.ceil(-e / 360) * 360 + e), e % 360) {\n    case 0:\n      return this.clone();\n    case 90:\n      return rotateRight.call(this);\n    case 180:\n      return rotate180.call(this);\n    case 270:\n      return rotateLeft.call(this);\n    default:\n      return rotateFree.call(this, e, i);\n  }\n}\nfunction rotateLeft() {\n  if (this.bitDepth === 1) {\n    const e = new Image(this.height, this.width, {\n      kind: \"BINARY\",\n      parent: this\n    }), i = e.height - 1;\n    for (let t = 0; t < this.height; t++)\n      for (let r = 0; r < this.width; r++)\n        this.getBitXY(r, t) && e.setBitXY(t, i - r);\n    return e;\n  } else {\n    const e = Image.createFrom(this, {\n      width: this.height,\n      height: this.width\n    }), i = e.height - 1;\n    for (let t = 0; t < this.height; t++)\n      for (let r = 0; r < this.width; r++)\n        for (let n = 0; n < this.channels; n++)\n          e.setValueXY(t, i - r, n, this.getValueXY(r, t, n));\n    return e;\n  }\n}\nfunction rotateRight() {\n  if (this.bitDepth === 1) {\n    const e = new Image(this.height, this.width, {\n      kind: \"BINARY\",\n      parent: this\n    }), i = e.width - 1;\n    for (let t = 0; t < this.height; t++)\n      for (let r = 0; r < this.width; r++)\n        this.getBitXY(r, t) && e.setBitXY(i - t, r);\n    return e;\n  } else {\n    const e = Image.createFrom(this, {\n      width: this.height,\n      height: this.width\n    }), i = e.width - 1;\n    for (let t = 0; t < this.height; t++)\n      for (let r = 0; r < this.width; r++)\n        for (let n = 0; n < this.channels; n++)\n          e.setValueXY(i - t, r, n, this.getValueXY(r, t, n));\n    return e;\n  }\n}\nfunction rotate180() {\n  if (this.bitDepth === 1) {\n    const e = new Image(this.width, this.height, {\n      kind: \"BINARY\",\n      parent: this\n    }), i = e.width - 1, t = e.height - 1;\n    for (let r = 0; r < this.height; r++)\n      for (let n = 0; n < this.width; n++)\n        this.getBitXY(n, r) && e.setBitXY(i - n, t - r);\n    return e;\n  } else {\n    const e = Image.createFrom(this), i = e.width - 1, t = e.height - 1;\n    for (let r = 0; r < this.height; r++)\n      for (let n = 0; n < this.width; n++)\n        for (let a = 0; a < this.channels; a++)\n          e.setValueXY(\n            i - n,\n            t - r,\n            a,\n            this.getValueXY(n, r, a)\n          );\n    return e;\n  }\n}\nfunction insert(e, i = {}) {\n  const t = getImageParameters(e);\n  this.checkProcessable(\"insert\", t);\n  let { x: r = 0, y: n = 0 } = i;\n  const a = getOutputImageOrInPlace(this, i, { copy: !0 }), s = Math.min(a.height, n + e.height), o = Math.min(a.width, r + e.width);\n  if (a.bitDepth === 1)\n    for (let h = n; h < s; h++)\n      for (let l = r; l < o; l++)\n        e.getBitXY(l - r, h - n) ? a.setBitXY(l, h) : a.clearBitXY(l, h);\n  else\n    for (let h = n; h < s; h++)\n      for (let l = r; l < o; l++)\n        a.setPixelXY(l, h, e.getPixelXY(l - r, h - n));\n  return a;\n}\nfunction setBorder(e = {}) {\n  let { size: i = 0, algorithm: t = \"copy\", color: r } = e;\n  if (this.checkProcessable(\"setBorder\", {\n    bitDepth: [8, 16, 32, 64]\n  }), t === \"set\") {\n    if (r.length !== this.channels)\n      throw new Error(\n        `setBorder: the color array must have the same length as the number of channels. Here: ${this.channels}`\n      );\n    for (let o = 0; o < r.length; o++)\n      r[o] === 0 && (r[o] = 1e-3);\n  } else\n    r = newArray(this.channels, null);\n  Array.isArray(i) || (i = [i, i]);\n  let n = i[0], a = i[1], s = this.channels;\n  for (let o = n; o < this.width - n; o++)\n    for (let h = 0; h < s; h++) {\n      let l = r[h] || this.data[(o + this.width * a) * s + h];\n      for (let f = 0; f < a; f++)\n        this.data[(f * this.width + o) * s + h] = l;\n      l = r[h] || this.data[(o + this.width * (this.height - a - 1)) * s + h];\n      for (let f = this.height - a; f < this.height; f++)\n        this.data[(f * this.width + o) * s + h] = l;\n    }\n  for (let o = 0; o < this.height; o++)\n    for (let h = 0; h < s; h++) {\n      let l = r[h] || this.data[(o * this.width + n) * s + h];\n      for (let f = 0; f < n; f++)\n        this.data[(o * this.width + f) * s + h] = l;\n      l = r[h] || this.data[(o * this.width + this.width - n - 1) * s + h];\n      for (let f = this.width - n; f < this.width; f++)\n        this.data[(o * this.width + f) * s + h] = l;\n    }\n  return this;\n}\nfunction split(e = {}) {\n  let { preserveAlpha: i = !0 } = e;\n  if (this.checkProcessable(\"split\", {\n    bitDepth: [8, 16]\n  }), this.components === 1)\n    return new Stack([this.clone()]);\n  let t = new Stack(), r = this.data;\n  if (this.alpha && i)\n    for (let n = 0; n < this.components; n++) {\n      let a = Image.createFrom(this, {\n        components: 1,\n        alpha: !0,\n        colorModel: GREY$1\n      }), s = 0;\n      for (let o = 0; o < r.length; o += this.channels)\n        a.data[s++] = r[o + n], a.data[s++] = r[o + this.components];\n      t.push(a);\n    }\n  else\n    for (let n = 0; n < this.channels; n++) {\n      let a = Image.createFrom(this, {\n        components: 1,\n        alpha: !1,\n        colorModel: GREY$1\n      }), s = 0;\n      for (let o = 0; o < r.length; o += this.channels)\n        a.data[s++] = r[o + n];\n      t.push(a);\n    }\n  return t;\n}\nfunction getChannel(e, i = {}) {\n  let { keepAlpha: t = !1, mergeAlpha: r = !1 } = i;\n  t &= this.alpha, r &= this.alpha, this.checkProcessable(\"getChannel\", {\n    bitDepth: [8, 16]\n  }), e = validateChannel(this, e);\n  let n = Image.createFrom(this, {\n    components: 1,\n    alpha: t,\n    colorModel: GREY$1\n  }), a = 0;\n  for (let s = 0; s < this.data.length; s += this.channels)\n    r ? n.data[a++] = this.data[s + e] * this.data[s + this.components] / this.maxValue : (n.data[a++] = this.data[s + e], t && (n.data[a++] = this.data[s + this.components]));\n  return n;\n}\nfunction combineChannels(e = defaultCombineMethod, i = {}) {\n  let { mergeAlpha: t = !1, keepAlpha: r = !1 } = i;\n  t &= this.alpha, r &= this.alpha, this.checkProcessable(\"combineChannels\", {\n    bitDepth: [8, 16]\n  });\n  let n = Image.createFrom(this, {\n    components: 1,\n    alpha: r,\n    colorModel: GREY$1\n  }), a = 0;\n  for (let s = 0; s < this.size; s++) {\n    let o = e(this.getPixel(s));\n    t ? n.data[a++] = o * this.data[s * this.channels + this.components] / this.maxValue : (n.data[a++] = o, r && (n.data[a++] = this.data[s * this.channels + this.components]));\n  }\n  return n;\n}\nfunction defaultCombineMethod(e) {\n  return (e[0] + e[1] + e[2]) / 3;\n}\nfunction setChannel(e, i) {\n  if (this.checkProcessable(\"setChannel\", {\n    bitDepth: [8, 16]\n  }), i.checkProcessable(\"setChannel (image parameter check)\", {\n    bitDepth: [this.bitDepth],\n    alpha: [0],\n    components: [1]\n  }), i.width !== this.width || i.height !== this.height)\n    throw new Error(\"Images must have exactly the same width and height\");\n  e = validateChannel(this, e);\n  let t = e;\n  for (let r = 0; r < i.data.length; r++)\n    this.data[t] = i.data[r], t += this.channels;\n  return this;\n}\nfunction getSimilarity(e, i = {}) {\n  let {\n    shift: t = [0, 0],\n    average: r,\n    channels: n,\n    defaultAlpha: a,\n    normalize: s,\n    border: o = [0, 0]\n  } = i;\n  if (this.checkProcessable(\"getSimilarity\", {\n    bitDepth: [8, 16]\n  }), Array.isArray(o) || (o = [o, o]), n = validateArrayOfChannels(this, {\n    channels: n,\n    defaultAlpha: a\n  }), this.bitDepth !== e.bitDepth)\n    throw new Error(\"Both images must have the same bitDepth\");\n  if (this.channels !== e.channels)\n    throw new Error(\"Both images must have the same number of channels\");\n  if (this.colorModel !== e.colorModel)\n    throw new Error(\"Both images must have the same colorModel\");\n  typeof r > \"u\" && (r = !0);\n  let h = Math.max(o[0], -t[0]), l = Math.min(this.width - o[0], this.width - t[0]), f = Math.max(o[1], -t[1]), b = Math.min(this.height - o[1], this.height - t[1]), w = newArray(n.length, 0);\n  for (let g = 0; g < n.length; g++) {\n    let E = n[g], k = s ? this.sum[E] : Math.max(this.sum[E], e.sum[E]), A = s ? e.sum[E] : Math.max(this.sum[E], e.sum[E]);\n    if (k !== 0 && A !== 0)\n      for (let T = h; T < l; T++)\n        for (let C = f; C < b; C++) {\n          let D = T * this.multiplierX + C * this.multiplierY + E, $ = D + t[0] * this.multiplierX + t[1] * this.multiplierY;\n          w[g] += Math.min(\n            this.data[D] / k,\n            e.data[$] / A\n          );\n        }\n  }\n  return r ? w.reduce((g, E) => g + E) / w.length : w;\n}\nfunction getPixelsGrid(e = {}) {\n  let { sampling: i = [10, 10], painted: t = !1, mask: r } = e;\n  this.checkProcessable(\"getPixelsGrid\", {\n    bitDepth: [8, 16],\n    channels: 1\n  }), Array.isArray(i) || (i = [i, i]);\n  const n = i[0], a = i[1], s = [], o = [], h = this.width / n, l = this.height / a;\n  let f = Math.floor(h / 2);\n  for (let w = 0; w < n; w++) {\n    let g = Math.floor(l / 2);\n    for (let E = 0; E < a; E++) {\n      let k = Math.round(f), A = Math.round(g);\n      (!r || r.getBitXY(k, A)) && (s.push([k, A]), o.push(this.getPixelXY(k, A))), g += l;\n    }\n    f += h;\n  }\n  const b = { xyS: s, zS: o };\n  return t && (b.painted = this.rgba8().paintPoints(s)), b;\n}\nfunction Matrix(e, i, t) {\n  const r = new Array(e);\n  for (let n = 0; n < e; n++)\n    r[n] = new Array(i);\n  if (t)\n    for (let n = 0; n < e; n++)\n      for (let a = 0; a < i; a++)\n        r[n][a] = t;\n  return r.width = e, r.height = i, Object.setPrototypeOf(r, Matrix.prototype), r;\n}\nMatrix.prototype.localMin = function(e, i) {\n  let t = this[e][i], r = [e, i];\n  for (let n = Math.max(0, e - 1); n < Math.min(this.length, e + 2); n++)\n    for (let a = Math.max(0, i - 1); a < Math.min(this[0].length, i + 2); a++)\n      this[n][a] < t && (t = this[n][a], r = [n, a]);\n  return {\n    position: r,\n    value: t\n  };\n};\nMatrix.prototype.localMax = function(e, i) {\n  let t = this[e][i], r = [e, i];\n  for (let n = Math.max(0, e - 1); n < Math.min(this.length, e + 2); n++)\n    for (let a = Math.max(0, i - 1); a < Math.min(this[0].length, i + 2); a++)\n      this[n][a] > t && (t = this[n][a], r = [n, a]);\n  return {\n    position: r,\n    value: t\n  };\n};\nMatrix.prototype.localSearch = function(e, i, t) {\n  let r = [];\n  for (let n = Math.max(0, e - 1); n < Math.min(this.length, e + 2); n++)\n    for (let a = Math.max(0, i - 1); a < Math.min(this[0].length, i + 2); a++)\n      this[n][a] === t && r.push([n, a]);\n  return r;\n};\nfunction getBestMatch(e, i = {}) {\n  let { border: t } = i;\n  if (this.checkProcessable(\"getChannel\", {\n    bitDepth: [8, 16]\n  }), this.bitDepth !== e.bitDepth)\n    throw new Error(\"Both images must have the same bitDepth\");\n  if (this.channels !== e.channels)\n    throw new Error(\"Both images must have the same number of channels\");\n  if (this.colorModel !== e.colorModel)\n    throw new Error(\"Both images must have the same colorModel\");\n  let r = new Matrix(e.width, e.height, -1 / 0), n = Math.floor(e.width / 2), a = Math.floor(e.height / 2), s = n, o = a, h = !1;\n  for (; !h; ) {\n    let l = r.localSearch(\n      n,\n      a,\n      -1 / 0\n    );\n    for (let b = 0; b < l.length; b++) {\n      let w = l[b], g = this.getSimilarity(e, {\n        border: t,\n        shift: [s - w[0], o - w[1]]\n      });\n      r[w[0]][w[1]] = g;\n    }\n    let f = r.localMax(n, a);\n    f.position[0] !== n || f.position[1] !== a ? (n = f.position[0], a = f.position[1]) : h = !0;\n  }\n  return [n - s, a - o];\n}\nfunction getRow(e, i = 0) {\n  this.checkProcessable(\"getRow\", {\n    bitDepth: [8, 16]\n  }), checkRow(this, e), checkChannel(this, i);\n  let t = new Array(this.width), r = 0, n = e * this.width * this.channels + i, a = n + this.width * this.channels;\n  for (let s = n; s < a; s += this.channels)\n    t[r++] = this.data[s];\n  return t;\n}\nfunction getColumn(e, i = 0) {\n  this.checkProcessable(\"getColumn\", {\n    bitDepth: [8, 16]\n  }), checkColumn(this, e), checkChannel(this, i);\n  let t = new Array(this.height), r = 0, n = this.width * this.channels;\n  for (let a = i + e * this.channels; a < this.data.length; a += n)\n    t[r++] = this.data[a];\n  return t;\n}\nfunction getMatrix(e = {}) {\n  let { channel: i } = e;\n  if (this.checkProcessable(\"getMatrix\", {\n    bitDepth: [8, 16]\n  }), i === void 0) {\n    if (this.components > 1)\n      throw new RangeError(\n        \"You need to define the channel for an image that contains more than one channel\"\n      );\n    i = 0;\n  }\n  let t = new Matrix$1(this.height, this.width);\n  for (let r = 0; r < this.height; r++)\n    for (let n = 0; n < this.width; n++)\n      t.set(r, n, this.getValueXY(n, r, i));\n  return t;\n}\nfunction setMatrix(e, i = {}) {\n  e = new Matrix$1(e);\n  let { channel: t } = i;\n  if (this.checkProcessable(\"getMatrix\", {\n    bitDepth: [8, 16]\n  }), t === void 0) {\n    if (this.components > 1)\n      throw new RangeError(\n        \"You need to define the channel for an image that contains more than one channel\"\n      );\n    t = 0;\n  }\n  if (this.width !== e.columns || this.height !== e.rows)\n    throw new RangeError(\n      \"The size of the matrix must be equal to the size of the image\"\n    );\n  for (let r = 0; r < this.height; r++)\n    for (let n = 0; n < this.width; n++)\n      this.setValueXY(n, r, t, e.get(r, n));\n  return this;\n}\nfunction getPixelsArray() {\n  this.checkProcessable(\"getPixelsArray\", {\n    bitDepth: [8, 16, 32]\n  });\n  let e = new Array(this.size), i = 0;\n  for (let t = 0; t < this.data.length; t += this.channels) {\n    let r = new Array(this.components);\n    for (let n = 0; n < this.components; n++)\n      r[n] = this.data[t + n];\n    e[i++] = r;\n  }\n  return e;\n}\nfunction getIntersection(e) {\n  let i = this, t = i.getClosestCommonParent(e), r = i.getRelativePosition(t, {\n    defaultFurther: !0\n  }), n = getRelativePositionForAllPixels(i, r), a = e.getRelativePosition(t, {\n    defaultFurther: !0\n  }), s = getRelativePositionForAllPixels(e, a), o = getCommonSurface(n, s), h = {\n    whitePixelsMask1: [],\n    whitePixelsMask2: [],\n    commonWhitePixels: []\n  };\n  for (let l = 0; l < o.length; l++) {\n    let f = o[l], b = [\n      f[0] - r[0],\n      f[1] - r[1]\n    ], w = [\n      f[0] - a[0],\n      f[1] - a[1]\n    ], g = i.getBitXY(b[0], b[1]), E = e.getBitXY(w[0], w[1]);\n    g === 1 && E === 1 && h.commonWhitePixels.push(f);\n  }\n  for (let l = 0; l < n.length; l++) {\n    let f, b;\n    l !== 0 && (f = Math.floor(l / i.width), b = l % i.width), i.getBitXY(f, b) === 1 && h.whitePixelsMask1.push(n[l]);\n  }\n  for (let l = 0; l < s.length; l++) {\n    let f = 0, b = 0;\n    l !== 0 && (f = Math.floor(l / e.width), b = l % e.width), e.getBitXY(f, b) === 1 && h.whitePixelsMask2.push(s[l]);\n  }\n  return h;\n}\nfunction getRelativePositionForAllPixels(e, i) {\n  let t = [];\n  for (let r = 0; r < e.height; r++)\n    for (let n = 0; n < e.width; n++) {\n      let a = [r, n];\n      t.push([\n        a[0] + i[0],\n        a[1] + i[1]\n      ]);\n    }\n  return t;\n}\nfunction getCommonSurface(e, i) {\n  let t = 0, r = 0, n = [];\n  for (; t < e.length && r < i.length; )\n    e[t][0] === i[r][0] && e[t][1] === i[r][1] ? (n.push(e[t]), t++, r++) : e[t][0] < i[r][0] || e[t][0] === i[r][0] && e[t][1] < i[r][1] ? t++ : r++;\n  return n;\n}\nfunction getClosestCommonParent(e) {\n  let i = getDepth(this), t = getDepth(e), r;\n  if (i >= t ? r = getFurthestParent(this, i) : r = getFurthestParent(e, t), i === 0 || t === 0)\n    return r;\n  let n = this, a = e;\n  for (; i !== t; )\n    if (i > t) {\n      if (n = n.parent, n === null)\n        return r;\n      i = i - 1;\n    } else {\n      if (a = a.parent, a === null)\n        return r;\n      t = t - 1;\n    }\n  for (; n !== a && n !== null && a !== null; )\n    if (n = n.parent, a = a.parent, n === null || a === null)\n      return r;\n  return n !== a ? r : n;\n}\nfunction getDepth(e) {\n  let i = 0, t = e;\n  for (; t.parent != null; )\n    t = t.parent, i++;\n  return i;\n}\nfunction getFurthestParent(e, i) {\n  let t = e;\n  for (; i > 0; )\n    t = t.parent, i = i - 1;\n  return t;\n}\nconst defaultOptions$1 = {\n  lowThreshold: 10,\n  highThreshold: 30,\n  gaussianBlur: 1.1\n}, Gx = [\n  [-1, 0, 1],\n  [-2, 0, 2],\n  [-1, 0, 1]\n], Gy = [\n  [-1, -2, -1],\n  [0, 0, 0],\n  [1, 2, 1]\n], convOptions = {\n  bitDepth: 32,\n  mode: \"periodic\"\n};\nfunction cannyEdgeDetector(e, i) {\n  e.checkProcessable(\"Canny edge detector\", {\n    bitDepth: 8,\n    channels: 1,\n    components: 1\n  }), i = Object.assign({}, defaultOptions$1, i);\n  const t = e.width, r = e.height, n = e.maxValue, a = {\n    sigma: i.gaussianBlur,\n    radius: 3\n  }, s = e.gaussianFilter(a), o = s.convolution(Gy, convOptions), h = s.convolution(Gx, convOptions), l = h.hypotenuse(o), f = e.constructor, b = new f(t, r, {\n    kind: \"GREY\",\n    bitDepth: 32\n  }), w = new f(t, r, {\n    kind: \"GREY\",\n    bitDepth: 32\n  }), g = new f(t, r, {\n    kind: \"GREY\"\n  });\n  for (var E = 1; E < t - 1; E++)\n    for (var k = 1; k < r - 1; k++) {\n      var A = (Math.round(Math.atan2(h.getValueXY(E, k, 0), o.getValueXY(E, k, 0)) * (5 / Math.PI)) + 5) % 5;\n      A === 0 && (l.getValueXY(E, k, 0) <= l.getValueXY(E, k - 1, 0) || l.getValueXY(E, k, 0) <= l.getValueXY(E, k + 1, 0)) || A === 1 && (l.getValueXY(E, k, 0) <= l.getValueXY(E - 1, k + 1, 0) || l.getValueXY(E, k, 0) <= l.getValueXY(E + 1, k - 1, 0)) || A === 2 && (l.getValueXY(E, k, 0) <= l.getValueXY(E - 1, k, 0) || l.getValueXY(E, k, 0) <= l.getValueXY(E + 1, k, 0)) || A === 3 && (l.getValueXY(E, k, 0) <= l.getValueXY(E - 1, k - 1, 0) || l.getValueXY(E, k, 0) <= l.getValueXY(E + 1, k + 1, 0)) || b.setValueXY(E, k, 0, l.getValueXY(E, k, 0));\n    }\n  for (E = 0; E < t * r; ++E) {\n    var T = b.data[E], C = 0;\n    T > i.highThreshold && (C++, g.data[E] = n), T > i.lowThreshold && C++, w.data[E] = C;\n  }\n  var D = [];\n  for (E = 1; E < t - 1; ++E)\n    for (k = 1; k < r - 1; ++k)\n      if (w.getValueXY(E, k, 0) === 1) {\n        e: for (var $ = E - 1; $ < E + 2; ++$)\n          for (var P = k - 1; P < k + 2; ++P)\n            if (w.getValueXY($, P, 0) === 2) {\n              D.push([E, k]), g.setValueXY(E, k, 0, n);\n              break e;\n            }\n      }\n  for (; D.length > 0; ) {\n    var z = [];\n    for (E = 0; E < D.length; ++E)\n      for (k = -1; k < 2; ++k)\n        for ($ = -1; $ < 2; ++$)\n          if (!(k === 0 && $ === 0)) {\n            var B = D[E][0] + k, F = D[E][1] + $;\n            w.getValueXY(B, F, 0) === 1 && g.getValueXY(B, F, 0) === 0 && (z.push([B, F]), g.setValueXY(B, F, 0, n));\n          }\n    D = z;\n  }\n  return g;\n}\nfunction cannyEdge(e) {\n  return cannyEdgeDetector(this, e);\n}\nfunction extract(e, i = {}) {\n  let { position: t } = i;\n  if (this.checkProcessable(\"extract\", {\n    bitDepth: [1, 8, 16]\n  }), !t && (t = e.getRelativePosition(this), !t))\n    throw new Error(\n      \"extract : can not extract an image because the relative position can not be determined, try to specify manually the position as an array of 2 elements [x,y].\"\n    );\n  if (this.bitDepth > 1) {\n    let r = Image.createFrom(this, {\n      width: e.width,\n      height: e.height,\n      alpha: 1,\n      // we force the alpha, otherwise difficult to extract a mask ...\n      position: t,\n      parent: this\n    });\n    for (let n = 0; n < e.width; n++)\n      for (let a = 0; a < e.height; a++) {\n        for (let s = 0; s < this.channels; s++) {\n          let o = this.getValueXY(\n            n + t[0],\n            a + t[1],\n            s\n          );\n          r.setValueXY(n, a, s, o);\n        }\n        e.getBitXY(n, a) || r.setValueXY(n, a, this.components, 0);\n      }\n    return r;\n  } else {\n    let r = Image.createFrom(this, {\n      width: e.width,\n      height: e.height,\n      position: t,\n      parent: this\n    });\n    for (let n = 0; n < e.height; n++)\n      for (let a = 0; a < e.width; a++)\n        e.getBitXY(a, n) && this.getBitXY(a + t[0], n + t[1]) && r.setBitXY(a, n);\n    return r;\n  }\n}\nvar fastList = { exports: {} }, hasRequiredFastList;\nfunction requireFastList() {\n  return hasRequiredFastList || (hasRequiredFastList = 1, function(e, i) {\n    (function() {\n      function t(n, a, s) {\n        this.next = s, s && (s.prev = this), this.prev = a, a && (a.next = this), this.data = n;\n      }\n      function r() {\n        if (!(this instanceof r)) return new r();\n        this._head = null, this._tail = null, this.length = 0;\n      }\n      r.prototype = {\n        push: function(n) {\n          this._tail = new t(n, this._tail, null), this._head || (this._head = this._tail), this.length++;\n        },\n        pop: function() {\n          if (this.length !== 0) {\n            var n = this._tail;\n            return this._tail = n.prev, n.prev && (n.prev = this._tail.next = null), this.length--, this.length === 1 ? this._head = this._tail : this.length === 0 && (this._head = this._tail = null), n.data;\n          }\n        },\n        unshift: function(n) {\n          this._head = new t(n, null, this._head), this._tail || (this._tail = this._head), this.length++;\n        },\n        shift: function() {\n          if (this.length !== 0) {\n            var n = this._head;\n            return this._head = n.next, n.next && (n.next = this._head.prev = null), this.length--, this.length === 1 ? this._tail = this._head : this.length === 0 && (this._head = this._tail = null), n.data;\n          }\n        },\n        item: function(n) {\n          n < 0 && (n = this.length + n);\n          for (var a = this._head; n-- > 0 && a; ) a = a.next;\n          return a ? a.data : void 0;\n        },\n        slice: function(n, a) {\n          if (n || (n = 0), a || (a = this.length), a < 0 && (a = this.length + a), n < 0 && (n = this.length + n), a === n)\n            return [];\n          if (a < n)\n            throw new Error(\"invalid offset: \" + n + \",\" + a + \" (length=\" + this.length + \")\");\n          for (var s = a - n, o = new Array(s), h = 0, l = this._head; n-- > 0 && l; ) l = l.next;\n          for (; h < s && l; )\n            o[h++] = l.data, l = l.next;\n          return o;\n        },\n        drop: function() {\n          r.call(this);\n        },\n        forEach: function(n, a) {\n          for (var s = this._head, o = 0, h = this.length; o < h && s; )\n            n.call(a || this, s.data, o, this), s = s.next, o++;\n        },\n        map: function(n, a) {\n          var s = new r();\n          return this.forEach(function(o, h, l) {\n            s.push(n.call(a || l, o, h, l));\n          }), s;\n        },\n        filter: function(n, a) {\n          var s = new r();\n          return this.forEach(function(o, h, l) {\n            n.call(a || l, o, h, l) && s.push(o);\n          }), s;\n        },\n        reduce: function(n, a, s) {\n          var o = 0, h = this._head, l = this.length;\n          for (a || (o = 1, a = h && h.data, h = h && h.next); o < l && h; )\n            a = n.call(s || this, a, h.data, this), o++, h = h.next;\n          return a;\n        }\n      }, e.exports = r;\n    })();\n  }(fastList)), fastList.exports;\n}\nvar fastListExports = requireFastList();\nconst LinkedList = /* @__PURE__ */ getDefaultExportFromCjs(fastListExports);\nfunction floodFill(e = {}) {\n  const { x: i = 0, y: t = 0, inPlace: r = !0 } = e, n = r ? this : Image.createFrom(this);\n  if (this.checkProcessable(\"floodFill\", { bitDepth: 1 }), this.getBitXY(i, t)) return n;\n  const s = new LinkedList();\n  for (s.push(new Node(i, t)); s.length > 0; ) {\n    const o = s.shift();\n    n.setBitXY(o.x, o.y);\n    for (let h = o.x + 1; h < this.width && (!n.getBitXY(h, o.y) && !this.getBitXY(h, o.y)); h++)\n      n.setBitXY(h, o.y), o.y + 1 < this.height && !this.getBitXY(h, o.y + 1) && s.push(new Node(h, o.y + 1)), o.y - 1 >= 0 && !this.getBitXY(h, o.y - 1) && s.push(new Node(h, o.y - 1));\n    for (let h = o.x - 1; h >= 0 && (!n.getBitXY(h, o.y) && !this.getBitXY(h, o.y)); h++)\n      n.setBitXY(h, o.y), o.y + 1 < this.height && !this.getBitXY(h, o.y + 1) && s.push(new Node(h, o.y + 1)), o.y - 1 >= 0 && !this.getBitXY(h, o.y - 1) && s.push(new Node(h, o.y - 1));\n  }\n  return n;\n}\nfunction Node(e, i) {\n  this.x = e, this.y = i;\n}\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function(e) {\n    for (var i = 1; i < arguments.length; i++) {\n      var t = arguments[i];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (e[r] = t[r]);\n    }\n    return e;\n  }, _extends.apply(null, arguments);\n}\nfunction hsv2rgb(e, i, t) {\n  i = i / 100, t = t / 100;\n  var r = [], n = t * i, a = e / 60, s = n * (1 - Math.abs(a % 2 - 1)), o = t - n;\n  return a >= 0 && a < 1 ? r = [n, s, 0] : a >= 1 && a < 2 ? r = [s, n, 0] : a >= 2 && a < 3 ? r = [0, n, s] : e >= 3 && a < 4 ? r = [0, s, n] : e >= 4 && a < 5 ? r = [s, 0, n] : e >= 5 && a <= 6 ? r = [n, 0, s] : r = [0, 0, 0], {\n    r: Math.round(255 * (r[0] + o)),\n    g: Math.round(255 * (r[1] + o)),\n    b: Math.round(255 * (r[2] + o))\n  };\n}\nfunction hsl2hsv(e, i, t) {\n  return i *= (t < 50 ? t : 100 - t) / 100, {\n    h: e,\n    s: 2 * i / (t + i) * 100,\n    v: t + i\n  };\n}\nfunction hsl2rgb$1(e, i, t) {\n  var r = hsl2hsv(e, i, t);\n  return hsv2rgb(r.h, r.s, r.v);\n}\nvar colors = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 132, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 255, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 203],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [119, 128, 144],\n  slategrey: [119, 128, 144],\n  snow: [255, 255, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 5]\n};\nfunction parse(e) {\n  return named(e) || hex3(e) || hex6(e) || rgb(e) || rgba$1(e) || hsl(e) || hsla(e);\n}\nfunction named(e) {\n  var i = colors[e.toLowerCase()];\n  if (i)\n    return {\n      r: i[0],\n      g: i[1],\n      b: i[2],\n      a: 100\n    };\n}\nfunction rgb(e) {\n  var i = e.match(/rgb\\(([^)]+)\\)/);\n  if (i) {\n    var t = i[1].split(/ *, */).map(Number);\n    return {\n      r: t[0],\n      g: t[1],\n      b: t[2],\n      a: 100\n    };\n  }\n}\nfunction rgba$1(e) {\n  var i = e.match(/rgba\\(([^)]+)\\)/);\n  if (i) {\n    var t = i[1].split(/ *, */).map(Number);\n    return {\n      r: t[0],\n      g: t[1],\n      b: t[2],\n      a: t[3] * 100\n    };\n  }\n}\nfunction hex6(e) {\n  if (e[0] === \"#\" && e.length === 7)\n    return {\n      r: parseInt(e.slice(1, 3), 16),\n      g: parseInt(e.slice(3, 5), 16),\n      b: parseInt(e.slice(5, 7), 16),\n      a: 100\n    };\n}\nfunction hex3(e) {\n  if (e[0] === \"#\" && e.length === 4)\n    return {\n      r: parseInt(e[1] + e[1], 16),\n      g: parseInt(e[2] + e[2], 16),\n      b: parseInt(e[3] + e[3], 16),\n      a: 100\n    };\n}\nfunction hsl(e) {\n  var i = e.match(/hsl\\(([^)]+)\\)/);\n  if (i) {\n    var t = i[1].split(/ *, */), r = parseInt(t[0], 10), n = parseInt(t[1], 10), a = parseInt(t[2], 10), s = hsl2rgb$1(r, n, a);\n    return _extends({}, s, {\n      a: 100\n    });\n  }\n}\nfunction hsla(e) {\n  var i = e.match(/hsla\\(([^)]+)\\)/);\n  if (i) {\n    var t = i[1].split(/ *, */), r = parseInt(t[0], 10), n = parseInt(t[1], 10), a = parseInt(t[2], 10), s = parseInt(parseFloat(t[3]) * 100, 10), o = hsl2rgb$1(r, n, a);\n    return _extends({}, o, {\n      a: s\n    });\n  }\n}\nfunction css2array(e) {\n  let i = parse(e);\n  return [i.r, i.g, i.b, Math.round(i.a * 255 / 100)];\n}\nfunction hue2rgb(e, i, t) {\n  return t < 0 && (t += 1), t > 1 && (t -= 1), t < 1 / 6 ? e + (i - e) * 6 * t : t < 1 / 2 ? i : t < 2 / 3 ? e + (i - e) * (2 / 3 - t) * 6 : e;\n}\nfunction hsl2rgb(e, i, t) {\n  let r, n, a, s, o, h;\n  return i /= 100, t /= 100, i === 0 ? s = o = h = t * 255 : (t <= 0.5 ? n = t * (i + 1) : n = t + i - t * i, r = t * 2 - n, a = e / 360, s = hue2rgb(r, n, a + 1 / 3), o = hue2rgb(r, n, a), h = hue2rgb(r, n, a - 1 / 3)), { r: s, g: o, b: h };\n}\nfunction getDistinctColors(e) {\n  let i = new Array(e), t = 0;\n  for (let r = 0; r < 360; r += 360 / e) {\n    t++;\n    let n = hsl2rgb(r, 100, 30 + t % 4 * 15);\n    i[t - 1] = [\n      Math.round(n.r * 255),\n      Math.round(n.g * 255),\n      Math.round(n.b * 255)\n    ];\n  }\n  return i;\n}\nfunction getRandomColor() {\n  return [\n    Math.floor(Math.random() * 256),\n    Math.floor(Math.random() * 256),\n    Math.floor(Math.random() * 256)\n  ];\n}\nfunction getColors(e) {\n  let {\n    color: i,\n    colors: t,\n    randomColors: r,\n    // true / false\n    numberColors: n = 50\n  } = e;\n  if (i && !Array.isArray(i) && (i = css2array(i)), i)\n    return [i];\n  if (t)\n    return t = t.map(function(a) {\n      return Array.isArray(a) ? a : css2array(a);\n    }), t;\n  if (r) {\n    t = new Array(n);\n    for (let a = 0; a < n; a++)\n      t[a] = getRandomColor();\n  }\n  return getDistinctColors(n);\n}\nfunction paintLabels(e, i, t = {}) {\n  let { color: r = \"blue\", colors: n, font: a = \"12px Helvetica\", rotate: s = 0 } = t;\n  if (this.checkProcessable(\"paintMasks\", {\n    channels: [3, 4],\n    bitDepth: [8, 16],\n    colorModel: RGB$1\n  }), !Array.isArray(e))\n    throw Error(\"paintLabels: labels must be an array\");\n  if (!Array.isArray(i))\n    throw Error(\"paintLabels: positions must be an array\");\n  if (r && !Array.isArray(r) && (r = css2array(r)), n ? n = n.map(function(l) {\n    return Array.isArray(l) ? l : css2array(l);\n  }) : n = [r], e.length !== i.length)\n    throw Error(\n      \"paintLabels: positions and labels must be arrays from the same size\"\n    );\n  Array.isArray(a) || (a = [a]), Array.isArray(s) || (s = [s]);\n  let h = this.getCanvas().getContext(\"2d\");\n  for (let l = 0; l < e.length; l++) {\n    h.save();\n    let f = n[l % n.length];\n    h.fillStyle = `rgba(${f[0]},${f[1]},${f[2]},${f[3] / this.maxValue})`, h.font = a[l % a.length];\n    let b = i[l];\n    h.translate(b[0], b[1]), h.rotate(s[l % s.length] / 180 * Math.PI), h.fillText(e[l], 0, 0), h.restore();\n  }\n  return this.data = Uint8Array.from(\n    h.getImageData(0, 0, this.width, this.height).data\n  ), this;\n}\nfunction paintMasks(e, i = {}) {\n  let {\n    alpha: t = 255,\n    labels: r = [],\n    labelsPosition: n = [],\n    labelColor: a = \"blue\",\n    labelFont: s = \"12px Helvetica\"\n  } = i;\n  this.checkProcessable(\"paintMasks\", {\n    channels: [3, 4],\n    bitDepth: [8, 16],\n    colorModel: RGB$1\n  });\n  let o = getColors(\n    Object.assign({}, i, { numberColors: e.length })\n  );\n  Array.isArray(e) || (e = [e]);\n  for (let h = 0; h < e.length; h++) {\n    let l = e[h], f = o[h % o.length];\n    for (let b = 0; b < l.width; b++)\n      for (let w = 0; w < l.height; w++)\n        if (l.getBitXY(b, w))\n          for (let g = 0; g < Math.min(this.components, f.length); g++)\n            if (t === 255)\n              this.setValueXY(\n                b + l.position[0],\n                w + l.position[1],\n                g,\n                f[g]\n              );\n            else {\n              let E = this.getValueXY(\n                b + l.position[0],\n                w + l.position[1],\n                g\n              );\n              E = Math.round(\n                (E * (255 - t) + f[g] * t) / 255\n              ), this.setValueXY(\n                b + l.position[0],\n                w + l.position[1],\n                g,\n                E\n              );\n            }\n  }\n  if (Array.isArray(r) && r.length > 0) {\n    let l = this.getCanvas().getContext(\"2d\");\n    l.fillStyle = a, l.font = s;\n    for (let f = 0; f < Math.min(e.length, r.length); f++) {\n      let b = n[f] ? n[f] : e[f].position;\n      l.fillText(r[f], b[0], b[1]);\n    }\n    this.data = Uint8Array.from(\n      l.getImageData(0, 0, this.width, this.height).data\n    );\n  }\n  return this;\n}\nfunction zerosMatrix(e, i) {\n  let t = new Array(e);\n  for (let r = 0; r < e; r++)\n    t[r] = new Array(i).fill(0);\n  return t;\n}\nconst cross = [\n  [0, 0, 1, 0, 0],\n  [0, 0, 1, 0, 0],\n  [1, 1, 1, 1, 1],\n  [0, 0, 1, 0, 0],\n  [0, 0, 1, 0, 0]\n], smallCross = [\n  [0, 1, 0],\n  [1, 1, 1],\n  [0, 1, 0]\n];\nclass Shape {\n  constructor(i = {}) {\n    let { kind: t = \"cross\", shape: r, size: n, width: a, height: s, filled: o = !0 } = i;\n    if (n && (a = n, s = n), r)\n      switch (r.toLowerCase()) {\n        case \"square\":\n        case \"rectangle\":\n          this.matrix = rectangle(a, s, { filled: o });\n          break;\n        case \"circle\":\n        case \"ellipse\":\n          this.matrix = ellipse(a, s, { filled: o });\n          break;\n        case \"triangle\":\n          this.matrix = triangle(a, s, { filled: o });\n          break;\n        default:\n          throw new Error(`Shape: unexpected shape: ${r}`);\n      }\n    else if (t)\n      switch (t.toLowerCase()) {\n        case \"cross\":\n          this.matrix = cross;\n          break;\n        case \"smallcross\":\n          this.matrix = smallCross;\n          break;\n        default:\n          throw new Error(`Shape: unexpected kind: ${t}`);\n      }\n    else\n      throw new Error(\"Shape: expected a kind or a shape option\");\n    this.height = this.matrix.length, this.width = this.matrix[0].length, this.halfHeight = this.height / 2 >> 0, this.halfWidth = this.width / 2 >> 0;\n  }\n  /**\n   * Returns an array of [x,y] points\n   * @return {Array<Array<number>>} - Array of [x,y] points\n   */\n  getPoints() {\n    let i = this.matrix, t = [];\n    for (let r = 0; r < i.length; r++)\n      for (let n = 0; n < i[0].length; n++)\n        i[r][n] && t.push([n - this.halfWidth, r - this.halfHeight]);\n    return t;\n  }\n  /**\n   * Returns a Mask (1 bit Image) corresponding to this shape.\n   * @return {Image}\n   */\n  getMask() {\n    let i = new Image(this.width, this.height, {\n      kind: BINARY\n    });\n    for (let t = 0; t < this.matrix.length; t++)\n      for (let r = 0; r < this.matrix[0].length; r++)\n        this.matrix[t][r] && i.setBitXY(r, t);\n    return i;\n  }\n}\nfunction rectangle(e, i, t) {\n  const r = zerosMatrix(i, e);\n  if (t.filled)\n    for (let n = 0; n < i; n++)\n      for (let a = 0; a < e; a++)\n        r[n][a] = 1;\n  else {\n    for (let n of [0, i - 1])\n      for (let a = 0; a < e; a++)\n        r[n][a] = 1;\n    for (let n = 0; n < i; n++)\n      for (let a of [0, e - 1])\n        r[n][a] = 1;\n  }\n  return r;\n}\nfunction ellipse(e, i, t) {\n  const r = zerosMatrix(i, e);\n  let n = 1 - i % 2, a = 1 - e % 2, s = Math.floor((e - 1) / 2), o = Math.floor((i - 1) / 2), h = s * s, l = o * o;\n  if (t.filled)\n    for (let f = 0; f <= o; f++) {\n      let b = Math.floor(Math.sqrt(h - h * f * f / l));\n      for (let w = s - b; w <= s; w++)\n        r[o - f][w] = 1, r[o + f + n][w] = 1, r[o - f][e - w - 1] = 1, r[o + f + n][e - w - 1] = 1;\n    }\n  else {\n    for (let f = 0; f <= o; f++) {\n      let b = Math.floor(Math.sqrt(h - h * f * f / l)), w = s - b;\n      r[o - f][w] = 1, r[o + f + n][w] = 1, r[o - f][e - w - 1] = 1, r[o + f + n][e - w - 1] = 1;\n    }\n    for (let f = 0; f <= s; f++) {\n      let b = Math.floor(Math.sqrt(l - l * f * f / h)), w = o - b;\n      r[w][s - f] = 1, r[w][s + f + a] = 1, r[i - w - 1][s - f] = 1, r[i - w - 1][s + f + a] = 1;\n    }\n  }\n  return r;\n}\nfunction triangle(e, i, t) {\n  if (!t.filled)\n    throw new Error(\"Non filled triangle is not implemented\");\n  const r = zerosMatrix(i, e);\n  for (let n = 0; n < i; n++) {\n    let a = Math.floor((1 - n / i) * e / 2);\n    for (let s = a; s < e - a; s++)\n      r[n][s] = 1;\n  }\n  return r;\n}\nfunction paintPoints(e, i = {}) {\n  let { shape: t } = i;\n  this.checkProcessable(\"paintPoints\", {\n    bitDepth: [8, 16]\n  });\n  let r = getColors(\n    Object.assign({}, i, { numberColors: e.length })\n  ), n = new Shape(t).getPoints(), a = Math.min(this.channels, r[0].length);\n  for (let s = 0; s < e.length; s++) {\n    let o = r[s % r.length], h = e[s][0], l = e[s][1];\n    for (let f = 0; f < n.length; f++) {\n      let b = n[f][0], w = n[f][1];\n      if (h + b >= 0 && l + w >= 0 && h + b < this.width && l + w < this.height) {\n        let g = (h + b + (l + w) * this.width) * this.channels;\n        for (let E = 0; E < a; E++)\n          this.data[g + E] = o[E];\n      }\n    }\n  }\n  return this;\n}\nfunction paintPolyline(e, i = {}) {\n  let { color: t = [this.maxValue, 0, 0], closed: r = !1 } = i;\n  this.checkProcessable(\"paintPoints\", {\n    bitDepth: [1, 8, 16]\n  });\n  let n = Math.min(this.channels, t.length);\n  for (let a = 0; a < e.length - 1 + r; a++) {\n    let s = e[a], o = e[(a + 1) % e.length], h = o[0] - s[0], l = o[1] - s[1], f = Math.max(Math.abs(h), Math.abs(l)), b = h / f, w = l / f, g = s[0], E = s[1];\n    for (let k = 0; k <= f; k++) {\n      let A = Math.round(g), T = Math.round(E);\n      if (A >= 0 && T >= 0 && A < this.width && T < this.height)\n        if (this.bitDepth === 1)\n          this.setBitXY(A, T);\n        else {\n          let C = (A + T * this.width) * this.channels;\n          for (let D = 0; D < n; D++)\n            this.data[C + D] = t[D];\n        }\n      g = g + b, E = E + w;\n    }\n  }\n  return this;\n}\nfunction paintPolylines(e, i = {}) {\n  let t = Object.assign({}, i);\n  this.checkProcessable(\"paintPolylines\", {\n    bitDepth: [8, 16]\n  });\n  let r = getColors(\n    Object.assign({}, i, { numberColors: e.length })\n  );\n  for (let n = 0; n < e.length; n++)\n    t.color = r[n % r.length], this.paintPolyline(e[n], t);\n  return this;\n}\nfunction paintPolygon(e, i = {}) {\n  let { color: t = [this.maxValue, 0, 0], filled: r = !1 } = i;\n  this.checkProcessable(\"paintPoints\", {\n    bitDepth: [1, 8, 16]\n  }), i.closed = !0;\n  let n = deleteDouble(e);\n  if (r === !1)\n    return this.paintPolyline(e, i);\n  {\n    let a = Array(this.height);\n    for (let s = 0; s < this.height; s++) {\n      a[s] = [];\n      for (let o = 0; o < this.width; o++)\n        a[s].push(0);\n    }\n    for (let s = 0; s < n.length; s++) {\n      const o = lineBetweenTwoPoints(\n        n[s],\n        n[(s + 1) % n.length]\n      );\n      for (let h = 0; h < this.height; h++)\n        for (let l = 0; l < this.width; l++)\n          isAtTheRightOfTheLine(l, h, o, this.height) && (a[h][l] = a[h][l] === 0 ? 1 : 0);\n    }\n    for (let s = 0; s < this.height; s++)\n      for (let o = 0; o < this.width; o++)\n        if (a[s][o] === 1)\n          if (this.bitDepth === 1)\n            this.setBitXY(o, s);\n          else {\n            let h = Math.min(this.channels, t.length), l = (o + s * this.width) * this.channels;\n            for (let f = 0; f < h; f++)\n              this.data[l + f] = t[f];\n          }\n    return this.paintPolyline(e, i);\n  }\n}\nfunction deleteDouble(e) {\n  let i = [];\n  for (let t = 0; t < e.length; t++)\n    if (!(e[t][0] === e[(t + 1) % e.length][0] && e[t][1] === e[(t + 1) % e.length][1])) {\n      if (e[t][0] === e[(t - 1 + e.length) % e.length][0] && e[t][1] === e[(t - 1 + e.length) % e.length][1])\n        continue;\n      if (e[(t + 1) % e.length][0] === e[(t - 1 + e.length) % e.length][0] && e[(t - 1 + e.length) % e.length][1] === e[(t + 1) % e.length][1])\n        continue;\n      i.push(e[t]);\n    }\n  return i;\n}\nfunction lineBetweenTwoPoints(e, i) {\n  if (e[0] === i[0])\n    return { a: 0, b: e[0], vertical: !0 };\n  {\n    const t = (i[1] - e[1]) / (i[0] - e[0]), r = e[1] - t * e[0];\n    return { a: t, b: r, vertical: !1 };\n  }\n}\nfunction isAtTheRightOfTheLine(e, i, t, r) {\n  if (t.vertical === !0)\n    return t.b <= e;\n  if (t.a === 0)\n    return !1;\n  {\n    const n = (i - t.b) / t.a;\n    return n < e && n >= 0 && n <= r;\n  }\n}\nfunction paintPolygons(e, i = {}) {\n  let t = Object.assign({}, i);\n  this.checkProcessable(\"paintPolygons\", {\n    bitDepth: [8, 16]\n  });\n  let r = getColors(\n    Object.assign({}, i, { numberColors: e.length })\n  );\n  for (let n = 0; n < e.length; n++)\n    t.color = r[n % r.length], this.paintPolygon(e[n], t);\n  return this;\n}\nfunction getHistogram(e = {}) {\n  let { maxSlots: i = 256, channel: t, useAlpha: r = !0 } = e;\n  if (this.checkProcessable(\"getHistogram\", {\n    bitDepth: [1, 8, 16]\n  }), t === void 0) {\n    if (this.components > 1)\n      throw new RangeError(\n        \"You need to define the channel for an image that contains more than one channel\"\n      );\n    t = 0;\n  }\n  return getChannelHistogram.call(this, t, { useAlpha: r, maxSlots: i });\n}\nfunction getHistograms(e = {}) {\n  const { maxSlots: i = 256, useAlpha: t = !0 } = e;\n  this.checkProcessable(\"getHistograms\", {\n    bitDepth: [8, 16]\n  });\n  let r = new Array(t ? this.components : this.channels);\n  for (let n = 0; n < r.length; n++)\n    r[n] = getChannelHistogram.call(this, n, { useAlpha: t, maxSlots: i });\n  return r;\n}\nfunction getChannelHistogram(e, i) {\n  let { useAlpha: t, maxSlots: r } = i;\n  if (this.bitDepth === 1) {\n    let h = [0, 0];\n    for (let l = 0; l < this.height; l++)\n      for (let f = 0; f < this.width; f++) {\n        let b = this.getBitXY(l, f);\n        b === 0 ? h[0] += 1 : b === 1 && (h[1] += 1);\n      }\n    return h;\n  }\n  let n = Math.log2(r);\n  if (!isInteger(n))\n    throw new RangeError(\n      \"maxSlots must be a power of 2, for example: 64, 256, 1024\"\n    );\n  let a = 0;\n  this.bitDepth > n && (a = this.bitDepth - n);\n  let s = this.data, o = newArray(Math.pow(2, Math.min(this.bitDepth, n)), 0);\n  if (t && this.alpha) {\n    let h = this.channels - e - 1;\n    for (let l = e; l < s.length; l += this.channels)\n      o[s[l] >> a] += s[l + h] / this.maxValue;\n  } else\n    for (let h = e; h < s.length; h += this.channels)\n      o[s[h] >> a]++;\n  return o;\n}\nfunction getColorHistogram(e = {}) {\n  let { useAlpha: i = !0, nbSlots: t = 512 } = e;\n  this.checkProcessable(\"getColorHistogram\", {\n    bitDepth: [8, 16],\n    components: [3]\n  });\n  let r = Math.log(t) / Math.log(8);\n  if (r !== Math.floor(r))\n    throw new RangeError(\n      \"nbSlots must be a power of 8. Usually 8, 64, 512 or 4096\"\n    );\n  let n = this.bitDepth - r, a = this.data, s = newArray(Math.pow(8, r), 0), o = Math.pow(2, r * 2), h = Math.pow(2, r);\n  for (let l = 0; l < a.length; l += this.channels) {\n    let f = (a[l] >> n) * o + (a[l + 1] >> n) * h + (a[l + 2] >> n);\n    i && this.alpha ? s[f] += a[l + this.channels - 1] / this.maxValue : s[f]++;\n  }\n  return s;\n}\nfunction min() {\n  this.checkProcessable(\"min\", {\n    bitDepth: [8, 16, 32]\n  });\n  let e = newArray(this.channels, 1 / 0);\n  for (let i = 0; i < this.data.length; i += this.channels)\n    for (let t = 0; t < this.channels; t++)\n      this.data[i + t] < e[t] && (e[t] = this.data[i + t]);\n  return e;\n}\nfunction max() {\n  this.checkProcessable(\"max\", {\n    bitDepth: [8, 16, 32]\n  });\n  let e = newArray(this.channels, -1 / 0);\n  for (let i = 0; i < this.data.length; i += this.channels)\n    for (let t = 0; t < this.channels; t++)\n      this.data[i + t] > e[t] && (e[t] = this.data[i + t]);\n  return e;\n}\nfunction sum() {\n  this.checkProcessable(\"sum\", {\n    bitDepth: [8, 16]\n  });\n  let e = newArray(this.channels, 0);\n  for (let i = 0; i < this.data.length; i += this.channels)\n    for (let t = 0; t < this.channels; t++)\n      e[t] += this.data[i + t];\n  return e;\n}\nfunction getMoment(e = 0, i = 0) {\n  this.checkProcessable(\"getMoment\", {\n    bitDepth: [1]\n  });\n  let t = 0;\n  for (let r = 0; r < this.width; r++)\n    for (let n = 0; n < this.height; n++)\n      this.getBitXY(r, n) === 1 && (t += r ** e * n ** i);\n  return t;\n}\nfunction localMaxima(e = {}) {\n  let {\n    mask: i,\n    region: t = 3,\n    removeClosePoints: r = 0,\n    invert: n = !1,\n    maxEquals: a = 2\n  } = e, s = this;\n  this.checkProcessable(\"localMaxima\", {\n    bitDepth: [8, 16],\n    components: 1\n  }), t *= 4;\n  let o = n ? 0 : 1, h = [1, 0, -1, 0, 1, 1, -1, -1, 2, 0, -2, 0, 2, 2, -2, -2], l = [0, 1, 0, -1, 1, -1, 1, -1, 0, 2, 0, -2, 2, -2, 2, -2], f = t <= 8 ? 1 : 2, b = [];\n  for (let w = f; w < s.height - f; w++)\n    for (let g = f; g < s.width - f; g++) {\n      if (i && i.getBitXY(g, w) !== o)\n        continue;\n      let E = 0, k = 0, A = s.data[g + w * s.width];\n      for (let T = 0; T < t; T++)\n        n ? s.data[g + h[T] + (w + l[T]) * s.width] > A && E++ : s.data[g + h[T] + (w + l[T]) * s.width] < A && E++, s.data[g + h[T] + (w + l[T]) * s.width] === A && k++;\n      E + k === t && k <= a && b.push([g, w]);\n    }\n  if (r > 0)\n    for (let w = 0; w < b.length; w++)\n      for (let g = w + 1; g < b.length; g++)\n        Math.sqrt(\n          Math.pow(b[w][0] - b[g][0], 2) + Math.pow(b[w][1] - b[g][1], 2)\n        ) < r && (b[w][0] = b[w][0] + b[g][0] >> 1, b[w][1] = b[w][1] + b[g][1] >> 1, b.splice(g, 1), g--);\n  return b;\n}\nfunction mean() {\n  let e = this.getHistograms({ maxSlots: this.maxValue + 1 }), i = new Array(e.length);\n  for (let t = 0; t < e.length; t++) {\n    let r = e[t];\n    i[t] = mean$2(r);\n  }\n  return i;\n}\nfunction median() {\n  let e = this.getHistograms({ maxSlots: this.maxValue + 1 }), i = new Array(e.length);\n  for (let t = 0; t < e.length; t++) {\n    let r = e[t];\n    i[t] = median$2(r);\n  }\n  return i;\n}\nfunction points() {\n  this.checkProcessable(\"points\", {\n    bitDepth: [1]\n  });\n  const e = [];\n  for (let i = 0; i < this.width; i++)\n    for (let t = 0; t < this.height; t++)\n      this.getBitXY(i, t) === 1 && e.push([i, t]);\n  return e;\n}\nfunction extendedPoints() {\n  this.checkProcessable(\"extendedPoints\", {\n    bitDepth: [1]\n  });\n  const e = [];\n  for (let i = 0; i < this.height; i++)\n    for (let t = 0; t < this.width; t++)\n      if (this.getBitXY(t, i) === 1)\n        for (e.push([t, i]), this.getBitXY(t + 1, i) !== 1 ? (e.push([t + 1, i]), e.push([t + 1, i + 1]), this.getBitXY(t, i + 1) !== 1 && e.push([t, i + 1])) : this.getBitXY(t, i + 1) !== 1 && (e.push([t, i + 1]), e.push([t + 1, i + 1])); t < this.width - 2 && this.getBitXY(t + 1, i) === 1 && this.getBitXY(t + 2, i) === 1; )\n          t++;\n  return e;\n}\nfunction getRelativePosition(e, i = {}) {\n  if (this === e)\n    return [0, 0];\n  let t = [0, 0], r = this;\n  for (; r; ) {\n    if (r === e)\n      return t;\n    r.position && (t[0] += r.position[0], t[1] += r.position[1]), r = r.parent;\n  }\n  return i.defaultFurther ? t : !1;\n}\nfunction countAlphaPixels(e = {}) {\n  let { alpha: i = 1 } = e;\n  this.checkProcessable(\"countAlphaPixels\", {\n    bitDepth: [8, 16],\n    alpha: 1\n  });\n  let t = 0;\n  if (i !== void 0) {\n    for (let r = this.components; r < this.data.length; r += this.channels)\n      this.data[r] === i && t++;\n    return t;\n  } else\n    return this.size;\n}\nfunction monotoneChainConvexHull$1(e, i = {}) {\n  const { sorted: t } = i;\n  t || (e = e.slice().sort(byXThenY));\n  const r = e.length, n = new Array(r * 2);\n  let a = 0;\n  for (let o = 0; o < r; o++) {\n    const h = e[o];\n    for (; a >= 2 && cw(n[a - 2], n[a - 1], h) <= 0; )\n      a--;\n    n[a++] = h;\n  }\n  const s = a + 1;\n  for (let o = r - 2; o >= 0; o--) {\n    const h = e[o];\n    for (; a >= s && cw(n[a - 2], n[a - 1], h) <= 0; )\n      a--;\n    n[a++] = h;\n  }\n  return n.slice(0, a - 1);\n}\nfunction cw(e, i, t) {\n  return (i[1] - e[1]) * (t[0] - e[0]) - (i[0] - e[0]) * (t[1] - e[1]);\n}\nfunction byXThenY(e, i) {\n  return e[0] === i[0] ? e[1] - i[1] : e[0] - i[0];\n}\nfunction monotoneChainConvexHull() {\n  return monotoneChainConvexHull$1(this.extendedPoints, { sorted: !1 });\n}\nfunction round(e) {\n  for (let i = 0; i < e.length; i++)\n    e[i][0] = Math.round(e[i][0]), e[i][1] = Math.round(e[i][1]);\n  return e;\n}\nfunction difference(e, i) {\n  return [e[0] - i[0], e[1] - i[1]];\n}\nfunction normalize(e) {\n  let i = Math.sqrt(e[0] ** 2 + e[1] ** 2);\n  return [e[0] / i, e[1] / i];\n}\nfunction rotate(e, i, t) {\n  t === void 0 && (t = new Array(i.length));\n  let r = Math.cos(e), n = Math.sin(e);\n  for (let a = 0; a < t.length; ++a)\n    t[a] = [\n      r * i[a][0] - n * i[a][1],\n      n * i[a][0] + r * i[a][1]\n    ];\n  return t;\n}\nfunction perimeter(e) {\n  let i = 0;\n  for (let t = 0; t < e.length; t++) {\n    let r = e[t][0], n = e[t][1], a = e[t === e.length - 1 ? 0 : t + 1][0], s = e[t === e.length - 1 ? 0 : t + 1][1];\n    i += Math.sqrt((a - r) ** 2 + (s - n) ** 2);\n  }\n  return i;\n}\nfunction surface(e) {\n  let i = 0;\n  for (let t = 0; t < e.length; t++) {\n    let r = e[t][0], n = e[t === e.length - 1 ? 0 : t + 1][1], a = e[t === e.length - 1 ? 0 : t + 1][0], s = e[t][1];\n    i += r * n * 0.5, i -= a * s * 0.5;\n  }\n  return Math.abs(i);\n}\nfunction minMax(e) {\n  let i = 1 / 0, t = 1 / 0, r = -1 / 0, n = -1 / 0;\n  for (let a = 0; a < e.length; a++)\n    e[a][0] < i && (i = e[a][0]), e[a][0] > r && (r = e[a][0]), e[a][1] < t && (t = e[a][1]), e[a][1] > n && (n = e[a][1]);\n  return [\n    [i, t],\n    [r, n]\n  ];\n}\nfunction moveToZeroZero(e, i) {\n  i === void 0 && (i = new Array(e.length).fill(0).map(() => []));\n  let t = minMax(e), r = t[0][0], n = t[0][1];\n  for (let a = 0; a < e.length; a++)\n    i[a][0] = e[a][0] - r, i[a][1] = e[a][1] - n;\n  return i;\n}\nfunction minimalBoundingRectangle(e = {}) {\n  const { originalPoints: i = monotoneChainConvexHull.call(this) } = e;\n  if (i.length === 0)\n    return [];\n  if (i.length === 1)\n    return [\n      i[0],\n      i[0],\n      i[0],\n      i[0]\n    ];\n  const t = new Array(i.length);\n  let r = 1 / 0, n = 0, a;\n  for (let s = 0; s < t.length; s++) {\n    let o = getAngle$1(i[s], i[(s + 1) % t.length]);\n    rotate(-o, i, t);\n    let h = t[s][0], l = t[s][1], f = t[(s + 1) % t.length][0], b = t[(s + 1) % t.length][1], w = !0, g = 0, E = 0, k = 0;\n    for (let D = 0; D < t.length; D++) {\n      let $ = t[D][0], P = t[D][1], z = ($ - h) / (f - h);\n      w === !0 ? (w = !1, g = z, E = z) : (z < g && (g = z), z > E && (E = z));\n      let B = (-(f - h) * P + f * l - b * h) / (f - h);\n      Math.abs(B) > Math.abs(k) && (k = B);\n    }\n    let A = [h + g * (f - h), l], T = [h + E * (f - h), l], C = Math.abs(k * (g - E) * (f - h));\n    C < r && (n = o, r = C, a = [\n      A,\n      T,\n      [T[0], T[1] - k],\n      [A[0], A[1] - k]\n    ]);\n  }\n  return rotate(n, a, a), a;\n}\nfunction getAngle$1(e, i) {\n  let t = difference(i, e), r = normalize(t), n = Math.acos(r[0]);\n  return r[1] < 0 ? -n : n;\n}\nfunction extend$1(e) {\n  let i = { inPlace: !0 };\n  e.extendMethod(\"invert\", invert), e.extendMethod(\"abs\", abs), e.extendMethod(\"level\", level, i), e.extendMethod(\"add\", add, i), e.extendMethod(\"subtract\", subtract, i), e.extendMethod(\"subtractImage\", subtractImage), e.extendMethod(\"multiply\", multiply, i), e.extendMethod(\"divide\", divide, i), e.extendMethod(\"hypotenuse\", hypotenuse), e.extendMethod(\"background\", background$1), e.extendMethod(\"flipX\", flipX), e.extendMethod(\"flipY\", flipY), e.extendMethod(\"blurFilter\", blurFilter), e.extendMethod(\"medianFilter\", medianFilter), e.extendMethod(\"gaussianFilter\", gaussianFilter), e.extendMethod(\"sobelFilter\", sobelFilter), e.extendMethod(\"gradientFilter\", gradientFilter), e.extendMethod(\"scharrFilter\", scharrFilter), e.extendMethod(\"dilate\", dilate), e.extendMethod(\"erode\", erode), e.extendMethod(\"open\", open), e.extendMethod(\"close\", close), e.extendMethod(\"topHat\", topHat), e.extendMethod(\"blackHat\", blackHat), e.extendMethod(\"morphologicalGradient\", morphologicalGradient), e.extendMethod(\"warpingFourPoints\", warpingFourPoints), e.extendMethod(\"crop\", crop), e.extendMethod(\"cropAlpha\", cropAlpha), e.extendMethod(\"resize\", resize).extendMethod(\"scale\", resize), e.extendMethod(\"hsv\", hsv), e.extendMethod(\"hsl\", hsl$1), e.extendMethod(\"cmyk\", cmyk), e.extendMethod(\"rgba8\", rgba8), e.extendMethod(\"grey\", grey).extendMethod(\"gray\", grey), e.extendMethod(\"mask\", mask), e.extendMethod(\"pad\", pad), e.extendMethod(\"colorDepth\", colorDepth), e.extendMethod(\"setBorder\", setBorder, i), e.extendMethod(\"rotate\", rotate$1), e.extendMethod(\"rotateLeft\", rotateLeft), e.extendMethod(\"rotateRight\", rotateRight), e.extendMethod(\"insert\", insert), e.extendMethod(\"getRow\", getRow), e.extendMethod(\"getColumn\", getColumn), e.extendMethod(\"getMatrix\", getMatrix), e.extendMethod(\"setMatrix\", setMatrix), e.extendMethod(\"getPixelsArray\", getPixelsArray), e.extendMethod(\"getIntersection\", getIntersection), e.extendMethod(\"getClosestCommonParent\", getClosestCommonParent), e.extendMethod(\"getThreshold\", getThreshold), e.extendMethod(\"split\", split), e.extendMethod(\"getChannel\", getChannel), e.extendMethod(\"combineChannels\", combineChannels), e.extendMethod(\"setChannel\", setChannel), e.extendMethod(\"getSimilarity\", getSimilarity), e.extendMethod(\"getPixelsGrid\", getPixelsGrid), e.extendMethod(\"getBestMatch\", getBestMatch), e.extendMethod(\"cannyEdge\", cannyEdge), e.extendMethod(\"convolution\", convolution), e.extendMethod(\"extract\", extract), e.extendMethod(\"floodFill\", floodFill), e.extendMethod(\"paintLabels\", paintLabels, i), e.extendMethod(\"paintMasks\", paintMasks, i), e.extendMethod(\"paintPoints\", paintPoints, i), e.extendMethod(\"paintPolyline\", paintPolyline, i), e.extendMethod(\"paintPolylines\", paintPolylines, i), e.extendMethod(\"paintPolygon\", paintPolygon, i), e.extendMethod(\"paintPolygons\", paintPolygons, i), e.extendMethod(\"countAlphaPixels\", countAlphaPixels), e.extendMethod(\"monotoneChainConvexHull\", monotoneChainConvexHull), e.extendMethod(\"minimalBoundingRectangle\", minimalBoundingRectangle), e.extendMethod(\"getHistogram\", getHistogram).extendProperty(\n    \"histogram\",\n    getHistogram\n  ), e.extendMethod(\"getHistograms\", getHistograms).extendProperty(\n    \"histograms\",\n    getHistograms\n  ), e.extendMethod(\"getColorHistogram\", getColorHistogram).extendProperty(\n    \"colorHistogram\",\n    getColorHistogram\n  ), e.extendMethod(\"getMin\", min).extendProperty(\"min\", min), e.extendMethod(\"getMax\", max).extendProperty(\"max\", max), e.extendMethod(\"getSum\", sum).extendProperty(\"sum\", sum), e.extendMethod(\"getMoment\", getMoment).extendProperty(\n    \"moment\",\n    getMoment\n  ), e.extendMethod(\"getLocalMaxima\", localMaxima), e.extendMethod(\"getMedian\", median).extendProperty(\n    \"median\",\n    median\n  ), e.extendMethod(\"getMean\", mean).extendProperty(\"mean\", mean), e.extendMethod(\"getPoints\", points).extendProperty(\n    \"points\",\n    points\n  ), e.extendMethod(\"getExtendedPoints\", extendedPoints).extendProperty(\n    \"extendedPoints\",\n    extendedPoints\n  ), e.extendMethod(\"getRelativePosition\", getRelativePosition);\n}\nvar quantities$1 = { exports: {} }, quantities = quantities$1.exports, hasRequiredQuantities;\nfunction requireQuantities() {\n  return hasRequiredQuantities || (hasRequiredQuantities = 1, function(e, i) {\n    (function(t, r) {\n      e.exports = r();\n    })(quantities, function() {\n      function t(M) {\n        return typeof M == \"string\" || M instanceof String;\n      }\n      var r = Number.isFinite || window.isFinite;\n      function n(M) {\n        return r(M);\n      }\n      function a(M) {\n        return M;\n      }\n      function s(M) {\n        var _ = {};\n        return M.filter(function(d) {\n          return _.hasOwnProperty(d) ? !1 : _[d] = !0;\n        });\n      }\n      function o(M, _) {\n        if (_.length !== M.length)\n          return !1;\n        for (var d = 0; d < M.length; d++)\n          if (_[d].compareArray && !_[d].compareArray(M[d]) || _[d] !== M[d])\n            return !1;\n        return !0;\n      }\n      function h(M, _) {\n        Object.keys(_).forEach(function(d) {\n          M[d] = _[d];\n        });\n      }\n      function l() {\n        for (var M = 1, _ = 0, d = 0; d < arguments.length; d++) {\n          var u = arguments[d];\n          _ = _ + w(u), M *= u;\n        }\n        return _ !== 0 ? b(M, _) : M;\n      }\n      function f(M, _) {\n        if (_ === 0)\n          throw new Error(\"Divide by zero\");\n        var d = Math.pow(10, w(_)), u = d / (d * _);\n        return l(M, u);\n      }\n      function b(M, _) {\n        return Math.round(M * Math.pow(10, _)) / Math.pow(10, _);\n      }\n      function w(M) {\n        if (!isFinite(M))\n          return 0;\n        for (var _ = 0; M % 1 !== 0; )\n          M *= 10, _++;\n        return _;\n      }\n      function g() {\n        var M;\n        if (!this)\n          return M = Object.create(g.prototype), g.apply(M, arguments), M;\n        M = Error.apply(this, arguments), this.name = \"QtyError\", this.message = M.message, this.stack = M.stack;\n      }\n      g.prototype = Object.create(Error.prototype, { constructor: { value: g } });\n      function E(M, _) {\n        throw new g(\"Incompatible units: \" + M + \" and \" + _);\n      }\n      var k = {\n        /* prefixes */\n        \"<googol>\": [[\"googol\"], 1e100, \"prefix\"],\n        \"<kibi>\": [[\"Ki\", \"Kibi\", \"kibi\"], Math.pow(2, 10), \"prefix\"],\n        \"<mebi>\": [[\"Mi\", \"Mebi\", \"mebi\"], Math.pow(2, 20), \"prefix\"],\n        \"<gibi>\": [[\"Gi\", \"Gibi\", \"gibi\"], Math.pow(2, 30), \"prefix\"],\n        \"<tebi>\": [[\"Ti\", \"Tebi\", \"tebi\"], Math.pow(2, 40), \"prefix\"],\n        \"<pebi>\": [[\"Pi\", \"Pebi\", \"pebi\"], Math.pow(2, 50), \"prefix\"],\n        \"<exi>\": [[\"Ei\", \"Exi\", \"exi\"], Math.pow(2, 60), \"prefix\"],\n        \"<zebi>\": [[\"Zi\", \"Zebi\", \"zebi\"], Math.pow(2, 70), \"prefix\"],\n        \"<yebi>\": [[\"Yi\", \"Yebi\", \"yebi\"], Math.pow(2, 80), \"prefix\"],\n        \"<yotta>\": [[\"Y\", \"Yotta\", \"yotta\"], 1e24, \"prefix\"],\n        \"<zetta>\": [[\"Z\", \"Zetta\", \"zetta\"], 1e21, \"prefix\"],\n        \"<exa>\": [[\"E\", \"Exa\", \"exa\"], 1e18, \"prefix\"],\n        \"<peta>\": [[\"P\", \"Peta\", \"peta\"], 1e15, \"prefix\"],\n        \"<tera>\": [[\"T\", \"Tera\", \"tera\"], 1e12, \"prefix\"],\n        \"<giga>\": [[\"G\", \"Giga\", \"giga\"], 1e9, \"prefix\"],\n        \"<mega>\": [[\"M\", \"Mega\", \"mega\"], 1e6, \"prefix\"],\n        \"<kilo>\": [[\"k\", \"kilo\"], 1e3, \"prefix\"],\n        \"<hecto>\": [[\"h\", \"Hecto\", \"hecto\"], 100, \"prefix\"],\n        \"<deca>\": [[\"da\", \"Deca\", \"deca\", \"deka\"], 10, \"prefix\"],\n        \"<deci>\": [[\"d\", \"Deci\", \"deci\"], 0.1, \"prefix\"],\n        \"<centi>\": [[\"c\", \"Centi\", \"centi\"], 0.01, \"prefix\"],\n        \"<milli>\": [[\"m\", \"Milli\", \"milli\"], 1e-3, \"prefix\"],\n        \"<micro>\": [\n          [\"u\", \"μ\", \"µ\", \"Micro\", \"mc\", \"micro\"],\n          1e-6,\n          \"prefix\"\n        ],\n        \"<nano>\": [[\"n\", \"Nano\", \"nano\"], 1e-9, \"prefix\"],\n        \"<pico>\": [[\"p\", \"Pico\", \"pico\"], 1e-12, \"prefix\"],\n        \"<femto>\": [[\"f\", \"Femto\", \"femto\"], 1e-15, \"prefix\"],\n        \"<atto>\": [[\"a\", \"Atto\", \"atto\"], 1e-18, \"prefix\"],\n        \"<zepto>\": [[\"z\", \"Zepto\", \"zepto\"], 1e-21, \"prefix\"],\n        \"<yocto>\": [[\"y\", \"Yocto\", \"yocto\"], 1e-24, \"prefix\"],\n        \"<1>\": [[\"1\", \"<1>\"], 1, \"\"],\n        /* length units */\n        \"<meter>\": [[\"m\", \"meter\", \"meters\", \"metre\", \"metres\"], 1, \"length\", [\"<meter>\"]],\n        \"<inch>\": [[\"in\", \"inch\", \"inches\", '\"'], 0.0254, \"length\", [\"<meter>\"]],\n        \"<foot>\": [[\"ft\", \"foot\", \"feet\", \"'\"], 0.3048, \"length\", [\"<meter>\"]],\n        \"<yard>\": [[\"yd\", \"yard\", \"yards\"], 0.9144, \"length\", [\"<meter>\"]],\n        \"<mile>\": [[\"mi\", \"mile\", \"miles\"], 1609.344, \"length\", [\"<meter>\"]],\n        \"<naut-mile>\": [[\"nmi\", \"naut-mile\"], 1852, \"length\", [\"<meter>\"]],\n        \"<league>\": [[\"league\", \"leagues\"], 4828, \"length\", [\"<meter>\"]],\n        \"<furlong>\": [[\"furlong\", \"furlongs\"], 201.2, \"length\", [\"<meter>\"]],\n        \"<rod>\": [[\"rd\", \"rod\", \"rods\"], 5.029, \"length\", [\"<meter>\"]],\n        \"<mil>\": [[\"mil\", \"mils\"], 254e-7, \"length\", [\"<meter>\"]],\n        \"<angstrom>\": [[\"ang\", \"angstrom\", \"angstroms\"], 1e-10, \"length\", [\"<meter>\"]],\n        \"<fathom>\": [[\"fathom\", \"fathoms\"], 1.829, \"length\", [\"<meter>\"]],\n        \"<pica>\": [[\"pica\", \"picas\"], 0.00423333333, \"length\", [\"<meter>\"]],\n        \"<point>\": [[\"pt\", \"point\", \"points\"], 352777778e-12, \"length\", [\"<meter>\"]],\n        \"<redshift>\": [[\"z\", \"red-shift\", \"redshift\"], 1302773e20, \"length\", [\"<meter>\"]],\n        \"<AU>\": [[\"AU\", \"astronomical-unit\"], 1495979e5, \"length\", [\"<meter>\"]],\n        \"<light-second>\": [[\"ls\", \"light-second\"], 299792500, \"length\", [\"<meter>\"]],\n        \"<light-minute>\": [[\"lmin\", \"light-minute\"], 1798755e4, \"length\", [\"<meter>\"]],\n        \"<light-year>\": [[\"ly\", \"light-year\"], 9460528e9, \"length\", [\"<meter>\"]],\n        \"<parsec>\": [[\"pc\", \"parsec\", \"parsecs\"], 3085678e10, \"length\", [\"<meter>\"]],\n        \"<datamile>\": [[\"DM\", \"datamile\"], 1828.8, \"length\", [\"<meter>\"]],\n        /* mass */\n        \"<kilogram>\": [[\"kg\", \"kilogram\", \"kilograms\"], 1, \"mass\", [\"<kilogram>\"]],\n        \"<AMU>\": [[\"u\", \"AMU\", \"amu\"], 1660538921e-36, \"mass\", [\"<kilogram>\"]],\n        \"<dalton>\": [[\"Da\", \"Dalton\", \"Daltons\", \"dalton\", \"daltons\"], 1660538921e-36, \"mass\", [\"<kilogram>\"]],\n        \"<slug>\": [[\"slug\", \"slugs\"], 14.5939029, \"mass\", [\"<kilogram>\"]],\n        \"<short-ton>\": [[\"tn\", \"ton\", \"short-ton\"], 907.18474, \"mass\", [\"<kilogram>\"]],\n        \"<metric-ton>\": [[\"t\", \"tonne\", \"metric-ton\"], 1e3, \"mass\", [\"<kilogram>\"]],\n        \"<carat>\": [[\"ct\", \"carat\", \"carats\"], 2e-4, \"mass\", [\"<kilogram>\"]],\n        \"<pound>\": [[\"lbs\", \"lb\", \"pound\", \"pounds\", \"#\"], 0.45359237, \"mass\", [\"<kilogram>\"]],\n        \"<ounce>\": [[\"oz\", \"ounce\", \"ounces\"], 0.0283495231, \"mass\", [\"<kilogram>\"]],\n        \"<gram>\": [[\"g\", \"gram\", \"grams\", \"gramme\", \"grammes\"], 1e-3, \"mass\", [\"<kilogram>\"]],\n        \"<grain>\": [[\"grain\", \"grains\", \"gr\"], 6479891e-11, \"mass\", [\"<kilogram>\"]],\n        \"<dram>\": [[\"dram\", \"drams\", \"dr\"], 0.0017718452, \"mass\", [\"<kilogram>\"]],\n        \"<stone>\": [[\"stone\", \"stones\", \"st\"], 6.35029318, \"mass\", [\"<kilogram>\"]],\n        /* area */\n        \"<hectare>\": [[\"hectare\"], 1e4, \"area\", [\"<meter>\", \"<meter>\"]],\n        \"<acre>\": [[\"acre\", \"acres\"], 4046.85642, \"area\", [\"<meter>\", \"<meter>\"]],\n        \"<sqft>\": [[\"sqft\"], 1, \"area\", [\"<foot>\", \"<foot>\"]],\n        /* volume */\n        \"<liter>\": [[\"l\", \"L\", \"liter\", \"liters\", \"litre\", \"litres\"], 1e-3, \"volume\", [\"<meter>\", \"<meter>\", \"<meter>\"]],\n        \"<gallon>\": [[\"gal\", \"gallon\", \"gallons\"], 0.0037854118, \"volume\", [\"<meter>\", \"<meter>\", \"<meter>\"]],\n        \"<gallon-imp>\": [[\"galimp\", \"gallon-imp\", \"gallons-imp\"], 454609e-8, \"volume\", [\"<meter>\", \"<meter>\", \"<meter>\"]],\n        \"<quart>\": [[\"qt\", \"quart\", \"quarts\"], 94635295e-11, \"volume\", [\"<meter>\", \"<meter>\", \"<meter>\"]],\n        \"<pint>\": [[\"pt\", \"pint\", \"pints\"], 473176475e-12, \"volume\", [\"<meter>\", \"<meter>\", \"<meter>\"]],\n        \"<pint-imp>\": [[\"ptimp\", \"pint-imp\", \"pints-imp\"], 56826125e-11, \"volume\", [\"<meter>\", \"<meter>\", \"<meter>\"]],\n        \"<cup>\": [[\"cu\", \"cup\", \"cups\"], 236588238e-12, \"volume\", [\"<meter>\", \"<meter>\", \"<meter>\"]],\n        \"<fluid-ounce>\": [[\"floz\", \"fluid-ounce\", \"fluid-ounces\"], 295735297e-13, \"volume\", [\"<meter>\", \"<meter>\", \"<meter>\"]],\n        \"<fluid-ounce-imp>\": [[\"flozimp\", \"floz-imp\", \"fluid-ounce-imp\", \"fluid-ounces-imp\"], 284130625e-13, \"volume\", [\"<meter>\", \"<meter>\", \"<meter>\"]],\n        \"<tablespoon>\": [[\"tb\", \"tbsp\", \"tbs\", \"tablespoon\", \"tablespoons\"], 147867648e-13, \"volume\", [\"<meter>\", \"<meter>\", \"<meter>\"]],\n        \"<teaspoon>\": [[\"tsp\", \"teaspoon\", \"teaspoons\"], 492892161e-14, \"volume\", [\"<meter>\", \"<meter>\", \"<meter>\"]],\n        \"<bushel>\": [[\"bu\", \"bsh\", \"bushel\", \"bushels\"], 0.035239072, \"volume\", [\"<meter>\", \"<meter>\", \"<meter>\"]],\n        \"<oilbarrel>\": [[\"bbl\", \"oilbarrel\", \"oilbarrels\", \"oil-barrel\", \"oil-barrels\"], 0.158987294928, \"volume\", [\"<meter>\", \"<meter>\", \"<meter>\"]],\n        \"<beerbarrel>\": [[\"bl\", \"bl-us\", \"beerbarrel\", \"beerbarrels\", \"beer-barrel\", \"beer-barrels\"], 0.1173477658, \"volume\", [\"<meter>\", \"<meter>\", \"<meter>\"]],\n        \"<beerbarrel-imp>\": [[\"blimp\", \"bl-imp\", \"beerbarrel-imp\", \"beerbarrels-imp\", \"beer-barrel-imp\", \"beer-barrels-imp\"], 0.16365924, \"volume\", [\"<meter>\", \"<meter>\", \"<meter>\"]],\n        /* speed */\n        \"<kph>\": [[\"kph\"], 0.277777778, \"speed\", [\"<meter>\"], [\"<second>\"]],\n        \"<mph>\": [[\"mph\"], 0.44704, \"speed\", [\"<meter>\"], [\"<second>\"]],\n        \"<knot>\": [[\"kt\", \"kn\", \"kts\", \"knot\", \"knots\"], 0.514444444, \"speed\", [\"<meter>\"], [\"<second>\"]],\n        \"<fps>\": [[\"fps\"], 0.3048, \"speed\", [\"<meter>\"], [\"<second>\"]],\n        /* acceleration */\n        \"<gee>\": [[\"gee\"], 9.80665, \"acceleration\", [\"<meter>\"], [\"<second>\", \"<second>\"]],\n        \"<Gal>\": [[\"Gal\"], 0.01, \"acceleration\", [\"<meter>\"], [\"<second>\", \"<second>\"]],\n        /* temperature_difference */\n        \"<kelvin>\": [[\"degK\", \"kelvin\"], 1, \"temperature\", [\"<kelvin>\"]],\n        \"<celsius>\": [[\"degC\", \"celsius\", \"celsius\", \"centigrade\"], 1, \"temperature\", [\"<kelvin>\"]],\n        \"<fahrenheit>\": [[\"degF\", \"fahrenheit\"], 5 / 9, \"temperature\", [\"<kelvin>\"]],\n        \"<rankine>\": [[\"degR\", \"rankine\"], 5 / 9, \"temperature\", [\"<kelvin>\"]],\n        \"<temp-K>\": [[\"tempK\", \"temp-K\"], 1, \"temperature\", [\"<temp-K>\"]],\n        \"<temp-C>\": [[\"tempC\", \"temp-C\"], 1, \"temperature\", [\"<temp-K>\"]],\n        \"<temp-F>\": [[\"tempF\", \"temp-F\"], 5 / 9, \"temperature\", [\"<temp-K>\"]],\n        \"<temp-R>\": [[\"tempR\", \"temp-R\"], 5 / 9, \"temperature\", [\"<temp-K>\"]],\n        /* time */\n        \"<second>\": [[\"s\", \"sec\", \"secs\", \"second\", \"seconds\"], 1, \"time\", [\"<second>\"]],\n        \"<minute>\": [[\"min\", \"mins\", \"minute\", \"minutes\"], 60, \"time\", [\"<second>\"]],\n        \"<hour>\": [[\"h\", \"hr\", \"hrs\", \"hour\", \"hours\"], 3600, \"time\", [\"<second>\"]],\n        \"<day>\": [[\"d\", \"day\", \"days\"], 3600 * 24, \"time\", [\"<second>\"]],\n        \"<week>\": [[\"wk\", \"week\", \"weeks\"], 7 * 3600 * 24, \"time\", [\"<second>\"]],\n        \"<fortnight>\": [[\"fortnight\", \"fortnights\"], 1209600, \"time\", [\"<second>\"]],\n        \"<year>\": [[\"y\", \"yr\", \"year\", \"years\", \"annum\"], 31556926, \"time\", [\"<second>\"]],\n        \"<decade>\": [[\"decade\", \"decades\"], 315569260, \"time\", [\"<second>\"]],\n        \"<century>\": [[\"century\", \"centuries\"], 3155692600, \"time\", [\"<second>\"]],\n        /* pressure */\n        \"<pascal>\": [[\"Pa\", \"pascal\", \"Pascal\"], 1, \"pressure\", [\"<kilogram>\"], [\"<meter>\", \"<second>\", \"<second>\"]],\n        \"<bar>\": [[\"bar\", \"bars\"], 1e5, \"pressure\", [\"<kilogram>\"], [\"<meter>\", \"<second>\", \"<second>\"]],\n        \"<mmHg>\": [[\"mmHg\"], 133.322368, \"pressure\", [\"<kilogram>\"], [\"<meter>\", \"<second>\", \"<second>\"]],\n        \"<inHg>\": [[\"inHg\"], 3386.3881472, \"pressure\", [\"<kilogram>\"], [\"<meter>\", \"<second>\", \"<second>\"]],\n        \"<torr>\": [[\"torr\"], 133.322368, \"pressure\", [\"<kilogram>\"], [\"<meter>\", \"<second>\", \"<second>\"]],\n        \"<atm>\": [[\"atm\", \"ATM\", \"atmosphere\", \"atmospheres\"], 101325, \"pressure\", [\"<kilogram>\"], [\"<meter>\", \"<second>\", \"<second>\"]],\n        \"<psi>\": [[\"psi\"], 6894.76, \"pressure\", [\"<kilogram>\"], [\"<meter>\", \"<second>\", \"<second>\"]],\n        \"<cmh2o>\": [[\"cmH2O\", \"cmh2o\"], 98.0638, \"pressure\", [\"<kilogram>\"], [\"<meter>\", \"<second>\", \"<second>\"]],\n        \"<inh2o>\": [[\"inH2O\", \"inh2o\"], 249.082052, \"pressure\", [\"<kilogram>\"], [\"<meter>\", \"<second>\", \"<second>\"]],\n        /* viscosity */\n        \"<poise>\": [[\"P\", \"poise\"], 0.1, \"viscosity\", [\"<kilogram>\"], [\"<meter>\", \"<second>\"]],\n        \"<stokes>\": [[\"St\", \"stokes\"], 1e-4, \"viscosity\", [\"<meter>\", \"<meter>\"], [\"<second>\"]],\n        /* substance */\n        \"<mole>\": [[\"mol\", \"mole\"], 1, \"substance\", [\"<mole>\"]],\n        /* molar_concentration */\n        \"<molar>\": [[\"M\", \"molar\"], 1e3, \"molar_concentration\", [\"<mole>\"], [\"<meter>\", \"<meter>\", \"<meter>\"]],\n        \"<wtpercent>\": [[\"wt%\", \"wtpercent\"], 10, \"molar_concentration\", [\"<kilogram>\"], [\"<meter>\", \"<meter>\", \"<meter>\"]],\n        /* activity */\n        \"<katal>\": [[\"kat\", \"katal\", \"Katal\"], 1, \"activity\", [\"<mole>\"], [\"<second>\"]],\n        \"<unit>\": [[\"U\", \"enzUnit\", \"unit\"], 16667e-19, \"activity\", [\"<mole>\"], [\"<second>\"]],\n        /* capacitance */\n        \"<farad>\": [[\"F\", \"farad\", \"Farad\"], 1, \"capacitance\", [\"<second>\", \"<second>\", \"<second>\", \"<second>\", \"<ampere>\", \"<ampere>\"], [\"<meter>\", \"<meter>\", \"<kilogram>\"]],\n        /* charge */\n        \"<coulomb>\": [[\"C\", \"coulomb\", \"Coulomb\"], 1, \"charge\", [\"<ampere>\", \"<second>\"]],\n        \"<Ah>\": [[\"Ah\"], 3600, \"charge\", [\"<ampere>\", \"<second>\"]],\n        /* current */\n        \"<ampere>\": [[\"A\", \"Ampere\", \"ampere\", \"amp\", \"amps\"], 1, \"current\", [\"<ampere>\"]],\n        /* conductance */\n        \"<siemens>\": [[\"S\", \"Siemens\", \"siemens\"], 1, \"conductance\", [\"<second>\", \"<second>\", \"<second>\", \"<ampere>\", \"<ampere>\"], [\"<kilogram>\", \"<meter>\", \"<meter>\"]],\n        /* inductance */\n        \"<henry>\": [[\"H\", \"Henry\", \"henry\"], 1, \"inductance\", [\"<meter>\", \"<meter>\", \"<kilogram>\"], [\"<second>\", \"<second>\", \"<ampere>\", \"<ampere>\"]],\n        /* potential */\n        \"<volt>\": [[\"V\", \"Volt\", \"volt\", \"volts\"], 1, \"potential\", [\"<meter>\", \"<meter>\", \"<kilogram>\"], [\"<second>\", \"<second>\", \"<second>\", \"<ampere>\"]],\n        /* resistance */\n        \"<ohm>\": [\n          [\n            \"Ohm\",\n            \"ohm\",\n            \"Ω\",\n            \"Ω\"\n            /*Ω as ohm sign*/\n          ],\n          1,\n          \"resistance\",\n          [\"<meter>\", \"<meter>\", \"<kilogram>\"],\n          [\"<second>\", \"<second>\", \"<second>\", \"<ampere>\", \"<ampere>\"]\n        ],\n        /* magnetism */\n        \"<weber>\": [[\"Wb\", \"weber\", \"webers\"], 1, \"magnetism\", [\"<meter>\", \"<meter>\", \"<kilogram>\"], [\"<second>\", \"<second>\", \"<ampere>\"]],\n        \"<tesla>\": [[\"T\", \"tesla\", \"teslas\"], 1, \"magnetism\", [\"<kilogram>\"], [\"<second>\", \"<second>\", \"<ampere>\"]],\n        \"<gauss>\": [[\"G\", \"gauss\"], 1e-4, \"magnetism\", [\"<kilogram>\"], [\"<second>\", \"<second>\", \"<ampere>\"]],\n        \"<maxwell>\": [[\"Mx\", \"maxwell\", \"maxwells\"], 1e-8, \"magnetism\", [\"<meter>\", \"<meter>\", \"<kilogram>\"], [\"<second>\", \"<second>\", \"<ampere>\"]],\n        \"<oersted>\": [[\"Oe\", \"oersted\", \"oersteds\"], 250 / Math.PI, \"magnetism\", [\"<ampere>\"], [\"<meter>\"]],\n        /* energy */\n        \"<joule>\": [[\"J\", \"joule\", \"Joule\", \"joules\", \"Joules\"], 1, \"energy\", [\"<meter>\", \"<meter>\", \"<kilogram>\"], [\"<second>\", \"<second>\"]],\n        \"<erg>\": [[\"erg\", \"ergs\"], 1e-7, \"energy\", [\"<meter>\", \"<meter>\", \"<kilogram>\"], [\"<second>\", \"<second>\"]],\n        \"<btu>\": [[\"BTU\", \"btu\", \"BTUs\"], 1055.056, \"energy\", [\"<meter>\", \"<meter>\", \"<kilogram>\"], [\"<second>\", \"<second>\"]],\n        \"<calorie>\": [[\"cal\", \"calorie\", \"calories\"], 4.184, \"energy\", [\"<meter>\", \"<meter>\", \"<kilogram>\"], [\"<second>\", \"<second>\"]],\n        \"<Calorie>\": [[\"Cal\", \"Calorie\", \"Calories\"], 4184, \"energy\", [\"<meter>\", \"<meter>\", \"<kilogram>\"], [\"<second>\", \"<second>\"]],\n        \"<therm-US>\": [[\"th\", \"therm\", \"therms\", \"Therm\", \"therm-US\"], 105480400, \"energy\", [\"<meter>\", \"<meter>\", \"<kilogram>\"], [\"<second>\", \"<second>\"]],\n        \"<Wh>\": [[\"Wh\"], 3600, \"energy\", [\"<meter>\", \"<meter>\", \"<kilogram>\"], [\"<second>\", \"<second>\"]],\n        \"<electronvolt>\": [[\"eV\", \"electronvolt\", \"electronvolts\"], 1602176634e-28, \"energy\", [\"<meter>\", \"<meter>\", \"<kilogram>\"], [\"<second>\", \"<second>\"]],\n        /* force */\n        \"<newton>\": [[\"N\", \"Newton\", \"newton\"], 1, \"force\", [\"<kilogram>\", \"<meter>\"], [\"<second>\", \"<second>\"]],\n        \"<dyne>\": [[\"dyn\", \"dyne\"], 1e-5, \"force\", [\"<kilogram>\", \"<meter>\"], [\"<second>\", \"<second>\"]],\n        \"<pound-force>\": [[\"lbf\", \"pound-force\"], 4.448222, \"force\", [\"<kilogram>\", \"<meter>\"], [\"<second>\", \"<second>\"]],\n        /* frequency */\n        \"<hertz>\": [[\"Hz\", \"hertz\", \"Hertz\"], 1, \"frequency\", [\"<1>\"], [\"<second>\"]],\n        /* angle */\n        \"<radian>\": [[\"rad\", \"radian\", \"radians\"], 1, \"angle\", [\"<radian>\"]],\n        \"<degree>\": [[\"deg\", \"degree\", \"degrees\"], Math.PI / 180, \"angle\", [\"<radian>\"]],\n        \"<arcminute>\": [[\"arcmin\", \"arcminute\", \"arcminutes\"], Math.PI / 10800, \"angle\", [\"<radian>\"]],\n        \"<arcsecond>\": [[\"arcsec\", \"arcsecond\", \"arcseconds\"], Math.PI / 648e3, \"angle\", [\"<radian>\"]],\n        \"<gradian>\": [[\"gon\", \"grad\", \"gradian\", \"grads\"], Math.PI / 200, \"angle\", [\"<radian>\"]],\n        \"<steradian>\": [[\"sr\", \"steradian\", \"steradians\"], 1, \"solid_angle\", [\"<steradian>\"]],\n        /* rotation */\n        \"<rotation>\": [[\"rotation\"], 2 * Math.PI, \"angle\", [\"<radian>\"]],\n        \"<rpm>\": [[\"rpm\"], 2 * Math.PI / 60, \"angular_velocity\", [\"<radian>\"], [\"<second>\"]],\n        /* information */\n        \"<byte>\": [[\"B\", \"byte\", \"bytes\"], 1, \"information\", [\"<byte>\"]],\n        \"<bit>\": [[\"b\", \"bit\", \"bits\"], 0.125, \"information\", [\"<byte>\"]],\n        /* information rate */\n        \"<Bps>\": [[\"Bps\"], 1, \"information_rate\", [\"<byte>\"], [\"<second>\"]],\n        \"<bps>\": [[\"bps\"], 0.125, \"information_rate\", [\"<byte>\"], [\"<second>\"]],\n        /* currency */\n        \"<dollar>\": [[\"USD\", \"dollar\"], 1, \"currency\", [\"<dollar>\"]],\n        \"<cents>\": [[\"cents\"], 0.01, \"currency\", [\"<dollar>\"]],\n        /* luminosity */\n        \"<candela>\": [[\"cd\", \"candela\"], 1, \"luminosity\", [\"<candela>\"]],\n        \"<lumen>\": [[\"lm\", \"lumen\"], 1, \"luminous_power\", [\"<candela>\", \"<steradian>\"]],\n        \"<lux>\": [[\"lux\"], 1, \"illuminance\", [\"<candela>\", \"<steradian>\"], [\"<meter>\", \"<meter>\"]],\n        /* power */\n        \"<watt>\": [[\"W\", \"watt\", \"watts\"], 1, \"power\", [\"<kilogram>\", \"<meter>\", \"<meter>\"], [\"<second>\", \"<second>\", \"<second>\"]],\n        \"<volt-ampere>\": [[\"VA\", \"volt-ampere\"], 1, \"power\", [\"<kilogram>\", \"<meter>\", \"<meter>\"], [\"<second>\", \"<second>\", \"<second>\"]],\n        \"<volt-ampere-reactive>\": [[\"var\", \"Var\", \"VAr\", \"VAR\", \"volt-ampere-reactive\"], 1, \"power\", [\"<kilogram>\", \"<meter>\", \"<meter>\"], [\"<second>\", \"<second>\", \"<second>\"]],\n        \"<horsepower>\": [[\"hp\", \"horsepower\"], 745.699872, \"power\", [\"<kilogram>\", \"<meter>\", \"<meter>\"], [\"<second>\", \"<second>\", \"<second>\"]],\n        /* radiation */\n        \"<gray>\": [[\"Gy\", \"gray\", \"grays\"], 1, \"radiation\", [\"<meter>\", \"<meter>\"], [\"<second>\", \"<second>\"]],\n        \"<roentgen>\": [[\"R\", \"roentgen\"], 933e-5, \"radiation\", [\"<meter>\", \"<meter>\"], [\"<second>\", \"<second>\"]],\n        \"<sievert>\": [[\"Sv\", \"sievert\", \"sieverts\"], 1, \"radiation\", [\"<meter>\", \"<meter>\"], [\"<second>\", \"<second>\"]],\n        \"<becquerel>\": [[\"Bq\", \"becquerel\", \"becquerels\"], 1, \"radiation\", [\"<1>\"], [\"<second>\"]],\n        \"<curie>\": [[\"Ci\", \"curie\", \"curies\"], 37e9, \"radiation\", [\"<1>\"], [\"<second>\"]],\n        /* rate */\n        \"<cpm>\": [[\"cpm\"], 1 / 60, \"rate\", [\"<count>\"], [\"<second>\"]],\n        \"<dpm>\": [[\"dpm\"], 1 / 60, \"rate\", [\"<count>\"], [\"<second>\"]],\n        \"<bpm>\": [[\"bpm\"], 1 / 60, \"rate\", [\"<count>\"], [\"<second>\"]],\n        /* resolution / typography */\n        \"<dot>\": [[\"dot\", \"dots\"], 1, \"resolution\", [\"<each>\"]],\n        \"<pixel>\": [[\"pixel\", \"px\"], 1, \"resolution\", [\"<each>\"]],\n        \"<ppi>\": [[\"ppi\"], 1, \"resolution\", [\"<pixel>\"], [\"<inch>\"]],\n        \"<dpi>\": [[\"dpi\"], 1, \"typography\", [\"<dot>\"], [\"<inch>\"]],\n        /* other */\n        \"<cell>\": [[\"cells\", \"cell\"], 1, \"counting\", [\"<each>\"]],\n        \"<each>\": [[\"each\"], 1, \"counting\", [\"<each>\"]],\n        \"<count>\": [[\"count\"], 1, \"counting\", [\"<each>\"]],\n        \"<base-pair>\": [[\"bp\", \"base-pair\"], 1, \"counting\", [\"<each>\"]],\n        \"<nucleotide>\": [[\"nt\", \"nucleotide\"], 1, \"counting\", [\"<each>\"]],\n        \"<molecule>\": [[\"molecule\", \"molecules\"], 1, \"counting\", [\"<1>\"]],\n        \"<dozen>\": [[\"doz\", \"dz\", \"dozen\"], 12, \"prefix_only\", [\"<each>\"]],\n        \"<percent>\": [[\"%\", \"percent\"], 0.01, \"prefix_only\", [\"<1>\"]],\n        \"<ppm>\": [[\"ppm\"], 1e-6, \"prefix_only\", [\"<1>\"]],\n        \"<ppb>\": [[\"ppb\"], 1e-9, \"prefix_only\", [\"<1>\"]],\n        \"<ppt>\": [[\"ppt\"], 1e-12, \"prefix_only\", [\"<1>\"]],\n        \"<ppq>\": [[\"ppq\"], 1e-15, \"prefix_only\", [\"<1>\"]],\n        \"<gross>\": [[\"gr\", \"gross\"], 144, \"prefix_only\", [\"<dozen>\", \"<dozen>\"]],\n        \"<decibel>\": [[\"dB\", \"decibel\", \"decibels\"], 1, \"logarithmic\", [\"<decibel>\"]]\n      }, A = [\"<meter>\", \"<kilogram>\", \"<second>\", \"<mole>\", \"<ampere>\", \"<radian>\", \"<kelvin>\", \"<temp-K>\", \"<byte>\", \"<dollar>\", \"<candela>\", \"<each>\", \"<steradian>\", \"<decibel>\"], T = \"<1>\", C = [T];\n      function D(M, _) {\n        var d = _[1], u = _[3] || [], v = _[4] || [];\n        if (!n(d))\n          throw new g(M + \": Invalid unit definition. 'scalar' must be a number\");\n        u.forEach(function(S) {\n          if (k[S] === void 0)\n            throw new g(M + \": Invalid unit definition. Unit \" + S + \" in 'numerator' is not recognized\");\n        }), v.forEach(function(S) {\n          if (k[S] === void 0)\n            throw new g(M + \": Invalid unit definition. Unit \" + S + \" in 'denominator' is not recognized\");\n        });\n      }\n      var $ = {}, P = {}, z = {}, B = {}, F = {};\n      for (var O in k)\n        if (k.hasOwnProperty(O)) {\n          var N = k[O];\n          if (N[2] === \"prefix\") {\n            $[O] = N[1];\n            for (var G = 0; G < N[0].length; G++)\n              P[N[0][G]] = O;\n          } else {\n            D(O, N), z[O] = {\n              scalar: N[1],\n              numerator: N[3],\n              denominator: N[4]\n            };\n            for (var V = 0; V < N[0].length; V++)\n              B[N[0][V]] = O;\n          }\n          F[O] = N[0][0];\n        }\n      function J(M) {\n        var _, d = [], u = Object.keys(k);\n        if (typeof M > \"u\")\n          for (_ = 0; _ < u.length; _++)\n            [\"\", \"prefix\"].indexOf(k[u[_]][2]) === -1 && d.push(u[_].substr(1, u[_].length - 2));\n        else {\n          if (this.getKinds().indexOf(M) === -1)\n            throw new g(\"Kind not recognized\");\n          for (_ = 0; _ < u.length; _++)\n            k[u[_]][2] === M && d.push(u[_].substr(1, u[_].length - 2));\n        }\n        return d.sort(function(v, S) {\n          return v.toLowerCase() < S.toLowerCase() ? -1 : v.toLowerCase() > S.toLowerCase() ? 1 : 0;\n        });\n      }\n      function Q(M) {\n        if (!B[M])\n          throw new g(\"Unit not recognized\");\n        return k[B[M]][0];\n      }\n      var W = [\"length\", \"time\", \"temperature\", \"mass\", \"current\", \"substance\", \"luminosity\", \"currency\", \"information\", \"angle\"];\n      function ne() {\n        if (this.signature)\n          return this.signature;\n        for (var M = pe.call(this), _ = 0; _ < M.length; _++)\n          M[_] *= Math.pow(20, _);\n        return M.reduce(\n          function(d, u) {\n            return d + u;\n          },\n          0\n        );\n      }\n      function pe() {\n        if (!this.isBase())\n          return pe.call(this.toBase());\n        for (var M = new Array(W.length), _ = 0; _ < M.length; _++)\n          M[_] = 0;\n        for (var d, u, v = 0; v < this.numerator.length; v++)\n          (d = k[this.numerator[v]]) && (u = W.indexOf(d[2]), u >= 0 && (M[u] = M[u] + 1));\n        for (var S = 0; S < this.denominator.length; S++)\n          (d = k[this.denominator[S]]) && (u = W.indexOf(d[2]), u >= 0 && (M[u] = M[u] - 1));\n        return M;\n      }\n      var be = \"[+-]\", ve = \"\\\\d+\", Ee = be + \"?\" + ve, Ae = \"\\\\.\" + ve, _e = \"(?:\" + ve + \"(?:\" + Ae + \")?)|(?:\" + Ae + \")\", Be = \"[Ee]\" + Ee, Me = \"(?:\" + _e + \")(?:\" + Be + \")?\", re = be + \"?\\\\s*\" + Me, Te = \"(\" + re + \")?\\\\s*([^/]*)(?:/(.+))?\", Fe = new RegExp(\"^\" + Te + \"$\"), Se = \"\\\\^|\\\\*{2}\", Ye = \"[01234]\", Je = new RegExp(\"([^ \\\\*\\\\d]+?)(?:\" + Se + \")?(-?\" + Ye + \"(?![a-zA-Z]))\"), et = new RegExp(\"([^ \\\\*\\\\d]+?)(?:\" + Se + \")?(\" + Ye + \"(?![a-zA-Z]))\");\n      function Ve(M) {\n        t(M) || (M = M.toString()), M = M.trim();\n        var _ = Fe.exec(M);\n        if (!_)\n          throw new g(M + \": Quantity not recognized\");\n        var d = _[1];\n        d ? (d = d.replace(/\\s/g, \"\"), this.scalar = parseFloat(d)) : this.scalar = 1;\n        for (var u = _[2], v = _[3], S, L, q; _ = Je.exec(u); ) {\n          if (S = parseFloat(_[2]), isNaN(S))\n            throw new g(\"Unit exponent is not a number\");\n          if (S === 0 && !Ge.test(_[1]))\n            throw new g(\"Unit not recognized\");\n          L = _[1] + \" \", q = \"\";\n          for (var X = 0; X < Math.abs(S); X++)\n            q += L;\n          S >= 0 ? u = u.replace(_[0], q) : (v = v ? v + q : q, u = u.replace(_[0], \"\"));\n        }\n        for (; _ = et.exec(v); ) {\n          if (S = parseFloat(_[2]), isNaN(S))\n            throw new g(\"Unit exponent is not a number\");\n          if (S === 0 && !Ge.test(_[1]))\n            throw new g(\"Unit not recognized\");\n          L = _[1] + \" \", q = \"\";\n          for (var j = 0; j < S; j++)\n            q += L;\n          v = v.replace(_[0], q);\n        }\n        u && (this.numerator = Qe(u.trim())), v && (this.denominator = Qe(v.trim()));\n      }\n      var tt = Object.keys(P).sort(function(M, _) {\n        return _.length - M.length;\n      }).join(\"|\"), qe = Object.keys(B).sort(function(M, _) {\n        return _.length - M.length;\n      }).join(\"|\"), Re = \"\\\\b|$\", nt = \"(\" + tt + \")??(\" + qe + \")(?:\" + Re + \")\", Ge = new RegExp(\"^\\\\s*(\" + nt + \"[\\\\s\\\\*]*)+$\"), Ne = new RegExp(nt, \"g\"), he = {};\n      function Qe(M) {\n        var _ = he[M];\n        if (_)\n          return _;\n        var d, u = [];\n        if (!Ge.test(M))\n          throw new g(\"Unit not recognized\");\n        for (; d = Ne.exec(M); )\n          u.push(d.slice(1));\n        return u = u.map(function(v) {\n          return P[v[0]] ? [P[v[0]], B[v[1]]] : [B[v[1]]];\n        }), u = u.reduce(function(v, S) {\n          return v.concat(S);\n        }, []), u = u.filter(function(v) {\n          return v;\n        }), he[M] = u, u;\n      }\n      function Ze(M) {\n        if (!t(M))\n          throw new g(\"Argument should be a string\");\n        try {\n          return this(M);\n        } catch {\n          return null;\n        }\n      }\n      function He(M) {\n        return M instanceof De;\n      }\n      function De(M, _) {\n        if (lt.apply(null, arguments), !He(this))\n          return new De(M, _);\n        if (this.scalar = null, this.baseScalar = null, this.signature = null, this._conversionCache = {}, this.numerator = C, this.denominator = C, ot(M) ? (this.scalar = M.scalar, this.numerator = M.numerator && M.numerator.length !== 0 ? M.numerator : C, this.denominator = M.denominator && M.denominator.length !== 0 ? M.denominator : C) : _ ? (Ve.call(this, _), this.scalar = M) : Ve.call(this, M), this.denominator.join(\"*\").indexOf(\"temp\") >= 0)\n          throw new g(\"Cannot divide with temperatures\");\n        if (this.numerator.join(\"*\").indexOf(\"temp\") >= 0) {\n          if (this.numerator.length > 1)\n            throw new g(\"Cannot multiply by temperatures\");\n          if (!o(this.denominator, C))\n            throw new g(\"Cannot divide with temperatures\");\n        }\n        if (this.initValue = M, Le.call(this), this.isTemperature() && this.baseScalar < 0)\n          throw new g(\"Temperatures must not be less than absolute zero\");\n      }\n      De.prototype = {\n        // Properly set up constructor\n        constructor: De\n      };\n      function lt(M, _) {\n        if (_) {\n          if (!(n(M) && t(_)))\n            throw new g(\"Only number accepted as initialization value when units are explicitly provided\");\n        } else if (!(t(M) || n(M) || He(M) || ot(M)))\n          throw new g(\"Only string, number or quantity accepted as single initialization value\");\n      }\n      function ot(M) {\n        return M && typeof M == \"object\" && M.hasOwnProperty(\"scalar\");\n      }\n      function Le() {\n        if (this.baseScalar)\n          return this.baseScalar;\n        if (this.isBase())\n          this.baseScalar = this.scalar, this.signature = ne.call(this);\n        else {\n          var M = this.toBase();\n          this.baseScalar = M.scalar, this.signature = M.signature;\n        }\n      }\n      var ze = {\n        \"-312078\": \"elastance\",\n        \"-312058\": \"resistance\",\n        \"-312038\": \"inductance\",\n        \"-152058\": \"potential\",\n        \"-152040\": \"magnetism\",\n        \"-152038\": \"magnetism\",\n        \"-7997\": \"specific_volume\",\n        \"-79\": \"snap\",\n        \"-59\": \"jolt\",\n        \"-39\": \"acceleration\",\n        \"-38\": \"radiation\",\n        \"-20\": \"frequency\",\n        \"-19\": \"speed\",\n        \"-18\": \"viscosity\",\n        \"-17\": \"volumetric_flow\",\n        \"-1\": \"wavenumber\",\n        0: \"unitless\",\n        1: \"length\",\n        2: \"area\",\n        3: \"volume\",\n        20: \"time\",\n        400: \"temperature\",\n        7941: \"yank\",\n        7942: \"power\",\n        7959: \"pressure\",\n        7961: \"force\",\n        7962: \"energy\",\n        7979: \"viscosity\",\n        7981: \"momentum\",\n        7982: \"angular_momentum\",\n        7997: \"density\",\n        7998: \"area_density\",\n        8e3: \"mass\",\n        152020: \"radiation_exposure\",\n        159999: \"magnetism\",\n        16e4: \"current\",\n        160020: \"charge\",\n        312058: \"conductance\",\n        312078: \"capacitance\",\n        3199980: \"activity\",\n        3199997: \"molar_concentration\",\n        32e5: \"substance\",\n        63999998: \"illuminance\",\n        64e6: \"luminous_power\",\n        128e7: \"currency\",\n        \"25599999980\": \"information_rate\",\n        \"25600000000\": \"information\",\n        \"511999999980\": \"angular_velocity\",\n        \"512000000000\": \"angle\"\n      };\n      function je() {\n        return s(Object.keys(ze).map(function(M) {\n          return ze[M];\n        }));\n      }\n      De.prototype.kind = function() {\n        return ze[this.signature.toString()];\n      }, h(De.prototype, {\n        isDegrees: function() {\n          return (this.signature === null || this.signature === 400) && this.numerator.length === 1 && o(this.denominator, C) && (this.numerator[0].match(/<temp-[CFRK]>/) || this.numerator[0].match(/<(kelvin|celsius|rankine|fahrenheit)>/));\n        },\n        isTemperature: function() {\n          return this.isDegrees() && this.numerator[0].match(/<temp-[CFRK]>/);\n        }\n      });\n      function Oe(M, _) {\n        var d = M.units(), u = _.to(d), v = De(ue(d));\n        return De({ scalar: M.scalar - u.scalar, numerator: v.numerator, denominator: v.denominator });\n      }\n      function st(M, _) {\n        var d = _.to(ue(M.units()));\n        return De({ scalar: M.scalar - d.scalar, numerator: M.numerator, denominator: M.denominator });\n      }\n      function Z(M, _) {\n        var d = _.to(ue(M.units()));\n        return De({ scalar: M.scalar + d.scalar, numerator: M.numerator, denominator: M.denominator });\n      }\n      function ue(M) {\n        if (M === \"tempK\")\n          return \"degK\";\n        if (M === \"tempC\")\n          return \"degC\";\n        if (M === \"tempF\")\n          return \"degF\";\n        if (M === \"tempR\")\n          return \"degR\";\n        throw new g(\"Unknown type for temp conversion from: \" + M);\n      }\n      function xe(M, _) {\n        var d = ke(M), u = _.units(), v;\n        if (u === \"degK\")\n          v = d.scalar;\n        else if (u === \"degC\")\n          v = d.scalar;\n        else if (u === \"degF\")\n          v = d.scalar * 9 / 5;\n        else if (u === \"degR\")\n          v = d.scalar * 9 / 5;\n        else\n          throw new g(\"Unknown type for degree conversion to: \" + u);\n        return De({ scalar: v, numerator: _.numerator, denominator: _.denominator });\n      }\n      function ke(M) {\n        var _ = M.units(), d;\n        if (_.match(/(deg)[CFRK]/))\n          d = M.baseScalar;\n        else if (_ === \"tempK\")\n          d = M.scalar;\n        else if (_ === \"tempC\")\n          d = M.scalar;\n        else if (_ === \"tempF\")\n          d = M.scalar * 5 / 9;\n        else if (_ === \"tempR\")\n          d = M.scalar * 5 / 9;\n        else\n          throw new g(\"Unknown type for temp conversion from: \" + _);\n        return De({ scalar: d, numerator: [\"<kelvin>\"], denominator: C });\n      }\n      function te(M, _) {\n        var d = _.units(), u;\n        if (d === \"tempK\")\n          u = M.baseScalar;\n        else if (d === \"tempC\")\n          u = M.baseScalar - 273.15;\n        else if (d === \"tempF\")\n          u = M.baseScalar * 9 / 5 - 459.67;\n        else if (d === \"tempR\")\n          u = M.baseScalar * 9 / 5;\n        else\n          throw new g(\"Unknown type for temp conversion to: \" + d);\n        return De({ scalar: u, numerator: _.numerator, denominator: _.denominator });\n      }\n      function me(M) {\n        var _ = M.units(), d;\n        if (_.match(/(deg)[CFRK]/))\n          d = M.baseScalar;\n        else if (_ === \"tempK\")\n          d = M.scalar;\n        else if (_ === \"tempC\")\n          d = M.scalar + 273.15;\n        else if (_ === \"tempF\")\n          d = (M.scalar + 459.67) * 5 / 9;\n        else if (_ === \"tempR\")\n          d = M.scalar * 5 / 9;\n        else\n          throw new g(\"Unknown type for temp conversion from: \" + _);\n        return De({ scalar: d, numerator: [\"<temp-K>\"], denominator: C });\n      }\n      h(De.prototype, {\n        /**\n         * Converts to other compatible units.\n         * Instance's converted quantities are cached for faster subsequent calls.\n         *\n         * @param {(string|Qty)} other - Target units as string or retrieved from\n         *                               other Qty instance (scalar is ignored)\n         *\n         * @returns {Qty} New converted Qty instance with target units\n         *\n         * @throws {QtyError} if target units are incompatible\n         *\n         * @example\n         * var weight = Qty(\"25 kg\");\n         * weight.to(\"lb\"); // => Qty(\"55.11556554621939 lbs\");\n         * weight.to(Qty(\"3 g\")); // => Qty(\"25000 g\"); // scalar of passed Qty is ignored\n         */\n        to: function(M) {\n          var _, d;\n          if (M == null)\n            return this;\n          if (!t(M))\n            return this.to(M.units());\n          if (_ = this._conversionCache[M], _)\n            return _;\n          if (d = De(M), d.units() === this.units())\n            return this;\n          if (!this.isCompatible(d))\n            this.isInverse(d) ? d = this.inverse().to(M) : E(this.units(), d.units());\n          else if (d.isTemperature())\n            d = te(this, d);\n          else if (d.isDegrees())\n            d = xe(this, d);\n          else {\n            var u = f(this.baseScalar, d.baseScalar);\n            d = De({ scalar: u, numerator: d.numerator, denominator: d.denominator });\n          }\n          return this._conversionCache[M] = d, d;\n        },\n        // convert to base SI units\n        // results of the conversion are cached so subsequent calls to this will be fast\n        toBase: function() {\n          if (this.isBase())\n            return this;\n          if (this.isTemperature())\n            return me(this);\n          var M = ye[this.units()];\n          return M || (M = it(this.numerator, this.denominator), ye[this.units()] = M), M.mul(this.scalar);\n        },\n        // Converts the unit back to a float if it is unitless.  Otherwise raises an exception\n        toFloat: function() {\n          if (this.isUnitless())\n            return this.scalar;\n          throw new g(\"Can't convert to Float unless unitless.  Use Unit#scalar\");\n        },\n        /**\n         * Returns the nearest multiple of quantity passed as\n         * precision\n         *\n         * @param {(Qty|string|number)} precQuantity - Quantity, string formated\n         *   quantity or number as expected precision\n         *\n         * @returns {Qty} Nearest multiple of precQuantity\n         *\n         * @example\n         * Qty('5.5 ft').toPrec('2 ft'); // returns 6 ft\n         * Qty('0.8 cu').toPrec('0.25 cu'); // returns 0.75 cu\n         * Qty('6.3782 m').toPrec('cm'); // returns 6.38 m\n         * Qty('1.146 MPa').toPrec('0.1 bar'); // returns 1.15 MPa\n         *\n         */\n        toPrec: function(M) {\n          if (t(M) && (M = De(M)), n(M) && (M = De(M + \" \" + this.units())), this.isUnitless() ? M.isUnitless() || E(this.units(), M.units()) : M = M.to(this.units()), M.scalar === 0)\n            throw new g(\"Divide by zero\");\n          var _ = l(\n            Math.round(this.scalar / M.scalar),\n            M.scalar\n          );\n          return De(_ + this.units());\n        }\n      });\n      function U(M, _) {\n        var d = De(M), u = De(_);\n        if (d.eq(u))\n          return a;\n        var v;\n        return d.isTemperature() ? v = function(S) {\n          return d.mul(S).to(u).scalar;\n        } : v = function(S) {\n          return S * d.baseScalar / u.baseScalar;\n        }, function(L) {\n          var q, X, j;\n          if (Array.isArray(L)) {\n            for (X = L.length, j = [], q = 0; q < X; q++)\n              j.push(v(L[q]));\n            return j;\n          } else\n            return v(L);\n        };\n      }\n      var ye = {};\n      function it(M, _) {\n        for (var d = [], u = [], v = 1, S, L = 0; L < M.length; L++)\n          S = M[L], $[S] ? v = l(v, $[S]) : z[S] && (v *= z[S].scalar, z[S].numerator && d.push(z[S].numerator), z[S].denominator && u.push(z[S].denominator));\n        for (var q = 0; q < _.length; q++)\n          S = _[q], $[S] ? v /= $[S] : z[S] && (v /= z[S].scalar, z[S].numerator && u.push(z[S].numerator), z[S].denominator && d.push(z[S].denominator));\n        return d = d.reduce(function(X, j) {\n          return X.concat(j);\n        }, []), u = u.reduce(function(X, j) {\n          return X.concat(j);\n        }, []), De({ scalar: v, numerator: d, denominator: u });\n      }\n      De.parse = Ze, De.getUnits = J, De.getAliases = Q, De.mulSafe = l, De.divSafe = f, De.getKinds = je, De.swiftConverter = U, De.Error = g, h(De.prototype, {\n        // Returns new instance with units of this\n        add: function(M) {\n          if (t(M) && (M = De(M)), this.isCompatible(M) || E(this.units(), M.units()), this.isTemperature() && M.isTemperature())\n            throw new g(\"Cannot add two temperatures\");\n          return this.isTemperature() ? Z(this, M) : M.isTemperature() ? Z(M, this) : De({ scalar: this.scalar + M.to(this).scalar, numerator: this.numerator, denominator: this.denominator });\n        },\n        sub: function(M) {\n          if (t(M) && (M = De(M)), this.isCompatible(M) || E(this.units(), M.units()), this.isTemperature() && M.isTemperature())\n            return Oe(this, M);\n          if (this.isTemperature())\n            return st(this, M);\n          if (M.isTemperature())\n            throw new g(\"Cannot subtract a temperature from a differential degree unit\");\n          return De({ scalar: this.scalar - M.to(this).scalar, numerator: this.numerator, denominator: this.denominator });\n        },\n        mul: function(M) {\n          if (n(M))\n            return De({ scalar: l(this.scalar, M), numerator: this.numerator, denominator: this.denominator });\n          if (t(M) && (M = De(M)), (this.isTemperature() || M.isTemperature()) && !(this.isUnitless() || M.isUnitless()))\n            throw new g(\"Cannot multiply by temperatures\");\n          var _ = this, d = M;\n          _.isCompatible(d) && _.signature !== 400 && (d = d.to(_));\n          var u = I(_.numerator, _.denominator, d.numerator, d.denominator);\n          return De({ scalar: l(_.scalar, d.scalar, u[2]), numerator: u[0], denominator: u[1] });\n        },\n        div: function(M) {\n          if (n(M)) {\n            if (M === 0)\n              throw new g(\"Divide by zero\");\n            return De({ scalar: this.scalar / M, numerator: this.numerator, denominator: this.denominator });\n          } else t(M) && (M = De(M));\n          if (M.scalar === 0)\n            throw new g(\"Divide by zero\");\n          if (M.isTemperature())\n            throw new g(\"Cannot divide with temperatures\");\n          if (this.isTemperature() && !M.isUnitless())\n            throw new g(\"Cannot divide with temperatures\");\n          var _ = this, d = M;\n          _.isCompatible(d) && _.signature !== 400 && (d = d.to(_));\n          var u = I(_.numerator, _.denominator, d.denominator, d.numerator);\n          return De({ scalar: l(_.scalar, u[2]) / d.scalar, numerator: u[0], denominator: u[1] });\n        },\n        // Returns a Qty that is the inverse of this Qty,\n        inverse: function() {\n          if (this.isTemperature())\n            throw new g(\"Cannot divide with temperatures\");\n          if (this.scalar === 0)\n            throw new g(\"Divide by zero\");\n          return De({ scalar: 1 / this.scalar, numerator: this.denominator, denominator: this.numerator });\n        }\n      });\n      function I(M, _, d, u) {\n        function v(we) {\n          return we !== T;\n        }\n        M = M.filter(v), d = d.filter(v), _ = _.filter(v), u = u.filter(v);\n        var S = {};\n        function L(we, le) {\n          for (var ge, Ue, ie, Ce = 0; Ce < we.length; Ce++)\n            if ($[we[Ce]] ? (ge = we[Ce + 1], Ue = we[Ce], ie = $[Ue], Ce++) : (ge = we[Ce], Ue = null, ie = 1), ge && ge !== T)\n              if (S[ge]) {\n                S[ge][0] += le;\n                var Xe = S[ge][2] ? $[S[ge][2]] : 1;\n                S[ge][le === 1 ? 3 : 4] *= f(ie, Xe);\n              } else\n                S[ge] = [le, ge, Ue, 1, 1];\n        }\n        L(M, 1), L(_, -1), L(d, 1), L(u, -1);\n        var q = [], X = [], j = 1;\n        for (var ae in S)\n          if (S.hasOwnProperty(ae)) {\n            var K = S[ae], ce;\n            if (K[0] > 0)\n              for (ce = 0; ce < K[0]; ce++)\n                q.push(K[2] === null ? K[1] : [K[2], K[1]]);\n            else if (K[0] < 0)\n              for (ce = 0; ce < -K[0]; ce++)\n                X.push(K[2] === null ? K[1] : [K[2], K[1]]);\n            j *= f(K[3], K[4]);\n          }\n        return q.length === 0 && (q = C), X.length === 0 && (X = C), q = q.reduce(function(we, le) {\n          return we.concat(le);\n        }, []), X = X.reduce(function(we, le) {\n          return we.concat(le);\n        }, []), [q, X, j];\n      }\n      h(De.prototype, {\n        eq: function(M) {\n          return this.compareTo(M) === 0;\n        },\n        lt: function(M) {\n          return this.compareTo(M) === -1;\n        },\n        lte: function(M) {\n          return this.eq(M) || this.lt(M);\n        },\n        gt: function(M) {\n          return this.compareTo(M) === 1;\n        },\n        gte: function(M) {\n          return this.eq(M) || this.gt(M);\n        },\n        // Compare two Qty objects. Throws an exception if they are not of compatible types.\n        // Comparisons are done based on the value of the quantity in base SI units.\n        //\n        // NOTE: We cannot compare inverses as that breaks the general compareTo contract:\n        //   if a.compareTo(b) < 0 then b.compareTo(a) > 0\n        //   if a.compareTo(b) == 0 then b.compareTo(a) == 0\n        //\n        //   Since \"10S\" == \".1ohm\" (10 > .1) and \"10ohm\" == \".1S\" (10 > .1)\n        //     Qty(\"10S\").inverse().compareTo(\"10ohm\") == -1\n        //     Qty(\"10ohm\").inverse().compareTo(\"10S\") == -1\n        //\n        //   If including inverses in the sort is needed, I suggest writing: Qty.sort(qtyArray,units)\n        compareTo: function(M) {\n          if (t(M))\n            return this.compareTo(De(M));\n          if (this.isCompatible(M) || E(this.units(), M.units()), this.baseScalar < M.baseScalar)\n            return -1;\n          if (this.baseScalar === M.baseScalar)\n            return 0;\n          if (this.baseScalar > M.baseScalar)\n            return 1;\n        },\n        // Return true if quantities and units match\n        // Unit(\"100 cm\").same(Unit(\"100 cm\"))  # => true\n        // Unit(\"100 cm\").same(Unit(\"1 m\"))     # => false\n        same: function(M) {\n          return this.scalar === M.scalar && this.units() === M.units();\n        }\n      }), h(De.prototype, {\n        // returns true if no associated units\n        // false, even if the units are \"unitless\" like 'radians, each, etc'\n        isUnitless: function() {\n          return [this.numerator, this.denominator].every(function(M) {\n            return o(M, C);\n          });\n        },\n        /*\n        check to see if units are compatible, but not the scalar part\n        this check is done by comparing signatures for performance reasons\n        if passed a string, it will create a unit object with the string and then do the comparison\n        this permits a syntax like:\n        unit =~ \"mm\"\n        if you want to do a regexp on the unit string do this ...\n        unit.units =~ /regexp/\n        */\n        isCompatible: function(M) {\n          return t(M) ? this.isCompatible(De(M)) : He(M) && M.signature !== void 0 ? this.signature === M.signature : !1;\n        },\n        /*\n        check to see if units are inverse of each other, but not the scalar part\n        this check is done by comparing signatures for performance reasons\n        if passed a string, it will create a unit object with the string and then do the comparison\n        this permits a syntax like:\n        unit =~ \"mm\"\n        if you want to do a regexp on the unit string do this ...\n        unit.units =~ /regexp/\n        */\n        isInverse: function(M) {\n          return this.inverse().isCompatible(M);\n        },\n        // Returns 'true' if the Unit is represented in base units\n        isBase: function() {\n          return this._isBase !== void 0 ? this._isBase : this.isDegrees() && this.numerator[0].match(/<(kelvin|temp-K)>/) ? (this._isBase = !0, this._isBase) : (this.numerator.concat(this.denominator).forEach(function(M) {\n            M !== T && A.indexOf(M) === -1 && (this._isBase = !1);\n          }, this), this._isBase === !1 ? this._isBase : (this._isBase = !0, this._isBase));\n        }\n      });\n      function fe() {\n      }\n      fe.prototype.get = function(M) {\n        return arguments.length > 1 && (M = Array.apply(null, arguments)), M.reduce(\n          function(_, d, u) {\n            if (_) {\n              var v = _[d];\n              return u === M.length - 1 ? v ? v.data : void 0 : v;\n            }\n          },\n          this\n        );\n      }, fe.prototype.set = function(M, _) {\n        return arguments.length > 2 && (M = Array.prototype.slice.call(arguments, 0, -1), _ = arguments[arguments.length - 1]), M.reduce(function(d, u, v) {\n          var S = d[u];\n          return S === void 0 && (S = d[u] = {}), v === M.length - 1 ? (S.data = _, _) : S;\n        }, this);\n      };\n      function de(M, _) {\n        return (M + \" \" + _).trim();\n      }\n      De.formatter = de, h(De.prototype, {\n        // returns the 'unit' part of the Unit object without the scalar\n        units: function() {\n          if (this._units !== void 0)\n            return this._units;\n          var M = o(this.numerator, C), _ = o(this.denominator, C);\n          if (M && _)\n            return this._units = \"\", this._units;\n          var d = ee(this.numerator), u = ee(this.denominator);\n          return this._units = d + (_ ? \"\" : \"/\" + u), this._units;\n        },\n        /**\n         * Stringifies the quantity\n         * Deprecation notice: only units parameter is supported.\n         *\n         * @param {(number|string|Qty)} targetUnitsOrMaxDecimalsOrPrec -\n         *                              target units if string,\n         *                              max number of decimals if number,\n         *                              passed to #toPrec before converting if Qty\n         *\n         * @param {number=} maxDecimals - Maximum number of decimals of\n         *                                formatted output\n         *\n         * @returns {string} reparseable quantity as string\n         */\n        toString: function(M, _) {\n          var d;\n          if (n(M))\n            d = this.units(), _ = M;\n          else if (t(M))\n            d = M;\n          else if (He(M))\n            return this.toPrec(M).toString(_);\n          var u = this.to(d), v = _ !== void 0 ? b(u.scalar, _) : u.scalar;\n          return u = (v + \" \" + u.units()).trim(), u;\n        },\n        /**\n         * Format the quantity according to optional passed target units\n         * and formatter\n         *\n         * @param {string} [targetUnits=current units] -\n         *                 optional units to convert to before formatting\n         *\n         * @param {function} [formatter=Qty.formatter] -\n         *                   delegates formatting to formatter callback.\n         *                   formatter is called back with two parameters (scalar, units)\n         *                   and should return formatted result.\n         *                   If unspecified, formatting is delegated to default formatter\n         *                   set to Qty.formatter\n         *\n         * @example\n         * var roundingAndLocalizingFormatter = function(scalar, units) {\n         *   // localize or limit scalar to n max decimals for instance\n         *   // return formatted result\n         * };\n         * var qty = Qty('1.1234 m');\n         * qty.format(); // same units, default formatter => \"1.234 m\"\n         * qty.format(\"cm\"); // converted to \"cm\", default formatter => \"123.45 cm\"\n         * qty.format(roundingAndLocalizingFormatter); // same units, custom formatter => \"1,2 m\"\n         * qty.format(\"cm\", roundingAndLocalizingFormatter); // convert to \"cm\", custom formatter => \"123,4 cm\"\n         *\n         * @returns {string} quantity as string\n         */\n        format: function(M, _) {\n          arguments.length === 1 && typeof M == \"function\" && (_ = M, M = void 0), _ = _ || De.formatter;\n          var d = this.to(M);\n          return _.call(this, d.scalar, d.units());\n        }\n      });\n      var H = new fe();\n      function ee(M) {\n        var _ = H.get(M);\n        if (_)\n          return _;\n        var d = o(M, C);\n        return d ? _ = \"1\" : _ = We(oe(M)).join(\"*\"), H.set(M, _), _;\n      }\n      function oe(M) {\n        for (var _ = [], d, u, v = 0; v < M.length; v++)\n          d = M[v], u = M[v + 1], $[d] ? (_.push(F[d] + F[u]), v++) : _.push(F[d]);\n        return _;\n      }\n      function We(M) {\n        var _ = M.reduce(function(d, u) {\n          var v = d[u];\n          return v || d.push(v = d[u] = [u, 0]), v[1]++, d;\n        }, []);\n        return _.map(function(d) {\n          return d[0] + (d[1] > 1 ? d[1] : \"\");\n        });\n      }\n      return De.version = \"1.8.0\", De;\n    });\n  }(quantities$1)), quantities$1.exports;\n}\nvar quantitiesExports = requireQuantities();\nconst Qty = /* @__PURE__ */ getDefaultExportFromCjs(quantitiesExports);\nfunction deepValue(e, i = \"\") {\n  let t = i.split(\".\");\n  for (let r of t) {\n    if (e[r] === void 0) return;\n    e = e[r];\n  }\n  return e;\n}\nvar orientation = { exports: {} }, twoProduct_1, hasRequiredTwoProduct;\nfunction requireTwoProduct() {\n  if (hasRequiredTwoProduct) return twoProduct_1;\n  hasRequiredTwoProduct = 1, twoProduct_1 = i;\n  var e = +(Math.pow(2, 27) + 1);\n  function i(t, r, n) {\n    var a = t * r, s = e * t, o = s - t, h = s - o, l = t - h, f = e * r, b = f - r, w = f - b, g = r - w, E = a - h * w, k = E - l * w, A = k - h * g, T = l * g - A;\n    return n ? (n[0] = T, n[1] = a, n) : [T, a];\n  }\n  return twoProduct_1;\n}\nvar robustSum, hasRequiredRobustSum;\nfunction requireRobustSum() {\n  if (hasRequiredRobustSum) return robustSum;\n  hasRequiredRobustSum = 1, robustSum = i;\n  function e(t, r) {\n    var n = t + r, a = n - t, s = n - a, o = r - a, h = t - s, l = h + o;\n    return l ? [l, n] : [n];\n  }\n  function i(t, r) {\n    var n = t.length | 0, a = r.length | 0;\n    if (n === 1 && a === 1)\n      return e(t[0], r[0]);\n    var s = n + a, o = new Array(s), h = 0, l = 0, f = 0, b = Math.abs, w = t[l], g = b(w), E = r[f], k = b(E), A, T;\n    g < k ? (T = w, l += 1, l < n && (w = t[l], g = b(w))) : (T = E, f += 1, f < a && (E = r[f], k = b(E))), l < n && g < k || f >= a ? (A = w, l += 1, l < n && (w = t[l], g = b(w))) : (A = E, f += 1, f < a && (E = r[f], k = b(E)));\n    for (var C = A + T, D = C - A, $ = T - D, P = $, z = C, B, F, O, N, G; l < n && f < a; )\n      g < k ? (A = w, l += 1, l < n && (w = t[l], g = b(w))) : (A = E, f += 1, f < a && (E = r[f], k = b(E))), T = P, C = A + T, D = C - A, $ = T - D, $ && (o[h++] = $), B = z + C, F = B - z, O = B - F, N = C - F, G = z - O, P = G + N, z = B;\n    for (; l < n; )\n      A = w, T = P, C = A + T, D = C - A, $ = T - D, $ && (o[h++] = $), B = z + C, F = B - z, O = B - F, N = C - F, G = z - O, P = G + N, z = B, l += 1, l < n && (w = t[l]);\n    for (; f < a; )\n      A = E, T = P, C = A + T, D = C - A, $ = T - D, $ && (o[h++] = $), B = z + C, F = B - z, O = B - F, N = C - F, G = z - O, P = G + N, z = B, f += 1, f < a && (E = r[f]);\n    return P && (o[h++] = P), z && (o[h++] = z), h || (o[h++] = 0), o.length = h, o;\n  }\n  return robustSum;\n}\nvar twoSum, hasRequiredTwoSum;\nfunction requireTwoSum() {\n  if (hasRequiredTwoSum) return twoSum;\n  hasRequiredTwoSum = 1, twoSum = e;\n  function e(i, t, r) {\n    var n = i + t, a = n - i, s = n - a, o = t - a, h = i - s;\n    return r ? (r[0] = h + o, r[1] = n, r) : [h + o, n];\n  }\n  return twoSum;\n}\nvar robustScale, hasRequiredRobustScale;\nfunction requireRobustScale() {\n  if (hasRequiredRobustScale) return robustScale;\n  hasRequiredRobustScale = 1;\n  var e = requireTwoProduct(), i = requireTwoSum();\n  robustScale = t;\n  function t(r, n) {\n    var a = r.length;\n    if (a === 1) {\n      var s = e(r[0], n);\n      return s[0] ? s : [s[1]];\n    }\n    var o = new Array(2 * a), h = [0.1, 0.1], l = [0.1, 0.1], f = 0;\n    e(r[0], n, h), h[0] && (o[f++] = h[0]);\n    for (var b = 1; b < a; ++b) {\n      e(r[b], n, l);\n      var w = h[1];\n      i(w, l[0], h), h[0] && (o[f++] = h[0]);\n      var g = l[1], E = h[1], k = g + E, A = k - g, T = E - A;\n      h[1] = k, T && (o[f++] = T);\n    }\n    return h[1] && (o[f++] = h[1]), f === 0 && (o[f++] = 0), o.length = f, o;\n  }\n  return robustScale;\n}\nvar robustDiff, hasRequiredRobustDiff;\nfunction requireRobustDiff() {\n  if (hasRequiredRobustDiff) return robustDiff;\n  hasRequiredRobustDiff = 1, robustDiff = i;\n  function e(t, r) {\n    var n = t + r, a = n - t, s = n - a, o = r - a, h = t - s, l = h + o;\n    return l ? [l, n] : [n];\n  }\n  function i(t, r) {\n    var n = t.length | 0, a = r.length | 0;\n    if (n === 1 && a === 1)\n      return e(t[0], -r[0]);\n    var s = n + a, o = new Array(s), h = 0, l = 0, f = 0, b = Math.abs, w = t[l], g = b(w), E = -r[f], k = b(E), A, T;\n    g < k ? (T = w, l += 1, l < n && (w = t[l], g = b(w))) : (T = E, f += 1, f < a && (E = -r[f], k = b(E))), l < n && g < k || f >= a ? (A = w, l += 1, l < n && (w = t[l], g = b(w))) : (A = E, f += 1, f < a && (E = -r[f], k = b(E)));\n    for (var C = A + T, D = C - A, $ = T - D, P = $, z = C, B, F, O, N, G; l < n && f < a; )\n      g < k ? (A = w, l += 1, l < n && (w = t[l], g = b(w))) : (A = E, f += 1, f < a && (E = -r[f], k = b(E))), T = P, C = A + T, D = C - A, $ = T - D, $ && (o[h++] = $), B = z + C, F = B - z, O = B - F, N = C - F, G = z - O, P = G + N, z = B;\n    for (; l < n; )\n      A = w, T = P, C = A + T, D = C - A, $ = T - D, $ && (o[h++] = $), B = z + C, F = B - z, O = B - F, N = C - F, G = z - O, P = G + N, z = B, l += 1, l < n && (w = t[l]);\n    for (; f < a; )\n      A = E, T = P, C = A + T, D = C - A, $ = T - D, $ && (o[h++] = $), B = z + C, F = B - z, O = B - F, N = C - F, G = z - O, P = G + N, z = B, f += 1, f < a && (E = -r[f]);\n    return P && (o[h++] = P), z && (o[h++] = z), h || (o[h++] = 0), o.length = h, o;\n  }\n  return robustDiff;\n}\nvar hasRequiredOrientation;\nfunction requireOrientation() {\n  return hasRequiredOrientation || (hasRequiredOrientation = 1, function(e) {\n    var i = requireTwoProduct(), t = requireRobustSum(), r = requireRobustScale(), n = requireRobustDiff(), a = 5, s = 11102230246251565e-32, o = (3 + 16 * s) * s, h = (7 + 56 * s) * s;\n    function l(D, $, P, z) {\n      return function(F, O, N) {\n        var G = D(D($(O[1], N[0]), $(-N[1], O[0])), D($(F[1], O[0]), $(-O[1], F[0]))), V = D($(F[1], N[0]), $(-N[1], F[0])), J = z(G, V);\n        return J[J.length - 1];\n      };\n    }\n    function f(D, $, P, z) {\n      return function(F, O, N, G) {\n        var V = D(D(P(D($(N[1], G[0]), $(-G[1], N[0])), O[2]), D(P(D($(O[1], G[0]), $(-G[1], O[0])), -N[2]), P(D($(O[1], N[0]), $(-N[1], O[0])), G[2]))), D(P(D($(O[1], G[0]), $(-G[1], O[0])), F[2]), D(P(D($(F[1], G[0]), $(-G[1], F[0])), -O[2]), P(D($(F[1], O[0]), $(-O[1], F[0])), G[2])))), J = D(D(P(D($(N[1], G[0]), $(-G[1], N[0])), F[2]), D(P(D($(F[1], G[0]), $(-G[1], F[0])), -N[2]), P(D($(F[1], N[0]), $(-N[1], F[0])), G[2]))), D(P(D($(O[1], N[0]), $(-N[1], O[0])), F[2]), D(P(D($(F[1], N[0]), $(-N[1], F[0])), -O[2]), P(D($(F[1], O[0]), $(-O[1], F[0])), N[2])))), Q = z(V, J);\n        return Q[Q.length - 1];\n      };\n    }\n    function b(D, $, P, z) {\n      return function(F, O, N, G, V) {\n        var J = D(D(D(P(D(P(D($(G[1], V[0]), $(-V[1], G[0])), N[2]), D(P(D($(N[1], V[0]), $(-V[1], N[0])), -G[2]), P(D($(N[1], G[0]), $(-G[1], N[0])), V[2]))), O[3]), D(P(D(P(D($(G[1], V[0]), $(-V[1], G[0])), O[2]), D(P(D($(O[1], V[0]), $(-V[1], O[0])), -G[2]), P(D($(O[1], G[0]), $(-G[1], O[0])), V[2]))), -N[3]), P(D(P(D($(N[1], V[0]), $(-V[1], N[0])), O[2]), D(P(D($(O[1], V[0]), $(-V[1], O[0])), -N[2]), P(D($(O[1], N[0]), $(-N[1], O[0])), V[2]))), G[3]))), D(P(D(P(D($(N[1], G[0]), $(-G[1], N[0])), O[2]), D(P(D($(O[1], G[0]), $(-G[1], O[0])), -N[2]), P(D($(O[1], N[0]), $(-N[1], O[0])), G[2]))), -V[3]), D(P(D(P(D($(G[1], V[0]), $(-V[1], G[0])), O[2]), D(P(D($(O[1], V[0]), $(-V[1], O[0])), -G[2]), P(D($(O[1], G[0]), $(-G[1], O[0])), V[2]))), F[3]), P(D(P(D($(G[1], V[0]), $(-V[1], G[0])), F[2]), D(P(D($(F[1], V[0]), $(-V[1], F[0])), -G[2]), P(D($(F[1], G[0]), $(-G[1], F[0])), V[2]))), -O[3])))), D(D(P(D(P(D($(O[1], V[0]), $(-V[1], O[0])), F[2]), D(P(D($(F[1], V[0]), $(-V[1], F[0])), -O[2]), P(D($(F[1], O[0]), $(-O[1], F[0])), V[2]))), G[3]), D(P(D(P(D($(O[1], G[0]), $(-G[1], O[0])), F[2]), D(P(D($(F[1], G[0]), $(-G[1], F[0])), -O[2]), P(D($(F[1], O[0]), $(-O[1], F[0])), G[2]))), -V[3]), P(D(P(D($(N[1], G[0]), $(-G[1], N[0])), O[2]), D(P(D($(O[1], G[0]), $(-G[1], O[0])), -N[2]), P(D($(O[1], N[0]), $(-N[1], O[0])), G[2]))), F[3]))), D(P(D(P(D($(N[1], G[0]), $(-G[1], N[0])), F[2]), D(P(D($(F[1], G[0]), $(-G[1], F[0])), -N[2]), P(D($(F[1], N[0]), $(-N[1], F[0])), G[2]))), -O[3]), D(P(D(P(D($(O[1], G[0]), $(-G[1], O[0])), F[2]), D(P(D($(F[1], G[0]), $(-G[1], F[0])), -O[2]), P(D($(F[1], O[0]), $(-O[1], F[0])), G[2]))), N[3]), P(D(P(D($(O[1], N[0]), $(-N[1], O[0])), F[2]), D(P(D($(F[1], N[0]), $(-N[1], F[0])), -O[2]), P(D($(F[1], O[0]), $(-O[1], F[0])), N[2]))), -G[3]))))), Q = D(D(D(P(D(P(D($(G[1], V[0]), $(-V[1], G[0])), N[2]), D(P(D($(N[1], V[0]), $(-V[1], N[0])), -G[2]), P(D($(N[1], G[0]), $(-G[1], N[0])), V[2]))), F[3]), P(D(P(D($(G[1], V[0]), $(-V[1], G[0])), F[2]), D(P(D($(F[1], V[0]), $(-V[1], F[0])), -G[2]), P(D($(F[1], G[0]), $(-G[1], F[0])), V[2]))), -N[3])), D(P(D(P(D($(N[1], V[0]), $(-V[1], N[0])), F[2]), D(P(D($(F[1], V[0]), $(-V[1], F[0])), -N[2]), P(D($(F[1], N[0]), $(-N[1], F[0])), V[2]))), G[3]), P(D(P(D($(N[1], G[0]), $(-G[1], N[0])), F[2]), D(P(D($(F[1], G[0]), $(-G[1], F[0])), -N[2]), P(D($(F[1], N[0]), $(-N[1], F[0])), G[2]))), -V[3]))), D(D(P(D(P(D($(N[1], V[0]), $(-V[1], N[0])), O[2]), D(P(D($(O[1], V[0]), $(-V[1], O[0])), -N[2]), P(D($(O[1], N[0]), $(-N[1], O[0])), V[2]))), F[3]), P(D(P(D($(N[1], V[0]), $(-V[1], N[0])), F[2]), D(P(D($(F[1], V[0]), $(-V[1], F[0])), -N[2]), P(D($(F[1], N[0]), $(-N[1], F[0])), V[2]))), -O[3])), D(P(D(P(D($(O[1], V[0]), $(-V[1], O[0])), F[2]), D(P(D($(F[1], V[0]), $(-V[1], F[0])), -O[2]), P(D($(F[1], O[0]), $(-O[1], F[0])), V[2]))), N[3]), P(D(P(D($(O[1], N[0]), $(-N[1], O[0])), F[2]), D(P(D($(F[1], N[0]), $(-N[1], F[0])), -O[2]), P(D($(F[1], O[0]), $(-O[1], F[0])), N[2]))), -V[3])))), W = z(J, Q);\n        return W[W.length - 1];\n      };\n    }\n    function w(D) {\n      var $ = D === 3 ? l : D === 4 ? f : b;\n      return $(t, i, r, n);\n    }\n    var g = w(3), E = w(4), k = [\n      function() {\n        return 0;\n      },\n      function() {\n        return 0;\n      },\n      function($, P) {\n        return P[0] - $[0];\n      },\n      function($, P, z) {\n        var B = ($[1] - z[1]) * (P[0] - z[0]), F = ($[0] - z[0]) * (P[1] - z[1]), O = B - F, N;\n        if (B > 0) {\n          if (F <= 0)\n            return O;\n          N = B + F;\n        } else if (B < 0) {\n          if (F >= 0)\n            return O;\n          N = -(B + F);\n        } else\n          return O;\n        var G = o * N;\n        return O >= G || O <= -G ? O : g($, P, z);\n      },\n      function($, P, z, B) {\n        var F = $[0] - B[0], O = P[0] - B[0], N = z[0] - B[0], G = $[1] - B[1], V = P[1] - B[1], J = z[1] - B[1], Q = $[2] - B[2], W = P[2] - B[2], ne = z[2] - B[2], pe = O * J, be = N * V, ve = N * G, Ee = F * J, Ae = F * V, _e = O * G, Be = Q * (pe - be) + W * (ve - Ee) + ne * (Ae - _e), Me = (Math.abs(pe) + Math.abs(be)) * Math.abs(Q) + (Math.abs(ve) + Math.abs(Ee)) * Math.abs(W) + (Math.abs(Ae) + Math.abs(_e)) * Math.abs(ne), re = h * Me;\n        return Be > re || -Be > re ? Be : E($, P, z, B);\n      }\n    ];\n    function A(D) {\n      var $ = k[D.length];\n      return $ || ($ = k[D.length] = w(D.length)), $.apply(void 0, D);\n    }\n    function T(D, $, P, z, B, F, O) {\n      return function(G, V, J, Q, W) {\n        switch (arguments.length) {\n          case 0:\n          case 1:\n            return 0;\n          case 2:\n            return z(G, V);\n          case 3:\n            return B(G, V, J);\n          case 4:\n            return F(G, V, J, Q);\n          case 5:\n            return O(G, V, J, Q, W);\n        }\n        for (var ne = new Array(arguments.length), pe = 0; pe < arguments.length; ++pe)\n          ne[pe] = arguments[pe];\n        return D(ne);\n      };\n    }\n    function C() {\n      for (; k.length <= a; )\n        k.push(w(k.length));\n      e.exports = T.apply(void 0, [A].concat(k));\n      for (var D = 0; D <= a; ++D)\n        e.exports[D] = k[D];\n    }\n    C();\n  }(orientation)), orientation.exports;\n}\nvar robustPnp, hasRequiredRobustPnp;\nfunction requireRobustPnp() {\n  if (hasRequiredRobustPnp) return robustPnp;\n  hasRequiredRobustPnp = 1, robustPnp = i;\n  var e = requireOrientation();\n  function i(t, r) {\n    for (var n = r[0], a = r[1], s = t.length, o = 1, h = s, l = 0, f = s - 1; l < h; f = l++) {\n      var b = t[l], w = t[f], g = b[1], E = w[1];\n      if (E < g) {\n        if (E < a && a < g) {\n          var k = e(b, w, r);\n          if (k === 0)\n            return 0;\n          o ^= 0 < k | 0;\n        } else if (a === g) {\n          var A = t[(l + 1) % s], T = A[1];\n          if (g < T) {\n            var k = e(b, w, r);\n            if (k === 0)\n              return 0;\n            o ^= 0 < k | 0;\n          }\n        }\n      } else if (g < E) {\n        if (g < a && a < E) {\n          var k = e(b, w, r);\n          if (k === 0)\n            return 0;\n          o ^= k < 0 | 0;\n        } else if (a === g) {\n          var A = t[(l + 1) % s], T = A[1];\n          if (T < g) {\n            var k = e(b, w, r);\n            if (k === 0)\n              return 0;\n            o ^= k < 0 | 0;\n          }\n        }\n      } else if (a === g) {\n        var C = Math.min(b[0], w[0]), D = Math.max(b[0], w[0]);\n        if (l === 0) {\n          for (; f > 0; ) {\n            var $ = (f + s - 1) % s, P = t[$];\n            if (P[1] !== a)\n              break;\n            var z = P[0];\n            C = Math.min(C, z), D = Math.max(D, z), f = $;\n          }\n          if (f === 0)\n            return C <= n && n <= D ? 0 : 1;\n          h = f + 1;\n        }\n        for (var B = t[(f + s - 1) % s][1]; l + 1 < h; ) {\n          var P = t[l + 1];\n          if (P[1] !== a)\n            break;\n          var z = P[0];\n          C = Math.min(C, z), D = Math.max(D, z), l += 1;\n        }\n        if (C <= n && n <= D)\n          return 0;\n        var F = t[(l + 1) % s][1];\n        n < C && B < a != F < a && (o ^= 1);\n      }\n    }\n    return 2 * o - 1;\n  }\n  return robustPnp;\n}\nvar robustPnpExports = requireRobustPnp();\nconst robustPointInPolygon = /* @__PURE__ */ getDefaultExportFromCjs(robustPnpExports);\nfunction feretDiameters(e = {}) {\n  const { originalPoints: i = monotoneChainConvexHull.call(this) } = e;\n  if (i.length === 0)\n    return { min: 0, max: 0, minLine: [], maxLine: [], aspectRatio: 1 };\n  if (i.length === 1)\n    return {\n      min: 1,\n      max: 1,\n      minLine: [i[0], i[0]],\n      maxLine: [i[0], i[0]],\n      aspectRatio: 1\n    };\n  const t = new Array(i.length);\n  let r = 1 / 0, n = 0, a = [];\n  for (let l = 0; l < i.length; l++) {\n    let f = getAngle(\n      i[l],\n      i[(l + 1) % i.length]\n    );\n    rotate(-f, i, t);\n    let b = 0, w = [];\n    for (let g = 0; g < i.length; g++) {\n      let E = Math.abs(t[l][1] - t[g][1]);\n      E > b && (b = E, w = [], w.push(\n        [t[g][0], t[l][1]],\n        [t[g][0], t[g][1]]\n      ));\n    }\n    b < r && (r = b, n = f, a = w);\n  }\n  rotate(n, a, a);\n  let s = 0, o = [], h = 0;\n  for (let l = 0; l < i.length - 1; l++)\n    for (let f = l + 1; f < i.length; f++) {\n      let b = (i[l][0] - i[f][0]) ** 2 + (i[l][1] - i[f][1]) ** 2;\n      b > h && (h = b, s = Math.sqrt(b), o = [i[l], i[f]]);\n    }\n  return {\n    min: r,\n    minLine: a,\n    max: s,\n    maxLine: o,\n    aspectRatio: r / s\n  };\n}\nfunction getAngle(e, i) {\n  let t = difference(i, e), r = normalize(t), n = Math.acos(r[0]);\n  return r[1] < 0 ? -n : n;\n}\nclass Roi {\n  constructor(i, t) {\n    this.map = i, this.id = t, this.minX = Number.POSITIVE_INFINITY, this.maxX = Number.NEGATIVE_INFINITY, this.minY = Number.POSITIVE_INFINITY, this.maxY = Number.NEGATIVE_INFINITY, this.meanX = 0, this.meanY = 0, this.surface = 0, this.computed = {};\n  }\n  /**\n   * Returns a binary image (mask) for the corresponding ROI\n   * @param {object} [options]\n   * @param {number} [options.scale=1] - Scaling factor to apply to the mask\n   * @param {string} [options.kind='normal'] - 'contour', 'box', 'filled', 'center', 'hull' or 'normal'\n   * @return {Image} - Returns a mask (1 bit Image)\n   */\n  getMask(i = {}) {\n    const { scale: t = 1, kind: r = \"\" } = i;\n    let n;\n    switch (r) {\n      case \"contour\":\n        n = this.contourMask;\n        break;\n      case \"box\":\n        n = this.boxMask;\n        break;\n      case \"filled\":\n        n = this.filledMask;\n        break;\n      case \"center\":\n        n = this.centerMask;\n        break;\n      case \"mbr\":\n        n = this.mbrFilledMask;\n        break;\n      case \"hull\":\n        n = this.convexHullFilledMask;\n        break;\n      case \"hullContour\":\n        n = this.convexHullMask;\n        break;\n      case \"mbrContour\":\n        n = this.mbrMask;\n        break;\n      case \"feret\":\n        n = this.feretMask;\n        break;\n      default:\n        n = this.mask;\n    }\n    return t < 1 && (n = n.resize({ factor: t }), n.parent = this.mask.parent, n.position[0] += this.minX, n.position[1] += this.minY), n;\n  }\n  get mean() {\n    throw new Error(\"Roi mean not implemented yet\");\n  }\n  get center() {\n    return this.computed.center || (this.computed.center = [this.width / 2 >> 0, this.height / 2 >> 0]), this.computed.center;\n  }\n  get ratio() {\n    return this.width / this.height;\n  }\n  get width() {\n    return this.maxX - this.minX + 1;\n  }\n  get height() {\n    return this.maxY - this.minY + 1;\n  }\n  _computExternalIDs() {\n    let i = this.borderIDs, t = this.borderLengths;\n    this.computed.externalIDs = [], this.computed.externalLengths = [];\n    let r = this.internalIDs;\n    for (let n = 0; n < i.length; n++)\n      r.includes(i[n]) || (this.computed.externalIDs.push(i[n]), this.computed.externalLengths.push(t[n]));\n  }\n  get externalIDs() {\n    return this.computed.externalIDs ? this.computed.externalIDs : (this._computExternalIDs(), this.computed.externalIDs);\n  }\n  get externalLengths() {\n    return this.computed.externalLengths ? this.computed.externalLengths : (this._computExternalIDs(), this.computed.externalLengths);\n  }\n  _computeBorderIDs() {\n    let i = getBorders(this);\n    this.computed.borderIDs = i.ids, this.computed.borderLengths = i.lengths;\n  }\n  /**\n     Retrieve all the IDs (array of number) of the regions that are in contact with this\n     specific region. It may be external or internal\n     */\n  get borderIDs() {\n    return this.computed.borderIDs ? this.computed.borderIDs : (this._computeBorderIDs(), this.computed.borderIDs);\n  }\n  /**\n     Retrieve all the length (array of number) of the contacts with this\n     specific region. It may be external or internal\n     */\n  get borderLengths() {\n    return this.computed.borderLengths ? this.computed.borderLengths : (this._computeBorderIDs(), this.computed.borderLengths);\n  }\n  /**\n       Retrieve all the IDs or the Roi touching the box surrouding the region\n  \n       It should really be an array to solve complex cases related to border effect\n  \n       Like the image\n       <pre>\n       0000\n       1111\n       0000\n       1111\n       </pre>\n  \n       The first row of 1 will be surrouned by 2 differents zones\n  \n       Or even worse\n       <pre>\n       010\n       111\n       010\n       </pre>\n       The cross will be surrouned by 4 differents zones\n  \n       However in most of the cases it will be an array of one element\n       */\n  get boxIDs() {\n    return this.computed.boxIDs || (this.computed.boxIDs = getBoxIDs(this)), this.computed.boxIDs;\n  }\n  get internalIDs() {\n    return this.computed.internalIDs || (this.computed.internalIDs = getInternalIDs(this)), this.computed.internalIDs;\n  }\n  /**\n     Number of pixels of the Roi that touch the rectangle\n     This is useful for the calculation of the border\n     because we will ignore those special pixels of the rectangle\n     border that don't have neighbours all around them.\n     */\n  get box() {\n    return this.computed.box || (this.computed.box = getBox(this)), this.computed.box;\n  }\n  /**\n     Calculates the number of pixels that are in the external border of the Roi\n     Contour are all the pixels that touch an external \"zone\".\n     All the pixels that touch the box are part of the border and\n     are calculated in the getBoxPixels procedure\n     */\n  get external() {\n    return this.computed.external || (this.computed.external = getExternal(this)), this.computed.external;\n  }\n  /**\n     Calculates information about holes\n     */\n  get holesInfo() {\n    return this.computed.holesInfo || (this.computed.holesInfo = getHolesInfo(this)), this.computed.holesInfo;\n  }\n  /**\n     Calculates the number of pixels that are involved in border\n     Border are all the pixels that touch another \"zone\". It could be external\n     or internal. If there is a hole in the zone it will be counted as a border.\n     All the pixels that touch the box are part of the border and\n     are calculated in the getBoxPixels procedure\n     */\n  get border() {\n    return this.computed.border || (this.computed.border = getBorder(this)), this.computed.border;\n  }\n  /**\n    Returns a binary image (mask) containing only the border of the mask\n  */\n  get contourMask() {\n    if (!this.computed.contourMask) {\n      let i = new Image(this.width, this.height, {\n        kind: BINARY,\n        position: [this.minX, this.minY],\n        parent: this.map.parent\n      });\n      for (let t = 0; t < this.width; t++)\n        for (let r = 0; r < this.height; r++)\n          this.map.data[t + this.minX + (r + this.minY) * this.map.width] === this.id && (t > 0 && t < this.width - 1 && r > 0 && r < this.height - 1 ? (this.map.data[t - 1 + this.minX + (r + this.minY) * this.map.width] !== this.id || this.map.data[t + 1 + this.minX + (r + this.minY) * this.map.width] !== this.id || this.map.data[t + this.minX + (r - 1 + this.minY) * this.map.width] !== this.id || this.map.data[t + this.minX + (r + 1 + this.minY) * this.map.width] !== this.id) && i.setBitXY(t, r) : i.setBitXY(t, r));\n      this.computed.contourMask = i;\n    }\n    return this.computed.contourMask;\n  }\n  get boxMask() {\n    if (!this.computed.boxMask) {\n      let i = new Image(this.width, this.height, {\n        kind: BINARY,\n        position: [this.minX, this.minY],\n        parent: this.map.parent\n      });\n      for (let t = 0; t < this.width; t++)\n        i.setBitXY(t, 0), i.setBitXY(t, this.height - 1);\n      for (let t = 0; t < this.height; t++)\n        i.setBitXY(0, t), i.setBitXY(this.width - 1, t);\n      this.computed.boxMask = i;\n    }\n    return this.computed.boxMask;\n  }\n  /**\n     Returns a binary image containing the mask\n     */\n  get mask() {\n    if (!this.computed.mask) {\n      let i = new Image(this.width, this.height, {\n        kind: BINARY,\n        position: [this.minX, this.minY],\n        parent: this.map.parent\n      });\n      for (let t = 0; t < this.width; t++)\n        for (let r = 0; r < this.height; r++)\n          this.map.data[t + this.minX + (r + this.minY) * this.map.width] === this.id && i.setBitXY(t, r);\n      this.computed.mask = i;\n    }\n    return this.computed.mask;\n  }\n  get filledMask() {\n    if (!this.computed.filledMask) {\n      let i = new Image(this.width, this.height, {\n        kind: BINARY,\n        position: [this.minX, this.minY],\n        parent: this.map.parent\n      });\n      for (let t = 0; t < this.width; t++)\n        for (let r = 0; r < this.height; r++) {\n          let n = t + this.minX + (r + this.minY) * this.map.width;\n          this.internalIDs.includes(this.map.data[n]) && i.setBitXY(t, r);\n        }\n      this.computed.filledMask = i;\n    }\n    return this.computed.filledMask;\n  }\n  get centerMask() {\n    if (!this.computed.centerMask) {\n      let i = new Shape({ kind: \"smallCross\" }).getMask();\n      i.parent = this.map.parent, i.position = [\n        this.minX + this.center[0] - 1,\n        this.minY + this.center[1] - 1\n      ], this.computed.centerMask = i;\n    }\n    return this.computed.centerMask;\n  }\n  get convexHull() {\n    if (!this.computed.convexHull) {\n      const i = [];\n      for (let r = 0; r < this.width; r++)\n        for (let n = 0; n < this.height; n++)\n          this.map.data[r + this.minX + (n + this.minY) * this.map.width] === this.id && (r > 0 && r < this.width - 1 && n > 0 && n < this.height - 1 ? (this.map.data[r - 1 + this.minX + (n + this.minY) * this.map.width] !== this.id || this.map.data[r + 1 + this.minX + (n + this.minY) * this.map.width] !== this.id || this.map.data[r + this.minX + (n - 1 + this.minY) * this.map.width] !== this.id || this.map.data[r + this.minX + (n + 1 + this.minY) * this.map.width] !== this.id) && (i.push([r, n]), i.push([r + 1, n]), i.push([r, n + 1]), i.push([r + 1, n + 1])) : (i.push([r, n]), i.push([r + 1, n]), i.push([r, n + 1]), i.push([r + 1, n + 1])));\n      const t = monotoneChainConvexHull$1(i);\n      this.computed.convexHull = {\n        polyline: t,\n        surface: surface(t),\n        perimeter: perimeter(t)\n      };\n    }\n    return this.computed.convexHull;\n  }\n  get convexHullMask() {\n    if (!this.computed.convexHullMask) {\n      const i = this.convexHull, t = new Image(this.width + 1, this.height + 1, {\n        kind: BINARY,\n        position: [this.minX, this.minY],\n        parent: this.map.parent\n      });\n      t.paintPolyline(i.polyline, { closed: !0 }), this.computed.convexHullMask = t;\n    }\n    return this.computed.convexHullMask;\n  }\n  get convexHullFilledMask() {\n    if (!this.computed.convexHullFilledMask) {\n      const i = this.convexHull, t = new Image(this.width, this.height, {\n        kind: BINARY,\n        position: [this.minX, this.minY],\n        parent: this.map.parent\n      });\n      for (let r = 0; r < this.width; r++)\n        for (let n = 0; n < this.height; n++)\n          robustPointInPolygon(i.polyline, [r, n]) !== 1 && t.setBitXY(r, n);\n      this.computed.convexHullFilledMask = t;\n    }\n    return this.computed.convexHullFilledMask;\n  }\n  get mbr() {\n    if (!this.computed.mbr) {\n      let i = minimalBoundingRectangle({\n        originalPoints: this.convexHull.polyline\n      });\n      if (i.length === 0)\n        this.computed.mbr = {\n          width: 0,\n          height: 0,\n          surface: 0,\n          perimeter: 0,\n          rectangle: i\n        };\n      else {\n        let t = i[0], r = i[1], n = i[2], a = Math.sqrt(\n          (t[0] - r[0]) ** 2 + (t[1] - r[1]) ** 2\n        ), s = Math.sqrt(\n          (n[0] - r[0]) ** 2 + (n[1] - r[1]) ** 2\n        );\n        this.computed.mbr = {\n          width: a,\n          height: s,\n          elongation: 1 - a / s,\n          aspectRatio: a / s,\n          surface: a * s,\n          perimeter: (a + s) * 2,\n          rectangle: i\n        };\n      }\n    }\n    return this.computed.mbr;\n  }\n  get filledSurface() {\n    return this.surface + this.holesInfo.surface;\n  }\n  get fillRatio() {\n    return this.surface / (this.surface + this.holesInfo.surface);\n  }\n  get feretDiameters() {\n    return this.computed.feretDiameters || (this.computed.feretDiameters = feretDiameters({\n      originalPoints: this.convexHull.polyline\n    })), this.computed.feretDiameters;\n  }\n  /**\n   * Diameter of a circle of equal projection area\n   */\n  get eqpc() {\n    return this.computed.eqpc || (this.computed.eqpc = 2 * Math.sqrt(this.surface / Math.PI)), this.computed.eqpc;\n  }\n  /**\n   * Get the category in which each external pixel belongs\n   */\n  get perimeterInfo() {\n    return this.computed.perimeterInfo || (this.computed.perimeterInfo = getPerimeterInfo(this)), this.computed.perimeterInfo;\n  }\n  /**\n   * Return the perimeter of the ROI\n   */\n  get perimeter() {\n    let i = this.perimeterInfo, t = 2 - Math.sqrt(2);\n    return i.one + i.two * 2 + i.three * 3 + i.four * 4 - t * (i.two + i.three * 2 + i.four);\n  }\n  /**\n   * Diameter of a circle of equal perimeter\n   */\n  get ped() {\n    return this.computed.ped || (this.computed.ped = this.perimeter / Math.PI), this.computed.ped;\n  }\n  get feretMask() {\n    if (!this.computed.feretMask) {\n      const i = new Image(this.width + 1, this.height + 1, {\n        kind: BINARY,\n        position: [this.minX, this.minY],\n        parent: this.map.parent\n      });\n      i.paintPolyline(this.feretDiameters.minLine), i.paintPolyline(this.feretDiameters.maxLine), this.computed.feretMask = i;\n    }\n    return this.computed.feretMask;\n  }\n  get mbrMask() {\n    if (!this.computed.mbrMask) {\n      let i = round(this.mbr.rectangle);\n      if (i.length > 0) {\n        const t = minMax(i), r = new Image(\n          t[1][0] - t[0][0] + 1,\n          t[1][1] - t[0][1] + 1,\n          {\n            kind: BINARY,\n            position: [this.minX + t[0][0], this.minY + t[0][1]],\n            parent: this.map.parent\n          }\n        );\n        i = moveToZeroZero(i), r.paintPolyline(i, { closed: !0 }), this.computed.mbrMask = r;\n      } else\n        this.computed.mbrMask = new Image(1, 1, {\n          kind: BINARY,\n          position: [this.minX, this.minY],\n          parent: this.map.parent\n        });\n    }\n    return this.computed.mbrMask;\n  }\n  get mbrFilledMask() {\n    if (!this.computed.mbrFilledMask) {\n      const i = new Image(this.width, this.height, {\n        kind: BINARY,\n        position: [this.minX, this.minY],\n        parent: this.map.parent\n      }), t = this.mask.minimalBoundingRectangle();\n      for (let r = 0; r < this.width; r++)\n        for (let n = 0; n < this.height; n++)\n          robustPointInPolygon(t, [r, n]) !== 1 && i.setBitXY(r, n);\n      this.computed.mbrFilledMask = i;\n    }\n    return this.computed.mbrFilledMask;\n  }\n  get points() {\n    if (!this.computed.points) {\n      let i = [];\n      for (let t = 0; t < this.height; t++)\n        for (let r = 0; r < this.width; r++) {\n          let n = (t + this.minY) * this.map.width + r + this.minX;\n          this.map.data[n] === this.id && i.push([r, t]);\n        }\n      this.computed.points = i;\n    }\n    return this.computed.points;\n  }\n  get maxLengthPoints() {\n    if (!this.computed.maxLengthPoints) {\n      let i = 0, t;\n      const r = this.points;\n      for (let n = 0; n < r.length; n++)\n        for (let a = n + 1; a < r.length; a++) {\n          let s = Math.pow(r[n][0] - r[a][0], 2) + Math.pow(r[n][1] - r[a][1], 2);\n          s >= i && (i = s, t = [r[n], r[a]]);\n        }\n      this.computed.maxLengthPoints = t;\n    }\n    return this.computed.maxLengthPoints;\n  }\n  /**\n        Calculates the maximum length between two pixels of the Roi.\n     */\n  get maxLength() {\n    if (!this.computed.maxLength) {\n      let i = Math.sqrt(\n        Math.pow(this.maxLengthPoints[0][0] - this.maxLengthPoints[1][0], 2) + Math.pow(this.maxLengthPoints[0][1] - this.maxLengthPoints[1][1], 2)\n      );\n      this.computed.maxLength = i;\n    }\n    return this.computed.maxLength;\n  }\n  get roundness() {\n    return 4 * this.surface / (Math.PI * this.feretDiameters.max ** 2);\n  }\n  get sphericity() {\n    return 2 * Math.sqrt(this.surface * Math.PI) / this.perimeter;\n  }\n  get solidity() {\n    return this.surface / this.convexHull.surface;\n  }\n  get angle() {\n    if (!this.computed.angle) {\n      let i = this.maxLengthPoints, t = -Math.atan2(i[0][1] - i[1][1], i[0][0] - i[1][0]) * 180 / Math.PI;\n      this.computed.angle = t;\n    }\n    return this.computed.angle;\n  }\n  toJSON() {\n    return {\n      id: this.id,\n      minX: this.minX,\n      maxX: this.maxX,\n      minY: this.minY,\n      maxY: this.maxY,\n      meanX: this.meanX,\n      meanY: this.meanY,\n      height: this.height,\n      width: this.width,\n      filledSurface: this.filledSurface,\n      surface: this.surface,\n      hullSurface: this.convexHull.surface,\n      hullPerimeter: this.convexHull.perimeter,\n      mbrWidth: this.mbr.width,\n      mbrHeight: this.mbr.height,\n      mbrSurface: this.mbr.surface,\n      eqpc: this.eqpc,\n      ped: this.ped,\n      feretDiameterMin: this.feretDiameters.min,\n      feretDiameterMax: this.feretDiameters.max,\n      aspectRatio: this.feretDiameters.aspectRatio,\n      fillRatio: this.fillRatio,\n      sphericity: this.sphericity,\n      roundness: this.roundness,\n      solidity: this.solidity,\n      perimeter: this.perimeter\n    };\n  }\n}\nfunction getBorders(e) {\n  let i = e.map, t = i.data, r = /* @__PURE__ */ new Set(), n = /* @__PURE__ */ new Map(), a = /* @__PURE__ */ new Set(), s = [1, 0, -1, 0], o = [0, 1, 0, -1];\n  for (let f = e.minX; f <= e.maxX; f++)\n    for (let b = e.minY; b <= e.maxY; b++) {\n      let w = f + b * i.width;\n      if (t[w] === e.id)\n        for (let g = 0; g < 4; g++) {\n          let E = f + s[g], k = b + o[g];\n          if (E >= 0 && k >= 0 && E < i.width && k < i.height) {\n            let A = E + k * i.width;\n            if (t[A] !== e.id && !a.has(A)) {\n              a.add(A), r.add(t[A]);\n              let T = n.get(t[A]);\n              T ? n.set(t[A], ++T) : n.set(t[A], 1);\n            }\n          }\n        }\n    }\n  let h = Array.from(r), l = h.map(function(f) {\n    return n.get(f);\n  });\n  return {\n    ids: h,\n    lengths: l\n  };\n}\nfunction getBoxIDs(e) {\n  let i = /* @__PURE__ */ new Set(), t = e.map, r = t.data;\n  for (let n of [0, e.height - 1])\n    for (let a = 0; a < e.width; a++) {\n      let s = (n + e.minY) * t.width + a + e.minX;\n      if (a - e.minX > 0 && r[s] === e.id && r[s - 1] !== e.id) {\n        let o = r[s - 1];\n        i.add(o);\n      }\n      if (t.width - a - e.minX > 1 && r[s] === e.id && r[s + 1] !== e.id) {\n        let o = r[s + 1];\n        i.add(o);\n      }\n    }\n  for (let n of [0, e.width - 1])\n    for (let a = 0; a < e.height; a++) {\n      let s = (a + e.minY) * t.width + n + e.minX;\n      if (a - e.minY > 0 && r[s] === e.id && r[s - t.width] !== e.id) {\n        let o = r[s - t.width];\n        i.add(o);\n      }\n      if (t.height - a - e.minY > 1 && r[s] === e.id && r[s + t.width] !== e.id) {\n        let o = r[s + t.width];\n        i.add(o);\n      }\n    }\n  return Array.from(i);\n}\nfunction getBox(e) {\n  let i = 0, t = e.map, r = t.data, n = [0];\n  e.height > 1 && (n[1] = e.height - 1);\n  for (let s of n)\n    for (let o = 1; o < e.width - 1; o++) {\n      let h = (s + e.minY) * t.width + o + e.minX;\n      r[h] === e.id && i++;\n    }\n  let a = [0];\n  e.width > 1 && (a[1] = e.width - 1);\n  for (let s of a)\n    for (let o = 0; o < e.height; o++) {\n      let h = (o + e.minY) * t.width + s + e.minX;\n      r[h] === e.id && i++;\n    }\n  return i;\n}\nfunction getBorder(e) {\n  let i = 0, t = e.map, r = t.data;\n  for (let n = 1; n < e.width - 1; n++)\n    for (let a = 1; a < e.height - 1; a++) {\n      let s = (a + e.minY) * t.width + n + e.minX;\n      r[s] === e.id && (r[s - 1] !== e.id || r[s + 1] !== e.id || r[s - t.width] !== e.id || r[s + t.width] !== e.id) && i++;\n    }\n  return i + e.box;\n}\nfunction getPerimeterInfo(e) {\n  let i = e.map, t = i.data, r = 0, n = 0, a = 0, s = 0;\n  for (let o = 0; o < e.width; o++)\n    for (let h = 0; h < e.height; h++) {\n      let l = (h + e.minY) * i.width + o + e.minX;\n      if (t[l] === e.id) {\n        let f = 0;\n        switch ((o === 0 || e.externalIDs.includes(t[l - 1])) && f++, (o === e.width - 1 || e.externalIDs.includes(t[l + 1])) && f++, (h === 0 || e.externalIDs.includes(t[l - i.width])) && f++, (h === e.height - 1 || e.externalIDs.includes(t[l + i.width])) && f++, f) {\n          case 1:\n            r++;\n            break;\n          case 2:\n            n++;\n            break;\n          case 3:\n            a++;\n            break;\n          case 4:\n            s++;\n            break;\n        }\n      }\n    }\n  return { one: r, two: n, three: a, four: s };\n}\nfunction getExternal(e) {\n  let i = 0, t = e.map, r = t.data;\n  for (let n = 1; n < e.width - 1; n++)\n    for (let a = 1; a < e.height - 1; a++) {\n      let s = (a + e.minY) * t.width + n + e.minX;\n      r[s] === e.id && (e.externalIDs.includes(r[s - 1]) || e.externalIDs.includes(r[s + 1]) || e.externalIDs.includes(r[s - t.width]) || e.externalIDs.includes(r[s + t.width])) && i++;\n    }\n  return i + e.box;\n}\nfunction getHolesInfo(e) {\n  let i = 0, t = e.map.width, r = e.map.data;\n  for (let n = 1; n < e.width - 1; n++)\n    for (let a = 1; a < e.height - 1; a++) {\n      let s = (a + e.minY) * t + n + e.minX;\n      e.internalIDs.includes(r[s]) && r[s] !== e.id && i++;\n    }\n  return {\n    number: e.internalIDs.length - 1,\n    surface: i\n  };\n}\nfunction getInternalIDs(e) {\n  let i = [e.id], t = e.map, r = t.data;\n  if (e.height > 2)\n    for (let a = 0; a < e.width; a++) {\n      let s = e.minY * t.width + a + e.minX;\n      if (i.includes(r[s])) {\n        let o = r[s + t.width];\n        !i.includes(o) && !e.boxIDs.includes(o) && i.push(o);\n      }\n    }\n  let n = new Array(4);\n  for (let a = 1; a < e.width - 1; a++)\n    for (let s = 1; s < e.height - 1; s++) {\n      let o = (s + e.minY) * t.width + a + e.minX;\n      if (i.includes(r[o])) {\n        n[0] = r[o - 1], n[1] = r[o + 1], n[2] = r[o - t.width], n[3] = r[o + t.width];\n        for (let h = 0; h < 4; h++) {\n          let l = n[h];\n          !i.includes(l) && !e.boxIDs.includes(l) && i.push(l);\n        }\n      }\n    }\n  return i;\n}\nclass RoiLayer {\n  constructor(i, t) {\n    this.roiMap = i, this.options = t, this.roi = this.createRoi();\n  }\n  /**\n   * Roi are created from a roiMap\n   * The roiMap contains mainty an array of identifiers that define\n   * for each data to which Roi it belongs\n   * @memberof RoiManager\n   * @instance\n   * @return {Roi[]}\n   */\n  createRoi() {\n    let i = this.roiMap.data, t = {};\n    this.roiMap.positive = 0, this.roiMap.negative = 0;\n    for (let o = 0; o < i.length; o++)\n      i[o] && !t[i[o]] && (t[i[o]] = !0, i[o] > 0 ? this.roiMap.positive++ : this.roiMap.negative++);\n    let r = {};\n    for (let o in t)\n      r[o] = new Roi(this.roiMap, o * 1);\n    let n = this.roiMap.width, a = this.roiMap.height;\n    for (let o = 0; o < a; o++)\n      for (let h = 0; h < n; h++) {\n        let l = o * n + h;\n        if (i[l] !== 0) {\n          const f = i[l], b = r[f];\n          h < b.minX && (b.minX = h), h > b.maxX && (b.maxX = h), o < b.minY && (b.minY = o), o > b.maxY && (b.maxY = o), b.meanX += h, b.meanY += o, b.surface++;\n        }\n      }\n    let s = [];\n    for (let o in t)\n      r[o].meanX /= r[o].surface, r[o].meanY /= r[o].surface, s.push(r[o]);\n    return s;\n  }\n}\nfunction commonBorderLength(e) {\n  let i = e.data, t = [1, 0, -1, 0], r = [0, 1, 0, -1], n = e.minMax, a = -n.min, s = n.max + a, o = [];\n  for (let l = 0; l <= s; l++)\n    o.push(/* @__PURE__ */ Object.create(null));\n  for (let l = 0; l < e.width; l++)\n    for (let f = 0; f < e.height; f++) {\n      let b = l + f * e.width, w = i[b];\n      if (w !== 0) {\n        let g = /* @__PURE__ */ Object.create(null), E = !1;\n        for (let k = 0; k < 4; k++) {\n          let A = l + t[k], T = f + r[k];\n          if (A >= 0 && T >= 0 && A < e.width && T < e.height) {\n            let C = i[A + T * e.width];\n            w !== C && (E = !0, C !== 0 && g[C] === void 0 && (g[C] = !0, o[C + a][w] ? o[C + a][w]++ : o[C + a][w] = 1));\n          } else\n            E = !0;\n        }\n        E && (o[w + a][w] ? o[w + a][w]++ : o[w + a][w] = 1);\n      }\n    }\n  let h = {};\n  for (let l = 0; l < o.length; l++)\n    Object.keys(o[l]).length > 0 && (h[l - a] = o[l]);\n  return h;\n}\nfunction mergeRoi(e = {}) {\n  const {\n    algorithm: i = \"commonBorderLength\",\n    minCommonBorderLength: t = 5,\n    maxCommonBorderLength: r = 100,\n    minCommonBorderRatio: n = 0.3,\n    maxCommonBorderRatio: a = 1\n  } = e;\n  let s = function(A, T, C) {\n    return A[C] >= t && A[C] <= r;\n  };\n  typeof i == \"function\" && (s = i), i.toLowerCase() === \"commonborderratio\" && (s = function(A, T, C) {\n    let D = Math.min(\n      A[C] / A[T],\n      1\n    );\n    return D >= n && D <= a;\n  });\n  const o = this, h = o.commonBorderLength;\n  let l = {}, f = {};\n  for (let A of Object.keys(h)) {\n    let T = h[A], C = Object.keys(T);\n    for (let D of C)\n      if (D !== A && s(T, A, D)) {\n        let $ = D;\n        f[D] && ($ = f[D]);\n        let P = A;\n        if (f[A] && (P = f[A]), Number($) !== P) {\n          let z = Math.min($, P), B = Math.max($, P);\n          if (l[z] || (l[z] = {}), l[z][B] = !0, f[B] = z, l[B]) {\n            for (let F of Object.keys(l[B]))\n              l[z][F] = !0, f[F] = z;\n            delete l[B];\n          }\n        }\n      }\n  }\n  let b = o.minMax, w = -b.min, g = b.max + w, E = new Array(g + 1).fill(0);\n  for (let A of Object.keys(f))\n    E[Number(A) + w] = f[A];\n  let k = o.data;\n  for (let A = 0; A < k.length; A++) {\n    let T = k[A];\n    if (T !== 0) {\n      let C = E[T + w];\n      C !== 0 && (k[A] = C);\n    }\n  }\n  return o.computed = {}, o;\n}\nclass RoiMap {\n  constructor(i, t) {\n    this.parent = i, this.width = i.width, this.height = i.height, this.data = t, this.negative = 0, this.positive = 0;\n  }\n  get total() {\n    return this.negative + this.positive;\n  }\n  get minMax() {\n    let i = Number.MAX_SAFE_INTEGER, t = Number.MIN_SAFE_INTEGER;\n    for (let r = 0; r < this.data.length; r++)\n      this.data[r] < i && (i = this.data[r]), this.data[r] > t && (t = this.data[r]);\n    return { min: i, max: t };\n  }\n  get commonBorderLength() {\n    return commonBorderLength(this);\n  }\n  mergeRoi(i = {}) {\n    return mergeRoi.call(this, i);\n  }\n  mergeRois(i) {\n    const t = i[0], r = i.slice(1);\n    for (let n = 0; n < this.data.length; n++)\n      r.includes(this.data[n]) && (this.data[n] = t);\n  }\n  rowsInfo() {\n    let i = new Array(this.height), t = 0;\n    for (let r = 0; r < this.data.length; r += this.width) {\n      let n = {\n        row: t,\n        positivePixel: 0,\n        negativePixel: 0,\n        zeroPixel: 0,\n        positiveRoi: 0,\n        negativeRoi: 0,\n        medianChange: 0\n      };\n      i[t++] = n;\n      let a = {}, s = {}, o = [], h = this.data[r], l = 0;\n      for (let f = r; f < r + this.width; f++) {\n        let b = this.data[f];\n        h !== b && (h = b, o.push(l), l = 0), l++, b > 0 ? (n.positivePixel++, a[b] || (a[b] = !0)) : b < 0 ? (n.negativePixel++, s[b] || (s[b] = !0)) : n.zeroPixel++;\n      }\n      o.push(l), n.medianChange = o.sort((f, b) => f - b)[Math.floor(o.length / 2)], n.positiveRoiIDs = Object.keys(a), n.negativeRoiIDs = Object.keys(s), n.positiveRoi = n.positiveRoiIDs.length, n.negativeRoi = n.negativeRoiIDs.length;\n    }\n    return i;\n  }\n  colsInfo() {\n    let i = new Array(this.width), t = 0;\n    for (let r = 0; r < this.width; r++) {\n      let n = {\n        col: t,\n        positivePixel: 0,\n        negativePixel: 0,\n        zeroPixel: 0,\n        positiveRoi: 0,\n        negativeRoi: 0,\n        medianChange: 0\n      };\n      i[t++] = n;\n      let a = {}, s = {}, o = [], h = this.data[r], l = 0;\n      for (let f = r; f < r + this.data.length; f += this.width) {\n        let b = this.data[f];\n        h !== b && (h = b, o.push(l), l = 0), l++, b > 0 ? (n.positivePixel++, a[b] || (a[b] = !0)) : b < 0 ? (n.negativePixel++, s[b] || (s[b] = !0)) : n.zeroPixel++;\n      }\n      o.push(l), n.medianChange = o.sort((f, b) => f - b)[Math.floor(o.length / 2)], n.positiveRoiIDs = Object.keys(a), n.negativeRoiIDs = Object.keys(s), n.positiveRoi = n.positiveRoiIDs.length, n.negativeRoi = n.negativeRoiIDs.length;\n    }\n    return i;\n  }\n}\nfunction fromMask(e, i = {}) {\n  const { allowCorners: t = !1 } = i, r = 65535;\n  let n = new Int16Array(e.size), a = 0, s = 0, o = new Uint16Array(r + 1), h = new Uint16Array(r + 1);\n  for (let f = 0; f < e.width; f++)\n    for (let b = 0; b < e.height; b++)\n      n[b * e.width + f] === 0 && l(f, b);\n  function l(f, b) {\n    let w = 0, g = 0, E = e.getBitXY(f, b), k = E ? ++a : --s;\n    if (a > 32767 || s < -32768)\n      throw new Error(\"Too many regions of interest\");\n    for (o[0] = f, h[0] = b; w <= g; ) {\n      let A = o[w & r], T = h[w & r];\n      if (n[T * e.width + A] = k, A > 0 && n[T * e.width + A - 1] === 0 && e.getBitXY(A - 1, T) === E && (g++, o[g & r] = A - 1, h[g & r] = T, n[T * e.width + A - 1] = -32768), T > 0 && n[(T - 1) * e.width + A] === 0 && e.getBitXY(A, T - 1) === E && (g++, o[g & r] = A, h[g & r] = T - 1, n[(T - 1) * e.width + A] = -32768), A < e.width - 1 && n[T * e.width + A + 1] === 0 && e.getBitXY(A + 1, T) === E && (g++, o[g & r] = A + 1, h[g & r] = T, n[T * e.width + A + 1] = -32768), T < e.height - 1 && n[(T + 1) * e.width + A] === 0 && e.getBitXY(A, T + 1) === E && (g++, o[g & r] = A, h[g & r] = T + 1, n[(T + 1) * e.width + A] = -32768), t && (A > 0 && T > 0 && n[(T - 1) * e.width + A - 1] === 0 && e.getBitXY(A - 1, T - 1) === E && (g++, o[g & r] = A - 1, h[g & r] = T - 1, n[(T - 1) * e.width + A - 1] = -32768), A < e.width - 1 && T > 0 && n[(T - 1) * e.width + A + 1] === 0 && e.getBitXY(A + 1, T - 1) === E && (g++, o[g & r] = A + 1, h[g & r] = T - 1, n[(T - 1) * e.width + A + 1] = -32768), A > 0 && T < e.height - 1 && n[(T + 1) * e.width + A - 1] === 0 && e.getBitXY(A - 1, T + 1) === E && (g++, o[g & r] = A - 1, h[g & r] = T + 1, n[(T + 1) * e.width + A - 1] = -32768), A < e.width - 1 && T < e.height - 1 && n[(T + 1) * e.width + A + 1] === 0 && e.getBitXY(A + 1, T + 1) === E && (g++, o[g & r] = A + 1, h[g & r] = T + 1, n[(T + 1) * e.width + A + 1] = -32768)), w++, g - w > r)\n        throw new Error(\n          \"analyseMask can not finish, the array to manage internal data is not big enough.You could improve mask by changing MAX_ARRAY\"\n        );\n    }\n  }\n  return new RoiMap(e, n);\n}\nvar DisjointSet_1, hasRequiredDisjointSet;\nfunction requireDisjointSet() {\n  if (hasRequiredDisjointSet) return DisjointSet_1;\n  hasRequiredDisjointSet = 1;\n  class e {\n    constructor() {\n      this.nodes = /* @__PURE__ */ new Map();\n    }\n    /**\n     * Adds an element as a new set\n     * @param {*} value\n     * @return {DisjointSetNode} Object holding the element\n     */\n    add(r) {\n      var n = this.nodes.get(r);\n      return n || (n = new i(r), this.nodes.set(r, n)), n;\n    }\n    /**\n     * Merges the sets that contain x and y\n     * @param {DisjointSetNode} x\n     * @param {DisjointSetNode} y\n     */\n    union(r, n) {\n      const a = this.find(r), s = this.find(n);\n      a !== s && (a.rank < s.rank ? a.parent = s : a.rank > s.rank ? s.parent = a : (s.parent = a, a.rank++));\n    }\n    /**\n     * Finds and returns the root node of the set that contains node\n     * @param {DisjointSetNode} node\n     * @return {DisjointSetNode}\n     */\n    find(r) {\n      for (var n = r; n.parent !== null; )\n        n = n.parent;\n      for (var a = r; a.parent !== null; ) {\n        var s = a;\n        a = a.parent, s.parent = n;\n      }\n      return n;\n    }\n    /**\n     * Returns true if x and y belong to the same set\n     * @param {DisjointSetNode} x\n     * @param {DisjointSetNode} y\n     */\n    connected(r, n) {\n      return this.find(r) === this.find(n);\n    }\n  }\n  DisjointSet_1 = e;\n  function i(t) {\n    this.value = t, this.parent = null, this.rank = 0;\n  }\n  return DisjointSet_1;\n}\nvar DisjointSetExports = requireDisjointSet();\nconst DisjointSet = /* @__PURE__ */ getDefaultExportFromCjs(DisjointSetExports), direction4X = [-1, 0], direction4Y = [0, -1], neighbours4 = [null, null], direction8X = [-1, -1, 0, 1], direction8Y = [0, -1, -1, -1], neighbours8 = [null, null, null, null];\nfunction fromMaskConnectedComponentLabelingAlgorithm(e, i = {}) {\n  const { allowCorners: t = !1 } = i;\n  let r = 4;\n  t && (r = 8);\n  let n, a, s;\n  if (r === 8)\n    n = direction8X, a = direction8Y, s = neighbours8;\n  else if (r === 4)\n    n = direction4X, a = direction4Y, s = neighbours4;\n  else\n    throw new RangeError(`unsupported neighbours count: ${r}`);\n  const o = e.size, h = e.width, l = e.height, f = new Array(o), b = new Uint32Array(o), w = new DisjointSet();\n  let g = 1;\n  for (let E = 0; E < l; E++)\n    for (let k = 0; k < h; k++) {\n      const A = k + E * h;\n      if (e.getBit(A)) {\n        let T = null;\n        for (let C = 0; C < s.length; C++) {\n          const D = k + n[C], $ = E + a[C];\n          if (D >= 0 && $ >= 0 && D < h && $ < l) {\n            const P = D + $ * h;\n            let z = f[P];\n            z ? (s[C] = z, (!T || s[C].value < T.value) && (T = s[C])) : s[C] = null;\n          }\n        }\n        if (!T)\n          f[A] = w.add(g++);\n        else {\n          f[A] = T;\n          for (let C = 0; C < s.length; C++)\n            s[C] && s[C] !== T && w.union(T, s[C]);\n        }\n      }\n    }\n  for (let E = 0; E < l; E++)\n    for (let k = 0; k < h; k++) {\n      const A = k + E * h;\n      e.getBit(A) && (b[A] = w.find(f[A]).value);\n    }\n  return new RoiMap(e, b);\n}\nfunction fromMaxima(e = {}) {\n  let { allowCorner: i = !0, onlyTop: t = !1, invert: r = !1 } = e, n = this;\n  n.checkProcessable(\"fromMaxima\", { components: [1] });\n  const a = 1, s = 2;\n  let o = 0, h = 0, l = new Int16Array(n.size), f = new Int8Array(n.size), b = new Float32Array(n.size), w = 1048575, g = new Uint16Array(w + 1), E = new Uint16Array(w + 1), k = 0, A = 0, T = new Uint16Array(w + 1), C = new Uint16Array(w + 1), D = 0, $ = 0;\n  for (P(n); k < A; ) {\n    let F = g[k & w], O = E[k & w];\n    B(F, O, s), k++;\n  }\n  return new RoiMap(n, l);\n  function P({ maxima: F = !0 }) {\n    for (let O = 1; O < n.height - 1; O++)\n      for (let N = 1; N < n.width - 1; N++) {\n        let G = N + O * n.width;\n        if (f[G] === 0) {\n          let V = F ? n.data[G] : -n.data[N + O * n.width];\n          if (n.data[O * n.width + N - 1] > V || n.data[O * n.width + N + 1] > V || n.data[(O - 1) * n.width + N] > V || n.data[(O + 1) * n.width + N] > V || i && (n.data[(O - 1) * n.width + N - 1] > V || n.data[(O - 1) * n.width + N + 1] > V || n.data[(O + 1) * n.width + N - 1] > V || n.data[(O + 1) * n.width + N + 1] > V))\n            continue;\n          l[G] = F ? ++o : --h, z(N, O) || (F ? --o : ++h);\n        }\n      }\n  }\n  function z(F, O) {\n    let N = A;\n    D = 0, $ = 1, T[0] = F, C[0] = O;\n    let G = !0;\n    for (; D < $; ) {\n      let V = T[D & w], J = C[D & w];\n      G &= B(V, J, a), D++;\n    }\n    if (!G) {\n      for (let V = 0; V < $; V++) {\n        let J = T[V & w], W = C[V & w] * n.width + J;\n        l[W] = 0;\n      }\n      A = N;\n    }\n    return G;\n  }\n  function B(F, O, N) {\n    let G = l[O * n.width + F], V = n.data[O * n.width + F];\n    for (let J = O - 1; J <= O + 1; J++)\n      for (let Q = F - 1; Q <= F + 1; Q++) {\n        let W = J * n.width + Q;\n        if (f[W] === 0)\n          switch (f[W] = 1, b[W] = n.data[W] - V, N) {\n            case a:\n              if (b[W] === 0) {\n                if (Q === 0 || J === 0 || Q === n.width - 1 || J === n.height - 1)\n                  return !1;\n                l[W] = G, T[$ & w] = Q, C[$ & w] = J, $++;\n              } else {\n                if (b[W] > 0)\n                  return !1;\n                t || (l[W] = G, g[A & w] = Q, E[A & w] = J, A++);\n              }\n              break;\n            case s:\n              b[W] <= 0 && (l[W] = G, g[A & w] = Q, E[A & w] = J, A++);\n              break;\n            default:\n              throw new Error(\"unreachable\");\n          }\n      }\n    return !0;\n  }\n}\nfunction fromPoints(e, i = {}) {\n  let t = new Shape(i), r = new Int16Array(this.size), n = 0, a = t.getPoints();\n  for (let s = 0; s < e.length; s++) {\n    n++;\n    let o = e[s][0], h = e[s][1];\n    for (let l = 0; l < a.length; l++) {\n      let f = a[l][0], b = a[l][1];\n      o + f >= 0 && h + b >= 0 && o + f < this.width && h + b < this.height && (r[o + f + (h + b) * this.width] = n);\n    }\n  }\n  return new RoiMap(this, r);\n}\nfunction commonjsRequire(e) {\n  throw new Error('Could not dynamically require \"' + e + '\". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');\n}\nvar priorityQueue = { exports: {} }, hasRequiredPriorityQueue;\nfunction requirePriorityQueue() {\n  return hasRequiredPriorityQueue || (hasRequiredPriorityQueue = 1, function(e, i) {\n    (function(t) {\n      e.exports = t();\n    })(function() {\n      return function t(r, n, a) {\n        function s(l, f) {\n          if (!n[l]) {\n            if (!r[l]) {\n              var b = typeof commonjsRequire == \"function\" && commonjsRequire;\n              if (!f && b) return b(l, !0);\n              if (o) return o(l, !0);\n              var w = new Error(\"Cannot find module '\" + l + \"'\");\n              throw w.code = \"MODULE_NOT_FOUND\", w;\n            }\n            var g = n[l] = { exports: {} };\n            r[l][0].call(g.exports, function(E) {\n              var k = r[l][1][E];\n              return s(k || E);\n            }, g, g.exports, t, r, n, a);\n          }\n          return n[l].exports;\n        }\n        for (var o = typeof commonjsRequire == \"function\" && commonjsRequire, h = 0; h < a.length; h++) s(a[h]);\n        return s;\n      }({ 1: [function(t, r, n) {\n        var a, s, o, h, l, f = function(w, g) {\n          for (var E in g)\n            b.call(g, E) && (w[E] = g[E]);\n          function k() {\n            this.constructor = w;\n          }\n          return k.prototype = g.prototype, w.prototype = new k(), w.__super__ = g.prototype, w;\n        }, b = {}.hasOwnProperty;\n        a = t(\"./PriorityQueue/AbstractPriorityQueue\"), s = t(\"./PriorityQueue/ArrayStrategy\"), h = t(\"./PriorityQueue/BinaryHeapStrategy\"), o = t(\"./PriorityQueue/BHeapStrategy\"), l = function(w) {\n          f(g, w);\n          function g(E) {\n            E || (E = {}), E.strategy || (E.strategy = h), E.comparator || (E.comparator = function(k, A) {\n              return (k || 0) - (A || 0);\n            }), g.__super__.constructor.call(this, E);\n          }\n          return g;\n        }(a), l.ArrayStrategy = s, l.BinaryHeapStrategy = h, l.BHeapStrategy = o, r.exports = l;\n      }, { \"./PriorityQueue/AbstractPriorityQueue\": 2, \"./PriorityQueue/ArrayStrategy\": 3, \"./PriorityQueue/BHeapStrategy\": 4, \"./PriorityQueue/BinaryHeapStrategy\": 5 }], 2: [function(t, r, n) {\n        r.exports = function() {\n          function a(s) {\n            var o;\n            if ((s != null ? s.strategy : void 0) == null)\n              throw \"Must pass options.strategy, a strategy\";\n            if ((s != null ? s.comparator : void 0) == null)\n              throw \"Must pass options.comparator, a comparator\";\n            this.priv = new s.strategy(s), this.length = (s != null && (o = s.initialValues) != null ? o.length : void 0) || 0;\n          }\n          return a.prototype.queue = function(s) {\n            this.length++, this.priv.queue(s);\n          }, a.prototype.dequeue = function(s) {\n            if (!this.length)\n              throw \"Empty queue\";\n            return this.length--, this.priv.dequeue();\n          }, a.prototype.peek = function(s) {\n            if (!this.length)\n              throw \"Empty queue\";\n            return this.priv.peek();\n          }, a.prototype.clear = function() {\n            return this.length = 0, this.priv.clear();\n          }, a;\n        }();\n      }, {}], 3: [function(t, r, n) {\n        var a;\n        a = function(s, o, h) {\n          var l, f, b;\n          for (f = 0, l = s.length; f < l; )\n            b = f + l >>> 1, h(s[b], o) >= 0 ? f = b + 1 : l = b;\n          return f;\n        }, r.exports = function() {\n          function s(o) {\n            var h;\n            this.options = o, this.comparator = this.options.comparator, this.data = ((h = this.options.initialValues) != null ? h.slice(0) : void 0) || [], this.data.sort(this.comparator).reverse();\n          }\n          return s.prototype.queue = function(o) {\n            var h;\n            h = a(this.data, o, this.comparator), this.data.splice(h, 0, o);\n          }, s.prototype.dequeue = function() {\n            return this.data.pop();\n          }, s.prototype.peek = function() {\n            return this.data[this.data.length - 1];\n          }, s.prototype.clear = function() {\n            this.data.length = 0;\n          }, s;\n        }();\n      }, {}], 4: [function(t, r, n) {\n        r.exports = function() {\n          function a(s) {\n            var o, h, l, f, b, w, g, E;\n            for (this.comparator = (s != null ? s.comparator : void 0) || function(k, A) {\n              return k - A;\n            }, this.pageSize = (s != null ? s.pageSize : void 0) || 512, this.length = 0, g = 0; 1 << g < this.pageSize; )\n              g += 1;\n            if (1 << g !== this.pageSize)\n              throw \"pageSize must be a power of two\";\n            for (this._shift = g, this._emptyMemoryPageTemplate = o = [], h = 0, b = this.pageSize; 0 <= b ? h < b : h > b; 0 <= b ? ++h : --h)\n              o.push(null);\n            if (this._memory = [], this._mask = this.pageSize - 1, s.initialValues)\n              for (w = s.initialValues, l = 0, f = w.length; l < f; l++)\n                E = w[l], this.queue(E);\n          }\n          return a.prototype.queue = function(s) {\n            this.length += 1, this._write(this.length, s), this._bubbleUp(this.length, s);\n          }, a.prototype.dequeue = function() {\n            var s, o;\n            return s = this._read(1), o = this._read(this.length), this.length -= 1, this.length > 0 && (this._write(1, o), this._bubbleDown(1, o)), s;\n          }, a.prototype.peek = function() {\n            return this._read(1);\n          }, a.prototype.clear = function() {\n            this.length = 0, this._memory.length = 0;\n          }, a.prototype._write = function(s, o) {\n            var h;\n            for (h = s >> this._shift; h >= this._memory.length; )\n              this._memory.push(this._emptyMemoryPageTemplate.slice(0));\n            return this._memory[h][s & this._mask] = o;\n          }, a.prototype._read = function(s) {\n            return this._memory[s >> this._shift][s & this._mask];\n          }, a.prototype._bubbleUp = function(s, o) {\n            var h, l, f, b;\n            for (h = this.comparator; s > 1 && (l = s & this._mask, s < this.pageSize || l > 3 ? f = s & ~this._mask | l >> 1 : l < 2 ? (f = s - this.pageSize >> this._shift, f += f & ~(this._mask >> 1), f |= this.pageSize >> 1) : f = s - 2, b = this._read(f), !(h(b, o) < 0)); )\n              this._write(f, o), this._write(s, b), s = f;\n          }, a.prototype._bubbleDown = function(s, o) {\n            var h, l, f, b, w;\n            for (w = this.comparator; s < this.length; )\n              if (s > this._mask && !(s & this._mask - 1) ? h = l = s + 2 : s & this.pageSize >> 1 ? (h = (s & ~this._mask) >> 1, h |= s & this._mask >> 1, h = h + 1 << this._shift, l = h + 1) : (h = s + (s & this._mask), l = h + 1), h !== l && l <= this.length)\n                if (f = this._read(h), b = this._read(l), w(f, o) < 0 && w(f, b) <= 0)\n                  this._write(h, o), this._write(s, f), s = h;\n                else if (w(b, o) < 0)\n                  this._write(l, o), this._write(s, b), s = l;\n                else\n                  break;\n              else if (h <= this.length)\n                if (f = this._read(h), w(f, o) < 0)\n                  this._write(h, o), this._write(s, f), s = h;\n                else\n                  break;\n              else\n                break;\n          }, a;\n        }();\n      }, {}], 5: [function(t, r, n) {\n        r.exports = function() {\n          function a(s) {\n            var o;\n            this.comparator = (s != null ? s.comparator : void 0) || function(h, l) {\n              return h - l;\n            }, this.length = 0, this.data = ((o = s.initialValues) != null ? o.slice(0) : void 0) || [], this._heapify();\n          }\n          return a.prototype._heapify = function() {\n            var s, o, h;\n            if (this.data.length > 0)\n              for (s = o = 1, h = this.data.length; 1 <= h ? o < h : o > h; s = 1 <= h ? ++o : --o)\n                this._bubbleUp(s);\n          }, a.prototype.queue = function(s) {\n            this.data.push(s), this._bubbleUp(this.data.length - 1);\n          }, a.prototype.dequeue = function() {\n            var s, o;\n            return o = this.data[0], s = this.data.pop(), this.data.length > 0 && (this.data[0] = s, this._bubbleDown(0)), o;\n          }, a.prototype.peek = function() {\n            return this.data[0];\n          }, a.prototype.clear = function() {\n            this.length = 0, this.data.length = 0;\n          }, a.prototype._bubbleUp = function(s) {\n            for (var o, h; s > 0 && (o = s - 1 >>> 1, this.comparator(this.data[s], this.data[o]) < 0); )\n              h = this.data[o], this.data[o] = this.data[s], this.data[s] = h, s = o;\n          }, a.prototype._bubbleDown = function(s) {\n            var o, h, l, f, b;\n            for (o = this.data.length - 1; h = (s << 1) + 1, f = h + 1, l = s, h <= o && this.comparator(this.data[h], this.data[l]) < 0 && (l = h), f <= o && this.comparator(this.data[f], this.data[l]) < 0 && (l = f), l !== s; )\n              b = this.data[l], this.data[l] = this.data[s], this.data[s] = b, s = l;\n          }, a;\n        }();\n      }, {}] }, {}, [1])(1);\n    });\n  }(priorityQueue)), priorityQueue.exports;\n}\nvar priorityQueueExports = requirePriorityQueue();\nconst PriorityQueue = /* @__PURE__ */ getDefaultExportFromCjs(priorityQueueExports), dxs = [1, 0, -1, 0, 1, 1, -1, -1], dys = [0, 1, 0, -1, 1, -1, 1, -1];\nfunction fromWaterShed(e = {}) {\n  let {\n    points: i,\n    mask: t,\n    image: r,\n    fillMaxValue: n = this.maxValue,\n    invert: a = !1\n  } = e, s = r || this;\n  s.checkProcessable(\"fromWaterShed\", {\n    bitDepth: [8, 16],\n    components: 1\n  }), a = !a, i || (i = s.getLocalMaxima({\n    invert: a,\n    mask: t\n  }));\n  let o = a ? 0 : 1, h = new Int16Array(s.size), l = s.width, f = s.height, b = new PriorityQueue({\n    comparator: (w, g) => w[2] - g[2],\n    strategy: PriorityQueue.BinaryHeapStrategy\n  });\n  for (let w = 0; w < i.length; w++) {\n    let g = i[w][0] + i[w][1] * l;\n    h[g] = w + 1;\n    let E = s.data[g];\n    (a && E <= n || !a && E >= n) && b.queue([i[w][0], i[w][1], E]);\n  }\n  for (; b.length > 0; ) {\n    let w = b.dequeue(), g = w[0] + w[1] * l;\n    for (let E = 0; E < 4; E++) {\n      let k = w[0] + dxs[E], A = w[1] + dys[E];\n      if (k >= 0 && A >= 0 && k < l && A < f) {\n        let T = k + A * l;\n        if (!t || t.getBit(T) === o) {\n          let C = s.data[T];\n          (a && C <= n || !a && C >= n) && h[T] === 0 && (h[T] = h[g], b.queue([\n            w[0] + dxs[E],\n            w[1] + dys[E],\n            C\n          ]));\n        }\n      }\n    }\n  }\n  return new RoiMap(s, h);\n}\nclass RoiManager {\n  constructor(i, t = {}) {\n    this._image = i, this._options = t, this._options.label || (this._options.label = \"default\"), this._layers = {}, this._painted = null;\n  }\n  // docs is in the corresponding file\n  fromMaxima(i = {}) {\n    let t = Object.assign({}, this._options, i), r = fromMaxima.call(this._image, i);\n    this._layers[t.label] = new RoiLayer(r, t);\n  }\n  // docs is in the corresponding file\n  fromPoints(i, t = {}) {\n    let r = Object.assign({}, this._options, t), n = fromPoints.call(this._image, i, t);\n    return this._layers[r.label] = new RoiLayer(n, r), this;\n  }\n  /**\n   * @param {number[]} map\n   * @param {object} [options]\n   * @return {this}\n   */\n  putMap(i, t = {}) {\n    let r = new RoiMap(this._image, i), n = Object.assign({}, this._options, t);\n    return this._layers[n.label] = new RoiLayer(r, n), this;\n  }\n  // docs is in the corresponding file\n  fromWaterShed(i = {}) {\n    let t = Object.assign({}, this._options, i), r = fromWaterShed.call(this._image, i);\n    this._layers[t.label] = new RoiLayer(r, t);\n  }\n  // docs is in the corresponding file\n  fromMask(i, t = {}) {\n    let r = Object.assign({}, this._options, t), n = fromMask.call(this._image, i, t);\n    return this._layers[r.label] = new RoiLayer(n, r), this;\n  }\n  fromMaskConnectedComponentLabelingAlgorithm(i, t = {}) {\n    let r = Object.assign({}, this._options, t), n = fromMaskConnectedComponentLabelingAlgorithm.call(\n      this._image,\n      i,\n      t\n    );\n    return this._layers[r.label] = new RoiLayer(n, r), this;\n  }\n  /**\n   *\n   * @param {object} [options]\n   * @return {RoiMap}\n   */\n  getMap(i = {}) {\n    let t = Object.assign({}, this._options, i);\n    return this._assertLayerWithLabel(t.label), this._layers[t.label].roiMap;\n  }\n  /**\n   * Return statistics about rows\n   * @param {object} [options]\n   * @return {object[]}\n   */\n  rowsInfo(i = {}) {\n    return this.getMap(i).rowsInfo();\n  }\n  /**\n   * Return statistics about columns\n   * @param {object} [options]\n   * @return {object[]}\n   */\n  colsInfo(i = {}) {\n    return this.getMap(i).rowsInfo();\n  }\n  /**\n   * Return the IDs of the Regions Of Interest (Roi) as an array of number\n   * @param {object} [options]\n   * @return {number[]}\n   */\n  getRoiIds(i = {}) {\n    let t = this.getRois(i);\n    if (t) {\n      let r = new Array(t.length);\n      for (let n = 0; n < t.length; n++)\n        r[n] = t[n].id;\n      return r;\n    }\n    throw new Error(\"ROIs not found\");\n  }\n  /**\n   * Allows to select ROI based on size, label and sign.\n   * @param {object} [options={}]\n   * @param {string} [options.label='default'] Label of the layer containing the ROI\n   * @param {boolean} [options.positive=true] Select the positive region of interest\n   * @param {boolean} [options.negative=true] Select he negative region of interest\n   * @param {number} [options.minSurface=0]\n   * @param {number} [options.maxSurface=Number.POSITIVE_INFINITY]\n   * @param {number} [options.minWidth=0]\n   * @param {number} [options.minHeight=Number.POSITIVE_INFINITY]\n   * @param {number} [options.maxWidth=0]\n   * @param {number} [options.maxHeight=Number.POSITIVE_INFINITY]\n   * @param {number} [options.minRatio=0] Ratio width / height\n   * @param {number} [options.maxRatio=Number.POSITIVE_INFINITY]\n   * @return {Roi[]}\n   */\n  getRois(i = {}) {\n    let {\n      label: t = this._options.label,\n      positive: r = !0,\n      negative: n = !0,\n      minSurface: a = 0,\n      maxSurface: s = Number.POSITIVE_INFINITY,\n      minWidth: o = 0,\n      maxWidth: h = Number.POSITIVE_INFINITY,\n      minHeight: l = 0,\n      maxHeight: f = Number.POSITIVE_INFINITY,\n      minRatio: b = 0,\n      maxRatio: w = Number.POSITIVE_INFINITY\n    } = i;\n    if (!this._layers[t])\n      throw new Error(`this Roi layer (${t}) does not exist`);\n    const g = this._layers[t].roi, E = [];\n    for (const k of g)\n      (k.id < 0 && n || k.id > 0 && r) && k.surface >= a && k.surface <= s && k.width >= o && k.width <= h && k.height >= l && k.height <= f && k.ratio >= b && k.ratio <= w && E.push(k);\n    return E;\n  }\n  /**\n   * Get an ROI by its id.\n   * @param {number} roiId\n   * @param {object} [options={}]\n   * @param {string} [options.label='default'] Label of the layer containing the ROI\n   * @return {Roi}\n   */\n  getRoi(i, t = {}) {\n    const { label: r = this._options.label } = t;\n    if (!this._layers[r])\n      throw new Error(`this Roi layer (${r}) does not exist`);\n    const n = this._layers[r].roi.find((a) => a.id === i);\n    if (!n)\n      throw new Error(`found no Roi with id ${i}`);\n    return n;\n  }\n  /**\n   * Returns an array of masks\n   * See {@link Roi.getMask} for the options\n   * @param {object} [options]\n   * @return {Image[]} Retuns an array of masks (1 bit Image)\n   */\n  getMasks(i = {}) {\n    let t = this.getRois(i), r = new Array(t.length);\n    for (let n = 0; n < t.length; n++)\n      r[n] = t[n].getMask(i);\n    return r;\n  }\n  /**\n   * Returns an array of masks\n   * See {@link Roi.getAnalysisMasks} for the options\n   * @param {object} [options]\n   * @return {Image[]} Retuns an array of masks (1 bit Image)\n   */\n  getAnalysisMasks(i = {}) {\n    const { analysisProperty: t } = i;\n    let r = `${t}Mask`, n = this.getRois(i);\n    return n.length === 0 || !n[0][r] ? [] : n.map((a) => a[r]);\n  }\n  /**\n   *\n   * @param {object} [options]\n   * @return {number[]}\n   */\n  getData(i = {}) {\n    let t = Object.assign({}, this._options, i);\n    return this._assertLayerWithLabel(t.label), this._layers[t.label].roiMap.data;\n  }\n  /**\n   * Paint the ROI on a copy of the image and return this image.\n   * For painting options {@link Image.paintMasks}\n   * For ROI selection options, see {@link RoiManager.getMasks}\n   * @param {object} [options] - all the options to select ROIs\n   * @param {string} [options.labelProperty] - Paint a mask property on the image.\n   *                                  May be any property of the ROI like\n   *                                  for example id, surface, width, height, meanX, meanY.\n   * @param {number} [options.pixelSize] Size of a pixel in SI\n   * @param {string} [options.unit=\"pixel\"] Unit in which to display the values\n   * @return {Image} - The painted RGBA 8 bits image\n   */\n  paint(i = {}) {\n    let { labelProperty: t, analysisProperty: r } = i;\n    this._painted || (this._painted = this._image.rgba8());\n    let n = this.getMasks(i);\n    if (t) {\n      const a = this.getRois(i);\n      i.labels = a.map((l) => deepValue(l, t));\n      const s = Math.max(...i.labels);\n      let o = !1, h = !1;\n      if (t.includes(\"surface\") ? o = !0 : /(?:perimeter|min|max|external|width|height|length)/.test(t) && (h = !0), isFinite(s)) {\n        let l = \"\";\n        if (i.unit !== \"pixel\" && i.pixelSize && (h || o)) {\n          l = o ? `${i.unit}^2` : i.unit;\n          let f = o ? \"m^2\" : \"m\", b = o ? i.pixelSize ** 2 : i.pixelSize;\n          const w = Qty.swiftConverter(f, l);\n          i.labels = i.labels.map((g) => w(b * g));\n        }\n        s > 50 ? i.labels = i.labels.map(\n          (f) => Math.round(f) + l\n        ) : s > 10 ? i.labels = i.labels.map(\n          (f) => f.toFixed(1) + l\n        ) : i.labels = i.labels.map(\n          (f) => f.toFixed(2) + l\n        );\n      }\n      i.labelsPosition = a.map((l) => [l.meanX, l.meanY]);\n    }\n    if (this._painted.paintMasks(n, i), r) {\n      let a = this.getAnalysisMasks(i);\n      this._painted.paintMasks(a, {\n        color: i.analysisColor,\n        alpha: i.analysisAlpha\n      });\n    }\n    return this._painted;\n  }\n  // return a mask corresponding to all the selected masks\n  getMask(i = {}) {\n    let t = new Image(this._image.width, this._image.height, {\n      kind: \"BINARY\"\n    }), r = this.getMasks(i);\n    for (let n = 0; n < r.length; n++) {\n      let a = r[n];\n      for (let s = 0; s < a.width; s++)\n        for (let o = 0; o < a.height; o++)\n          a.getBitXY(s, o) && t.setBitXY(s + a.position[0], o + a.position[1]);\n    }\n    return t;\n  }\n  /**\n   * Reset the changes to the current painted iamge to the image that was\n   * used during the creation of the RoiManager except if a new image is\n   * specified as parameter;\n   * @param {object} [options]\n   * @param {Image} [options.image] A new iamge that you would like to sue for painting over\n   */\n  resetPainted(i = {}) {\n    const { image: t } = i;\n    t ? this._painted = this.image.rgba8() : this._painted = this._image.rgba8();\n  }\n  /**\n   * In place modification of the roiMap that joins regions of interest\n   * @param {object} [options]\n   * @param {string|function(object,number,number)} [options.algorithm='commonBorderLength'] algorithm used to decide which ROIs are merged.\n   *      Current implemented algorithms are 'commonBorderLength' that use the parameters\n   *      'minCommonBorderLength' and 'maxCommonBorderLength' as well as 'commonBorderRatio' that uses\n   *      the parameters 'minCommonBorderRatio' and 'maxCommonBorderRatio'.\n   * @param {number} [options.minCommonBorderLength=5] minimal common number of pixels for merging\n   * @param {number} [options.maxCommonBorderLength=100] maximal common number of pixels for merging\n   * @param {number} [options.minCommonBorderRatio=0.3] minimal common border ratio for merging\n   * @param {number} [options.maxCommonBorderRatio=1] maximal common border ratio for merging\n   * @return {this}\n   */\n  mergeRoi(i = {}) {\n    const t = this.getMap(i);\n    return t.mergeRoi(i), this.putMap(t.data, i), this;\n  }\n  /**\n   * Merge multiple rois into one.\n   * All rois in the provided array will be merged into the first one.\n   * @param {Array<number>} roiIds - A list of Roi ids to merge\n   * @param {object} [options]\n   */\n  mergeRois(i, t = {}) {\n    if (!Array.isArray(i) || i.some((n) => !Number.isInteger(n)))\n      throw new Error(\"Roi ids must be an array of integers\");\n    if (i.length < 2)\n      throw new Error(\"Roi ids must have at least two elements\");\n    if (new Set(i).size !== i.length)\n      throw new Error(\"Roi ids must be all different\");\n    i.forEach((n) => this.getRoi(n));\n    const r = this.getMap(t);\n    return r.mergeRois(i), this.putMap(r.data, t), this;\n  }\n  /**\n   * Finds all corresponding ROIs for all ROIs in the manager\n   * @param {number[]} roiMap\n   * @param {object} [options]\n   * @return {Array} array of objects returned in correspondingRoisInformation\n   */\n  findCorrespondingRoi(i, t = {}) {\n    let r = this.getRois(t), n = [];\n    for (let a = 0; a < r.length; a++) {\n      let s = r[a], o = s.minX, h = s.minY, l = s.points, f = Math.sign(s.id), b = correspondingRoisInformation(\n        o,\n        h,\n        l,\n        i,\n        f\n      );\n      n.push(b);\n    }\n    return n;\n  }\n  _assertLayerWithLabel(i) {\n    if (!this._layers[i])\n      throw new Error(`no layer with label ${i}`);\n  }\n}\nfunction correspondingRoisInformation(e, i, t, r, n) {\n  let a = {\n    id: [],\n    surface: [],\n    roiSurfaceCovered: [],\n    same: 0,\n    opposite: 0,\n    total: 0\n  };\n  for (let s = 0; s < t.length; s++) {\n    let o = t[s], h = o[0], l = o[1], f = h + e + (l + i) * r.width, b = r.data[f];\n    (b > 0 || b < 0) && (a.id.includes(b) ? a.surface[a.id.indexOf(b)] += 1 : (a.id.push(b), a.surface.push(1)));\n  }\n  for (let s = 0; s < a.id.length; s++)\n    Math.sign(a.id[s]) === n ? a.same += a.surface[s] : a.opposite += a.surface[s], a.roiSurfaceCovered[s] = a.surface[s] / t.length;\n  return a.total = a.opposite + a.same, a;\n}\nconst objectToString = Object.prototype.toString;\nclass Image {\n  constructor(i, t, r, n) {\n    if (arguments.length === 1 ? (n = i, { width: i, height: t, data: r } = n) : r && !r.length && (n = r, { data: r } = n), i === void 0 && (i = 1), t === void 0 && (t = 1), n === void 0 && (n = {}), typeof n != \"object\" || n === null)\n      throw new TypeError(\"options must be an object\");\n    if (!Number.isInteger(i) || i <= 0)\n      throw new RangeError(\"width must be a positive integer\");\n    if (!Number.isInteger(t) || t <= 0)\n      throw new RangeError(\"height must be a positive integer\");\n    const { kind: a = RGBA } = n;\n    if (typeof a != \"string\")\n      throw new TypeError(\"kind must be a string\");\n    const s = getKind(a), o = Object.assign({}, n);\n    for (const k in s)\n      o[k] === void 0 && (o[k] = s[k]);\n    verifyKindDefinition(o);\n    const { components: h, bitDepth: l, colorModel: f } = o, b = o.alpha + 0, w = i * t, g = h + b, E = l === 32 ? Number.MAX_VALUE : 2 ** l - 1;\n    if (r === void 0)\n      r = createPixelArray(\n        w,\n        h,\n        b,\n        g,\n        l,\n        E\n      );\n    else {\n      const k = getTheoreticalPixelArraySize(\n        w,\n        g,\n        l\n      );\n      if (r.length !== k)\n        throw new RangeError(\n          `incorrect data size: ${r.length}. Should be ${k}`\n        );\n    }\n    this.width = i, this.height = t, this.data = r, this.size = w, this.components = h, this.alpha = b, this.bitDepth = l, this.maxValue = E, this.colorModel = f, this.channels = g, this.meta = n.meta || {}, Object.defineProperty(this, \"parent\", {\n      enumerable: !1,\n      writable: !0,\n      configurable: !0,\n      value: n.parent || null\n    }), this.position = n.position || [0, 0], this.computed = null, this.sizes = [this.width, this.height], this.multiplierX = this.channels, this.multiplierY = this.channels * this.width, this.isClamped = this.bitDepth < 32, this.borderSizes = [0, 0];\n  }\n  get [Symbol.toStringTag]() {\n    return \"IJSImage\";\n  }\n  static isImage(i) {\n    return objectToString.call(i) === \"[object IJSImage]\";\n  }\n  /**\n   * Creates an image from an HTML Canvas object\n   * @param {Canvas} canvas\n   * @return {Image}\n   */\n  static fromCanvas(i) {\n    const r = i.getContext(\"2d\").getImageData(0, 0, i.width, i.height);\n    return new Image(r.width, r.height, r.data);\n  }\n  /**\n   * Create a new Image based on the characteristics of another one.\n   * @param {Image} other\n   * @param {object} [options] - Override options to change some parameters\n   * @return {Image}\n   * @example\n   * const newImage = Image.createFrom(image, { width: 100 });\n   */\n  static createFrom(i, t) {\n    const r = getImageParameters(i);\n    return Object.assign(\n      r,\n      {\n        parent: i,\n        position: [0, 0]\n      },\n      t\n    ), new Image(r);\n  }\n  /**\n   * Create a new manager for regions of interest based on the current image.\n   * @param {object} [options]\n   * @return {RoiManager}\n   */\n  getRoiManager(i) {\n    return new RoiManager(this, i);\n  }\n  /**\n   * Create a copy a the current image, including its data.\n   * @instance\n   * @return {Image}\n   */\n  clone() {\n    const i = this.data.slice();\n    return new Image(this.width, this.height, i, this);\n  }\n  apply(i) {\n    for (let t = 0; t < this.height; t++)\n      for (let r = 0; r < this.width; r++) {\n        let n = (t * this.width + r) * this.channels;\n        i.call(this, n);\n      }\n  }\n}\nsetValueMethods(Image);\nsetBitMethods(Image);\nsetExportMethods(Image);\nImage.prototype.checkProcessable = checkProcessable;\nImage.prototype.getRGBAData = getRGBAData;\nImage.load = load;\nImage.extendMethod = extendMethod;\nImage.extendProperty = extendProperty;\nextend$1(Image);\nvar workerTemplate = {}, hasRequiredWorkerTemplate;\nfunction requireWorkerTemplate() {\n  if (hasRequiredWorkerTemplate) return workerTemplate;\n  hasRequiredWorkerTemplate = 1;\n  var e = function() {\n    self.window = self;\n    function t() {\n      this._listeners = {};\n    }\n    t.prototype.on = function(n, a) {\n      if (this._listeners[n])\n        throw new RangeError(\"there is already a listener for \" + n);\n      if (typeof a != \"function\")\n        throw new TypeError(\"callback argument must be a function\");\n      this._listeners[n] = a;\n    }, t.prototype._send = function(n, a, s) {\n      s === void 0 ? s = [] : Array.isArray(s) || (s = [s]), self.postMessage({\n        id: n,\n        data: a\n      }, s);\n    }, t.prototype._trigger = function(n, a) {\n      if (!this._listeners[n])\n        throw new Error(\"event \" + n + \" is not defined\");\n      this._listeners[n].apply(null, a);\n    };\n    var r = new t();\n    self.onmessage = function(n) {\n      switch (n.data.action) {\n        case \"exec\":\n          n.data.args.unshift(function(a, s) {\n            r._send(n.data.id, a, s);\n          }), r._trigger(n.data.event, n.data.args);\n          break;\n        case \"ping\":\n          r._send(n.data.id, \"pong\");\n          break;\n        default:\n          throw new Error(\"unexpected action: \" + n.data.action);\n      }\n    };\n  }, i = e.toString().split('\"CODE\";');\n  return workerTemplate.newWorkerURL = function(r, n) {\n    var a = new Blob([\"(\", i[0], \"importScripts.apply(self, \" + JSON.stringify(n) + `);\n`, \"(\", r, \")();\", i[1], \")();\"], { type: \"application/javascript\" });\n    return URL.createObjectURL(a);\n  }, workerTemplate;\n}\nvar src, hasRequiredSrc;\nfunction requireSrc() {\n  if (hasRequiredSrc) return src;\n  hasRequiredSrc = 1;\n  var e = requireWorkerTemplate(), i = navigator.hardwareConcurrency || 1;\n  function t(r, n) {\n    if (typeof r != \"string\" && typeof r != \"function\")\n      throw new TypeError(\"func argument must be a function\");\n    if (n === void 0 && (n = {}), typeof n != \"object\" || n === null)\n      throw new TypeError(\"options argument must be an object\");\n    this._workerCode = r.toString(), n.maxWorkers === void 0 || n.maxWorkers === \"auto\" ? this._numWorkers = Math.min(i - 1, 1) : n.maxWorkers > 0 ? this._numWorkers = Math.min(n.maxWorkers, i) : this._numWorkers = i, this._workers = /* @__PURE__ */ new Map(), this._timeout = n.timeout || 0, this._terminateOnError = !!n.terminateOnError;\n    var a = n.deps;\n    typeof a == \"string\" && (a = [a]), Array.isArray(a) || (a = void 0), this._id = 0, this._terminated = !1, this._working = 0, this._waiting = [], this._init(a);\n  }\n  return t.prototype._init = function(r) {\n    for (var n = e.newWorkerURL(this._workerCode, r), a = 0; a < this._numWorkers; a++) {\n      var s = new Worker(n);\n      s.onmessage = this._onmessage.bind(this, s), s.onerror = this._onerror.bind(this, s), s.running = !1, s.id = a, this._workers.set(s, null);\n    }\n    URL.revokeObjectURL(n);\n  }, t.prototype._onerror = function(r, n) {\n    if (!this._terminated) {\n      this._working--, r.running = !1;\n      var a = this._workers.get(r);\n      a && a[1](n.message), this._workers.set(r, null), this._terminateOnError ? this.terminate() : this._exec();\n    }\n  }, t.prototype._onmessage = function(r, n) {\n    if (!this._terminated) {\n      this._working--, r.running = !1;\n      var a = this._workers.get(r);\n      a && a[0](n.data.data), this._workers.set(r, null), this._exec();\n    }\n  }, t.prototype._exec = function() {\n    for (var r of this._workers.keys()) {\n      if (this._working === this._numWorkers || this._waiting.length === 0)\n        return;\n      if (!r.running)\n        for (var n = 0; n < this._waiting.length; n++) {\n          var a = this._waiting[n];\n          if (!(typeof a[4] == \"number\" && a[4] !== r.id)) {\n            this._waiting.splice(n, 1), r.postMessage({\n              action: \"exec\",\n              event: a[0],\n              args: a[1]\n            }, a[2]), r.running = !0, r.time = Date.now(), this._workers.set(r, a[3]), this._working++;\n            break;\n          }\n        }\n    }\n  }, t.prototype.terminate = function() {\n    if (!this._terminated) {\n      for (var r of this._workers)\n        r[0].terminate(), r[1] && r[1][1](new Error(\"Terminated\"));\n      this._workers.clear(), this._waiting = [], this._working = 0, this._terminated = !0;\n    }\n  }, t.prototype.postAll = function(r, n) {\n    if (this._terminated)\n      throw new Error(\"Cannot post (terminated)\");\n    var a = [];\n    for (var s of this._workers.keys())\n      a.push(this.post(r, n, [], s.id));\n    return Promise.all(a);\n  }, t.prototype.post = function(r, n, a, s) {\n    n === void 0 && (n = []), a === void 0 && (a = []), Array.isArray(n) || (n = [n]), Array.isArray(a) || (a = [a]);\n    var o = this;\n    return new Promise(function(h, l) {\n      if (o._terminated) throw new Error(\"Cannot post (terminated)\");\n      o._waiting.push([r, n, a, [h, l], s]), o._exec();\n    });\n  }, src = t, src;\n}\nvar srcExports = requireSrc();\nconst WorkerManager = /* @__PURE__ */ getDefaultExportFromCjs(srcExports), defaultOptions = {\n  regression: {\n    kernelType: \"polynomial\",\n    kernelOptions: { degree: 2, constant: 1 }\n  },\n  threshold: 0.02,\n  roi: {\n    minSurface: 100,\n    positive: !1\n  },\n  sampling: 20,\n  include: []\n};\nfunction run(e, i, t) {\n  i = Object.assign({}, defaultOptions, i);\n  const r = this.manager;\n  return Array.isArray(e) ? Promise.all(\n    e.map(function(n) {\n      const a = runOnce(r, n, i);\n      return typeof t == \"function\" && a.then(t), a;\n    })\n  ) : runOnce(r, e, i);\n}\nfunction runOnce(e, i, t) {\n  return e.post(\"data\", [i, t]).then(function(r) {\n    for (let n in r)\n      r[n] = new Image(r[n]);\n    return r;\n  });\n}\nfunction work() {\n  worker.on(\"data\", function(e, i, t) {\n    i = new IJS(i);\n    const r = {}, n = [], a = i.grey(), s = a.sobelFilter();\n    g(\"sobel\", s);\n    const o = s.level().mask({ threshold: t.threshold });\n    g(\"mask\", o);\n    const h = s.getRoiManager();\n    h.fromMask(o);\n    const l = h.getMask(t.roi);\n    g(\"realMask\", l);\n    const f = a.getPixelsGrid({\n      sampling: t.sampling,\n      mask: l\n    }), b = i.getBackground(\n      f.xyS,\n      f.zS,\n      t.regression\n    );\n    g(\"background\", b);\n    const w = i.subtract(b);\n    r.result = w, n.push(w.data.buffer), e(r, n);\n    function g(E, k) {\n      t.include.includes(E) && (r[E] = k, n.push(k.data.buffer));\n    }\n  });\n}\nconst background = { run, work };\nfunction extend(e) {\n  e.extendMethod(\"background\", background);\n}\nlet Worker$1 = class Pt {\n  constructor() {\n    this._url = null, this._deps = [null];\n  }\n  checkUrl() {\n    if (this._url === null)\n      throw new Error(\"image worker must be initialized with an URL\");\n  }\n  get url() {\n    return this._url;\n  }\n  set url(i) {\n    if (typeof i != \"string\")\n      throw new TypeError(\"worker URL must be a string\");\n    this._url = i, this._deps[0] = i;\n  }\n  static extendMethod(i, t) {\n    let r, n, a = {};\n    function s(...o) {\n      return r || (this.checkUrl(), n = this.url, r = new WorkerManager(t.work, { deps: n }), a.manager = r), t.run.call(a, ...o);\n    }\n    s.reset = function() {\n      r && (r.terminate(), r = new WorkerManager(t.work, { deps: n }), a.manager = r);\n    }, Pt.prototype[i] = s;\n  }\n};\nextend(Worker$1);\nvar lz4$1 = {}, xxh32 = {}, util = {}, hasRequiredUtil;\nfunction requireUtil() {\n  return hasRequiredUtil || (hasRequiredUtil = 1, util.hashU32 = function(i) {\n    return i = i | 0, i = i + 2127912214 + (i << 12) | 0, i = i ^ -949894596 ^ i >>> 19, i = i + 374761393 + (i << 5) | 0, i = i + -744332180 ^ i << 9, i = i + -42973499 + (i << 3) | 0, i ^ -1252372727 ^ i >>> 16 | 0;\n  }, util.readU64 = function(i, t) {\n    var r = 0;\n    return r |= i[t++] << 0, r |= i[t++] << 8, r |= i[t++] << 16, r |= i[t++] << 24, r |= i[t++] << 32, r |= i[t++] << 40, r |= i[t++] << 48, r |= i[t++] << 56, r;\n  }, util.readU32 = function(i, t) {\n    var r = 0;\n    return r |= i[t++] << 0, r |= i[t++] << 8, r |= i[t++] << 16, r |= i[t++] << 24, r;\n  }, util.writeU32 = function(i, t, r) {\n    i[t++] = r >> 0 & 255, i[t++] = r >> 8 & 255, i[t++] = r >> 16 & 255, i[t++] = r >> 24 & 255;\n  }, util.imul = function(i, t) {\n    var r = i >>> 16, n = i & 65535, a = t >>> 16, s = t & 65535;\n    return n * s + (r * s + n * a << 16) | 0;\n  }), util;\n}\nvar hasRequiredXxh32;\nfunction requireXxh32() {\n  if (hasRequiredXxh32) return xxh32;\n  hasRequiredXxh32 = 1;\n  var e = requireUtil(), i = 2654435761, t = 2246822519, r = 3266489917, n = 668265263, a = 374761393;\n  function s(E, k) {\n    return E = E | 0, k = k | 0, E >>> (32 - k | 0) | E << k | 0;\n  }\n  function o(E, k, A) {\n    return E = E | 0, k = k | 0, A = A | 0, e.imul(E >>> (32 - k | 0) | E << k, A) | 0;\n  }\n  function h(E, k) {\n    return E = E | 0, k = k | 0, E >>> k ^ E | 0;\n  }\n  function l(E, k, A, T, C) {\n    return o(e.imul(k, A) + E, T, C);\n  }\n  function f(E, k, A) {\n    return o(E + e.imul(k[A], a), 11, i);\n  }\n  function b(E, k, A) {\n    return l(E, e.readU32(k, A), r, 17, n);\n  }\n  function w(E, k, A) {\n    return [\n      l(E[0], e.readU32(k, A + 0), t, 13, i),\n      l(E[1], e.readU32(k, A + 4), t, 13, i),\n      l(E[2], e.readU32(k, A + 8), t, 13, i),\n      l(E[3], e.readU32(k, A + 12), t, 13, i)\n    ];\n  }\n  function g(E, k, A, T) {\n    var C, D;\n    if (D = T, T >= 16) {\n      for (C = [\n        E + i + t,\n        E + t,\n        E,\n        E - i\n      ]; T >= 16; )\n        C = w(C, k, A), A += 16, T -= 16;\n      C = s(C[0], 1) + s(C[1], 7) + s(C[2], 12) + s(C[3], 18) + D;\n    } else\n      C = E + a + T >>> 0;\n    for (; T >= 4; )\n      C = b(C, k, A), A += 4, T -= 4;\n    for (; T > 0; )\n      C = f(C, k, A), A++, T--;\n    return C = h(e.imul(h(e.imul(h(C, 15), t), 13), r), 16), C >>> 0;\n  }\n  return xxh32.hash = g, xxh32;\n}\nvar hasRequiredLz4;\nfunction requireLz4() {\n  return hasRequiredLz4 || (hasRequiredLz4 = 1, function(e) {\n    var i = requireXxh32(), t = requireUtil(), r = 4, n = 13, a = 5, s = 6, o = 65536, h = 4, l = (1 << h) - 1, f = 4, b = (1 << f) - 1, w = G(5 << 20), g = O(), E = 407708164, k = 4, A = 8, T = 16, C = 64, D = 192, $ = 2147483648, P = 7, z = 4, B = 7, F = {\n      4: 65536,\n      5: 262144,\n      6: 1048576,\n      7: 4194304\n    };\n    function O() {\n      try {\n        return new Uint32Array(o);\n      } catch {\n        for (var J = new Array(o), Q = 0; Q < o; Q++)\n          J[Q] = 0;\n        return J;\n      }\n    }\n    function N(J) {\n      for (var Q = 0; Q < o; Q++)\n        g[Q] = 0;\n    }\n    function G(J) {\n      try {\n        return new Uint8Array(J);\n      } catch {\n        for (var Q = new Array(J), W = 0; W < J; W++)\n          Q[W] = 0;\n        return Q;\n      }\n    }\n    function V(J, Q, W) {\n      if (typeof J.buffer !== void 0) {\n        if (Uint8Array.prototype.slice)\n          return J.slice(Q, W);\n        var ne = J.length;\n        Q = Q | 0, Q = Q < 0 ? Math.max(ne + Q, 0) : Math.min(Q, ne), W = W === void 0 ? ne : W | 0, W = W < 0 ? Math.max(ne + W, 0) : Math.min(W, ne);\n        for (var pe = new Uint8Array(W - Q), be = Q, ve = 0; be < W; )\n          pe[ve++] = J[be++];\n        return pe;\n      } else\n        return J.slice(Q, W);\n    }\n    e.compressBound = function(Q) {\n      return Q + Q / 255 + 16 | 0;\n    }, e.decompressBound = function(Q) {\n      var W = 0;\n      if (t.readU32(Q, W) !== E)\n        throw new Error(\"invalid magic number\");\n      W += 4;\n      var ne = Q[W++];\n      if ((ne & D) !== C)\n        throw new Error(\"incompatible descriptor version \" + (ne & D));\n      var pe = (ne & T) !== 0, be = (ne & A) !== 0, ve = Q[W++] >> z & B;\n      if (F[ve] === void 0)\n        throw new Error(\"invalid block size \" + ve);\n      var Ee = F[ve];\n      if (be)\n        return t.readU64(Q, W);\n      W++;\n      for (var Ae = 0; ; ) {\n        var _e = t.readU32(Q, W);\n        if (W += 4, _e & $ ? (_e &= 2147483647, Ae += _e) : Ae += Ee, _e === 0)\n          return Ae;\n        pe && (W += 4), W += _e;\n      }\n    }, e.makeBuffer = G, e.decompressBlock = function(Q, W, ne, pe, be) {\n      var ve, Ee, Ae, _e, Be;\n      for (Ae = ne + pe; ne < Ae; ) {\n        var Me = Q[ne++], re = Me >> 4;\n        if (re > 0) {\n          if (re === 15)\n            for (; re += Q[ne], Q[ne++] === 255; )\n              ;\n          for (_e = ne + re; ne < _e; )\n            W[be++] = Q[ne++];\n        }\n        if (ne >= Ae)\n          break;\n        if (ve = Me & 15, Ee = Q[ne++] | Q[ne++] << 8, ve === 15)\n          for (; ve += Q[ne], Q[ne++] === 255; )\n            ;\n        for (ve += r, Be = be - Ee, _e = Be + ve; Be < _e; )\n          W[be++] = W[Be++] | 0;\n      }\n      return be;\n    }, e.compressBlock = function(Q, W, ne, pe, be) {\n      var ve, Ee, Ae, _e, Be, Me, re, Te, Fe;\n      if (re = 0, Te = pe + ne, Ee = ne, pe >= n)\n        for (var Se = (1 << s) + 3; ne + r < Te - a; ) {\n          var Ye = t.readU32(Q, ne), Je = t.hashU32(Ye) >>> 0;\n          if (Je = (Je >> 16 ^ Je) >>> 0 & 65535, ve = be[Je] - 1, be[Je] = ne + 1, ve < 0 || ne - ve >>> 16 > 0 || t.readU32(Q, ve) !== Ye) {\n            Be = Se++ >> s, ne += Be;\n            continue;\n          }\n          for (Se = (1 << s) + 3, Me = ne - Ee, _e = ne - ve, ne += r, ve += r, Ae = ne; ne < Te - a && Q[ne] === Q[ve]; )\n            ne++, ve++;\n          Ae = ne - Ae;\n          var et = Ae < l ? Ae : l;\n          if (Me >= b) {\n            for (W[re++] = (b << h) + et, Fe = Me - b; Fe >= 255; Fe -= 255)\n              W[re++] = 255;\n            W[re++] = Fe;\n          } else\n            W[re++] = (Me << h) + et;\n          for (var Ve = 0; Ve < Me; Ve++)\n            W[re++] = Q[Ee + Ve];\n          if (W[re++] = _e, W[re++] = _e >> 8, Ae >= l) {\n            for (Fe = Ae - l; Fe >= 255; Fe -= 255)\n              W[re++] = 255;\n            W[re++] = Fe;\n          }\n          Ee = ne;\n        }\n      if (Ee === 0)\n        return 0;\n      if (Me = Te - Ee, Me >= b) {\n        for (W[re++] = b << h, Fe = Me - b; Fe >= 255; Fe -= 255)\n          W[re++] = 255;\n        W[re++] = Fe;\n      } else\n        W[re++] = Me << h;\n      for (ne = Ee; ne < Te; )\n        W[re++] = Q[ne++];\n      return re;\n    }, e.decompressFrame = function(Q, W) {\n      var ne, pe, be, ve, Ee = 0, Ae = 0;\n      if (t.readU32(Q, Ee) !== E)\n        throw new Error(\"invalid magic number\");\n      if (Ee += 4, ve = Q[Ee++], (ve & D) !== C)\n        throw new Error(\"incompatible descriptor version\");\n      ne = (ve & T) !== 0, pe = (ve & k) !== 0, be = (ve & A) !== 0;\n      var _e = Q[Ee++] >> z & B;\n      if (F[_e] === void 0)\n        throw new Error(\"invalid block size\");\n      for (be && (Ee += 8), Ee++; ; ) {\n        var Be;\n        if (Be = t.readU32(Q, Ee), Ee += 4, Be === 0)\n          break;\n        if (ne && (Ee += 4), (Be & $) !== 0) {\n          Be &= 2147483647;\n          for (var Me = 0; Me < Be; Me++)\n            W[Ae++] = Q[Ee++];\n        } else\n          Ae = e.decompressBlock(Q, W, Ee, Be, Ae), Ee += Be;\n      }\n      return pe && (Ee += 4), Ae;\n    }, e.compressFrame = function(Q, W) {\n      var ne = 0;\n      t.writeU32(W, ne, E), ne += 4, W[ne++] = C, W[ne++] = P << z, W[ne] = i.hash(0, W, 4, ne - 4) >> 8, ne++;\n      var pe = F[P], be = Q.length, ve = 0;\n      for (N(); be > 0; ) {\n        var Ee = 0, Ae = be > pe ? pe : be;\n        if (Ee = e.compressBlock(Q, w, ve, Ae, g), Ee > Ae || Ee === 0) {\n          t.writeU32(W, ne, 2147483648 | Ae), ne += 4;\n          for (var _e = ve + Ae; ve < _e; )\n            W[ne++] = Q[ve++];\n          be -= Ae;\n        } else {\n          t.writeU32(W, ne, Ee), ne += 4;\n          for (var Be = 0; Be < Ee; )\n            W[ne++] = w[Be++];\n          ve += Ae, be -= Ae;\n        }\n      }\n      return t.writeU32(W, ne, 0), ne += 4, ne;\n    }, e.decompress = function(Q, W) {\n      var ne, pe;\n      return W === void 0 && (W = e.decompressBound(Q)), ne = e.makeBuffer(W), pe = e.decompressFrame(Q, ne), pe !== W && (ne = V(ne, 0, pe)), ne;\n    }, e.compress = function(Q, W) {\n      var ne, pe;\n      return W === void 0 && (W = e.compressBound(Q.length)), ne = e.makeBuffer(W), pe = e.compressFrame(Q, ne), pe !== W && (ne = V(ne, 0, pe)), ne;\n    };\n  }(lz4$1)), lz4$1;\n}\nvar lz4Exports = requireLz4();\nconst lz4 = /* @__PURE__ */ getDefaultExportFromCjs(lz4Exports);\nvar __defProp = Object.defineProperty, __defNormalProp = (e, i, t) => i in e ? __defProp(e, i, { enumerable: !0, configurable: !0, writable: !0, value: t }) : e[i] = t, __export = (e, i) => {\n  for (var t in i)\n    __defProp(e, t, { get: i[t], enumerable: !0 });\n}, __publicField = (e, i, t) => (__defNormalProp(e, typeof i != \"symbol\" ? i + \"\" : i, t), t), constants_exports = {};\n__export(constants_exports, {\n  bt709: () => bt709_exports\n});\nvar bt709_exports = {};\n__export(bt709_exports, {\n  Y: () => Y,\n  x: () => x,\n  y: () => y\n});\nvar Y = /* @__PURE__ */ ((e) => (e[e.RED = 0.2126] = \"RED\", e[e.GREEN = 0.7152] = \"GREEN\", e[e.BLUE = 0.0722] = \"BLUE\", e[e.WHITE = 1] = \"WHITE\", e))(Y || {}), x = /* @__PURE__ */ ((e) => (e[e.RED = 0.64] = \"RED\", e[e.GREEN = 0.3] = \"GREEN\", e[e.BLUE = 0.15] = \"BLUE\", e[e.WHITE = 0.3127] = \"WHITE\", e))(x || {}), y = /* @__PURE__ */ ((e) => (e[e.RED = 0.33] = \"RED\", e[e.GREEN = 0.6] = \"GREEN\", e[e.BLUE = 0.06] = \"BLUE\", e[e.WHITE = 0.329] = \"WHITE\", e))(y || {}), conversion_exports = {};\n__export(conversion_exports, {\n  lab2rgb: () => lab2rgb,\n  lab2xyz: () => lab2xyz,\n  rgb2hsl: () => rgb2hsl,\n  rgb2lab: () => rgb2lab,\n  rgb2xyz: () => rgb2xyz,\n  xyz2lab: () => xyz2lab,\n  xyz2rgb: () => xyz2rgb\n});\nfunction correctGamma(e) {\n  return e > 0.04045 ? ((e + 0.055) / 1.055) ** 2.4 : e / 12.92;\n}\nfunction rgb2xyz(e, i, t) {\n  return e = correctGamma(e / 255), i = correctGamma(i / 255), t = correctGamma(t / 255), {\n    x: e * 0.4124 + i * 0.3576 + t * 0.1805,\n    y: e * 0.2126 + i * 0.7152 + t * 0.0722,\n    z: e * 0.0193 + i * 0.1192 + t * 0.9505\n  };\n}\nvar arithmetic_exports = {};\n__export(arithmetic_exports, {\n  degrees2radians: () => degrees2radians,\n  inRange0to255: () => inRange0to255,\n  inRange0to255Rounded: () => inRange0to255Rounded,\n  intInRange: () => intInRange,\n  max3: () => max3,\n  min3: () => min3,\n  stableSort: () => stableSort\n});\nfunction degrees2radians(e) {\n  return e * (Math.PI / 180);\n}\nfunction max3(e, i, t) {\n  let r = e;\n  return r < i && (r = i), r < t && (r = t), r;\n}\nfunction min3(e, i, t) {\n  let r = e;\n  return r > i && (r = i), r > t && (r = t), r;\n}\nfunction intInRange(e, i, t) {\n  return e > t && (e = t), e < i && (e = i), e | 0;\n}\nfunction inRange0to255Rounded(e) {\n  return e = Math.round(e), e > 255 ? e = 255 : e < 0 && (e = 0), e;\n}\nfunction inRange0to255(e) {\n  return e > 255 ? e = 255 : e < 0 && (e = 0), e;\n}\nfunction stableSort(e, i) {\n  const t = typeof e[0];\n  let r;\n  if (t === \"number\" || t === \"string\") {\n    const n = /* @__PURE__ */ Object.create(null);\n    for (let a = 0, s = e.length; a < s; a++) {\n      const o = e[a];\n      n[o] || n[o] === 0 || (n[o] = a);\n    }\n    r = e.sort((a, s) => i(a, s) || n[a] - n[s]);\n  } else {\n    const n = e.slice(0);\n    r = e.sort((a, s) => i(a, s) || n.indexOf(a) - n.indexOf(s));\n  }\n  return r;\n}\nfunction rgb2hsl(e, i, t) {\n  const r = min3(e, i, t), n = max3(e, i, t), a = n - r, s = (r + n) / 510;\n  let o = 0;\n  s > 0 && s < 1 && (o = a / (s < 0.5 ? n + r : 510 - n - r));\n  let h = 0;\n  return a > 0 && (n === e ? h = (i - t) / a : n === i ? h = 2 + (t - e) / a : h = 4 + (e - i) / a, h *= 60, h < 0 && (h += 360)), { h, s: o, l: s };\n}\nvar refX = 0.95047, refY = 1, refZ = 1.08883;\nfunction pivot(e) {\n  return e > 8856e-6 ? e ** (1 / 3) : 7.787 * e + 16 / 116;\n}\nfunction xyz2lab(e, i, t) {\n  if (e = pivot(e / refX), i = pivot(i / refY), t = pivot(t / refZ), 116 * i - 16 < 0)\n    throw new Error(\"xxx\");\n  return {\n    L: Math.max(0, 116 * i - 16),\n    a: 500 * (e - i),\n    b: 200 * (i - t)\n  };\n}\nfunction rgb2lab(e, i, t) {\n  const r = rgb2xyz(e, i, t);\n  return xyz2lab(r.x, r.y, r.z);\n}\nvar refX2 = 0.95047, refY2 = 1, refZ2 = 1.08883;\nfunction pivot2(e) {\n  return e > 0.206893034 ? e ** 3 : (e - 16 / 116) / 7.787;\n}\nfunction lab2xyz(e, i, t) {\n  const r = (e + 16) / 116, n = i / 500 + r, a = r - t / 200;\n  return {\n    x: refX2 * pivot2(n),\n    y: refY2 * pivot2(r),\n    z: refZ2 * pivot2(a)\n  };\n}\nfunction correctGamma2(e) {\n  return e > 31308e-7 ? 1.055 * e ** (1 / 2.4) - 0.055 : 12.92 * e;\n}\nfunction xyz2rgb(e, i, t) {\n  const r = correctGamma2(e * 3.2406 + i * -1.5372 + t * -0.4986), n = correctGamma2(e * -0.9689 + i * 1.8758 + t * 0.0415), a = correctGamma2(e * 0.0557 + i * -0.204 + t * 1.057);\n  return {\n    r: inRange0to255Rounded(r * 255),\n    g: inRange0to255Rounded(n * 255),\n    b: inRange0to255Rounded(a * 255)\n  };\n}\nfunction lab2rgb(e, i, t) {\n  const r = lab2xyz(e, i, t);\n  return xyz2rgb(r.x, r.y, r.z);\n}\nvar distance_exports = {};\n__export(distance_exports, {\n  AbstractDistanceCalculator: () => AbstractDistanceCalculator,\n  AbstractEuclidean: () => AbstractEuclidean,\n  AbstractManhattan: () => AbstractManhattan,\n  CIE94GraphicArts: () => CIE94GraphicArts,\n  CIE94Textiles: () => CIE94Textiles,\n  CIEDE2000: () => CIEDE2000,\n  CMetric: () => CMetric,\n  Euclidean: () => Euclidean,\n  EuclideanBT709: () => EuclideanBT709,\n  EuclideanBT709NoAlpha: () => EuclideanBT709NoAlpha,\n  Manhattan: () => Manhattan,\n  ManhattanBT709: () => ManhattanBT709,\n  ManhattanNommyde: () => ManhattanNommyde,\n  PNGQuant: () => PNGQuant\n});\nvar AbstractDistanceCalculator = class {\n  constructor() {\n    __publicField(this, \"_maxDistance\"), __publicField(this, \"_whitePoint\"), this._setDefaults(), this.setWhitePoint(255, 255, 255, 255);\n  }\n  setWhitePoint(e, i, t, r) {\n    this._whitePoint = {\n      r: e > 0 ? 255 / e : 0,\n      g: i > 0 ? 255 / i : 0,\n      b: t > 0 ? 255 / t : 0,\n      a: r > 0 ? 255 / r : 0\n    }, this._maxDistance = this.calculateRaw(e, i, t, r, 0, 0, 0, 0);\n  }\n  calculateNormalized(e, i) {\n    return this.calculateRaw(e.r, e.g, e.b, e.a, i.r, i.g, i.b, i.a) / this._maxDistance;\n  }\n}, AbstractCIE94 = class extends AbstractDistanceCalculator {\n  calculateRaw(e, i, t, r, n, a, s, o) {\n    const h = rgb2lab(inRange0to255(e * this._whitePoint.r), inRange0to255(i * this._whitePoint.g), inRange0to255(t * this._whitePoint.b)), l = rgb2lab(inRange0to255(n * this._whitePoint.r), inRange0to255(a * this._whitePoint.g), inRange0to255(s * this._whitePoint.b)), f = h.L - l.L, b = h.a - l.a, w = h.b - l.b, g = Math.sqrt(h.a * h.a + h.b * h.b), E = Math.sqrt(l.a * l.a + l.b * l.b), k = g - E;\n    let A = b * b + w * w - k * k;\n    A = A < 0 ? 0 : Math.sqrt(A);\n    const T = (o - r) * this._whitePoint.a * this._kA;\n    return Math.sqrt((f / this._Kl) ** 2 + (k / (1 + this._K1 * g)) ** 2 + (A / (1 + this._K2 * g)) ** 2 + T ** 2);\n  }\n}, CIE94Textiles = class extends AbstractCIE94 {\n  _setDefaults() {\n    this._Kl = 2, this._K1 = 0.048, this._K2 = 0.014, this._kA = 0.25 * 50 / 255;\n  }\n}, CIE94GraphicArts = class extends AbstractCIE94 {\n  _setDefaults() {\n    this._Kl = 1, this._K1 = 0.045, this._K2 = 0.015, this._kA = 0.25 * 100 / 255;\n  }\n}, _CIEDE2000 = class extends AbstractDistanceCalculator {\n  _setDefaults() {\n  }\n  static _calculatehp(e, i) {\n    const t = Math.atan2(e, i);\n    return t >= 0 ? t : t + _CIEDE2000._deg360InRad;\n  }\n  static _calculateRT(e, i) {\n    const t = i ** 7, r = 2 * Math.sqrt(t / (t + _CIEDE2000._pow25to7)), n = _CIEDE2000._deg30InRad * Math.exp(-(((e - _CIEDE2000._deg275InRad) / _CIEDE2000._deg25InRad) ** 2));\n    return -Math.sin(2 * n) * r;\n  }\n  static _calculateT(e) {\n    return 1 - 0.17 * Math.cos(e - _CIEDE2000._deg30InRad) + 0.24 * Math.cos(e * 2) + 0.32 * Math.cos(e * 3 + _CIEDE2000._deg6InRad) - 0.2 * Math.cos(e * 4 - _CIEDE2000._deg63InRad);\n  }\n  static _calculate_ahp(e, i, t, r) {\n    const n = t + r;\n    return e === 0 ? n : i <= _CIEDE2000._deg180InRad ? n / 2 : n < _CIEDE2000._deg360InRad ? (n + _CIEDE2000._deg360InRad) / 2 : (n - _CIEDE2000._deg360InRad) / 2;\n  }\n  static _calculate_dHp(e, i, t, r) {\n    let n;\n    return e === 0 ? n = 0 : i <= _CIEDE2000._deg180InRad ? n = t - r : t <= r ? n = t - r + _CIEDE2000._deg360InRad : n = t - r - _CIEDE2000._deg360InRad, 2 * Math.sqrt(e) * Math.sin(n / 2);\n  }\n  calculateRaw(e, i, t, r, n, a, s, o) {\n    const h = rgb2lab(inRange0to255(e * this._whitePoint.r), inRange0to255(i * this._whitePoint.g), inRange0to255(t * this._whitePoint.b)), l = rgb2lab(inRange0to255(n * this._whitePoint.r), inRange0to255(a * this._whitePoint.g), inRange0to255(s * this._whitePoint.b)), f = (o - r) * this._whitePoint.a * _CIEDE2000._kA, b = this.calculateRawInLab(h, l);\n    return Math.sqrt(b + f * f);\n  }\n  calculateRawInLab(e, i) {\n    const t = e.L, r = e.a, n = e.b, a = i.L, s = i.a, o = i.b, h = Math.sqrt(r * r + n * n), l = Math.sqrt(s * s + o * o), f = ((h + l) / 2) ** 7, b = 0.5 * (1 - Math.sqrt(f / (f + _CIEDE2000._pow25to7))), w = (1 + b) * r, g = (1 + b) * s, E = Math.sqrt(w * w + n * n), k = Math.sqrt(g * g + o * o), A = E * k, T = _CIEDE2000._calculatehp(n, w), C = _CIEDE2000._calculatehp(o, g), D = Math.abs(T - C), $ = a - t, P = k - E, z = _CIEDE2000._calculate_dHp(A, D, C, T), B = _CIEDE2000._calculate_ahp(A, D, T, C), F = _CIEDE2000._calculateT(B), O = (E + k) / 2, N = ((t + a) / 2 - 50) ** 2, G = 1 + 0.015 * N / Math.sqrt(20 + N), V = 1 + 0.045 * O, J = 1 + 0.015 * F * O, Q = _CIEDE2000._calculateRT(B, O), W = $ / G, ne = P / V, pe = z / J;\n    return W ** 2 + ne ** 2 + pe ** 2 + Q * ne * pe;\n  }\n}, CIEDE2000 = _CIEDE2000;\n__publicField(CIEDE2000, \"_kA\", 0.25 * 100 / 255);\n__publicField(CIEDE2000, \"_pow25to7\", 25 ** 7);\n__publicField(CIEDE2000, \"_deg360InRad\", degrees2radians(360));\n__publicField(CIEDE2000, \"_deg180InRad\", degrees2radians(180));\n__publicField(CIEDE2000, \"_deg30InRad\", degrees2radians(30));\n__publicField(CIEDE2000, \"_deg6InRad\", degrees2radians(6));\n__publicField(CIEDE2000, \"_deg63InRad\", degrees2radians(63));\n__publicField(CIEDE2000, \"_deg275InRad\", degrees2radians(275));\n__publicField(CIEDE2000, \"_deg25InRad\", degrees2radians(25));\nvar CMetric = class extends AbstractDistanceCalculator {\n  calculateRaw(e, i, t, r, n, a, s, o) {\n    const h = (e + n) / 2 * this._whitePoint.r, l = (e - n) * this._whitePoint.r, f = (i - a) * this._whitePoint.g, b = (t - s) * this._whitePoint.b, w = ((512 + h) * l * l >> 8) + 4 * f * f + ((767 - h) * b * b >> 8), g = (o - r) * this._whitePoint.a;\n    return Math.sqrt(w + g * g);\n  }\n  _setDefaults() {\n  }\n}, AbstractEuclidean = class extends AbstractDistanceCalculator {\n  calculateRaw(e, i, t, r, n, a, s, o) {\n    const h = n - e, l = a - i, f = s - t, b = o - r;\n    return Math.sqrt(this._kR * h * h + this._kG * l * l + this._kB * f * f + this._kA * b * b);\n  }\n}, Euclidean = class extends AbstractEuclidean {\n  _setDefaults() {\n    this._kR = 1, this._kG = 1, this._kB = 1, this._kA = 1;\n  }\n}, EuclideanBT709 = class extends AbstractEuclidean {\n  _setDefaults() {\n    this._kR = 0.2126, this._kG = 0.7152, this._kB = 0.0722, this._kA = 1;\n  }\n}, EuclideanBT709NoAlpha = class extends AbstractEuclidean {\n  _setDefaults() {\n    this._kR = 0.2126, this._kG = 0.7152, this._kB = 0.0722, this._kA = 0;\n  }\n}, AbstractManhattan = class extends AbstractDistanceCalculator {\n  calculateRaw(e, i, t, r, n, a, s, o) {\n    let h = n - e, l = a - i, f = s - t, b = o - r;\n    return h < 0 && (h = 0 - h), l < 0 && (l = 0 - l), f < 0 && (f = 0 - f), b < 0 && (b = 0 - b), this._kR * h + this._kG * l + this._kB * f + this._kA * b;\n  }\n}, Manhattan = class extends AbstractManhattan {\n  _setDefaults() {\n    this._kR = 1, this._kG = 1, this._kB = 1, this._kA = 1;\n  }\n}, ManhattanNommyde = class extends AbstractManhattan {\n  _setDefaults() {\n    this._kR = 0.4984, this._kG = 0.8625, this._kB = 0.2979, this._kA = 1;\n  }\n}, ManhattanBT709 = class extends AbstractManhattan {\n  _setDefaults() {\n    this._kR = 0.2126, this._kG = 0.7152, this._kB = 0.0722, this._kA = 1;\n  }\n}, PNGQuant = class extends AbstractDistanceCalculator {\n  calculateRaw(e, i, t, r, n, a, s, o) {\n    const h = (o - r) * this._whitePoint.a;\n    return this._colordifferenceCh(e * this._whitePoint.r, n * this._whitePoint.r, h) + this._colordifferenceCh(i * this._whitePoint.g, a * this._whitePoint.g, h) + this._colordifferenceCh(t * this._whitePoint.b, s * this._whitePoint.b, h);\n  }\n  _colordifferenceCh(e, i, t) {\n    const r = e - i, n = r + t;\n    return r * r + n * n;\n  }\n  _setDefaults() {\n  }\n}, palette_exports = {};\n__export(palette_exports, {\n  AbstractPaletteQuantizer: () => AbstractPaletteQuantizer,\n  ColorHistogram: () => ColorHistogram,\n  NeuQuant: () => NeuQuant,\n  NeuQuantFloat: () => NeuQuantFloat,\n  RGBQuant: () => RGBQuant,\n  WuColorCube: () => WuColorCube,\n  WuQuant: () => WuQuant\n});\nvar AbstractPaletteQuantizer = class {\n  quantizeSync() {\n    for (const e of this.quantize())\n      if (e.palette)\n        return e.palette;\n    throw new Error(\"unreachable\");\n  }\n}, Point = class {\n  constructor() {\n    __publicField(this, \"r\"), __publicField(this, \"g\"), __publicField(this, \"b\"), __publicField(this, \"a\"), __publicField(this, \"uint32\"), __publicField(this, \"rgba\"), this.uint32 = -1 >>> 0, this.r = this.g = this.b = this.a = 0, this.rgba = new Array(4), this.rgba[0] = 0, this.rgba[1] = 0, this.rgba[2] = 0, this.rgba[3] = 0;\n  }\n  static createByQuadruplet(e) {\n    const i = new Point();\n    return i.r = e[0] | 0, i.g = e[1] | 0, i.b = e[2] | 0, i.a = e[3] | 0, i._loadUINT32(), i._loadQuadruplet(), i;\n  }\n  static createByRGBA(e, i, t, r) {\n    const n = new Point();\n    return n.r = e | 0, n.g = i | 0, n.b = t | 0, n.a = r | 0, n._loadUINT32(), n._loadQuadruplet(), n;\n  }\n  static createByUint32(e) {\n    const i = new Point();\n    return i.uint32 = e >>> 0, i._loadRGBA(), i._loadQuadruplet(), i;\n  }\n  from(e) {\n    this.r = e.r, this.g = e.g, this.b = e.b, this.a = e.a, this.uint32 = e.uint32, this.rgba[0] = e.r, this.rgba[1] = e.g, this.rgba[2] = e.b, this.rgba[3] = e.a;\n  }\n  getLuminosity(e) {\n    let i = this.r, t = this.g, r = this.b;\n    return e && (i = Math.min(255, 255 - this.a + this.a * i / 255), t = Math.min(255, 255 - this.a + this.a * t / 255), r = Math.min(255, 255 - this.a + this.a * r / 255)), i * 0.2126 + t * 0.7152 + r * 0.0722;\n  }\n  _loadUINT32() {\n    this.uint32 = (this.a << 24 | this.b << 16 | this.g << 8 | this.r) >>> 0;\n  }\n  _loadRGBA() {\n    this.r = this.uint32 & 255, this.g = this.uint32 >>> 8 & 255, this.b = this.uint32 >>> 16 & 255, this.a = this.uint32 >>> 24 & 255;\n  }\n  _loadQuadruplet() {\n    this.rgba[0] = this.r, this.rgba[1] = this.g, this.rgba[2] = this.b, this.rgba[3] = this.a;\n  }\n}, PointContainer = class {\n  constructor() {\n    __publicField(this, \"_pointArray\"), __publicField(this, \"_width\"), __publicField(this, \"_height\"), this._width = 0, this._height = 0, this._pointArray = [];\n  }\n  getWidth() {\n    return this._width;\n  }\n  getHeight() {\n    return this._height;\n  }\n  setWidth(e) {\n    this._width = e;\n  }\n  setHeight(e) {\n    this._height = e;\n  }\n  getPointArray() {\n    return this._pointArray;\n  }\n  clone() {\n    const e = new PointContainer();\n    e._width = this._width, e._height = this._height;\n    for (let i = 0, t = this._pointArray.length; i < t; i++)\n      e._pointArray[i] = Point.createByUint32(this._pointArray[i].uint32 | 0);\n    return e;\n  }\n  toUint32Array() {\n    const e = this._pointArray.length, i = new Uint32Array(e);\n    for (let t = 0; t < e; t++)\n      i[t] = this._pointArray[t].uint32;\n    return i;\n  }\n  toUint8Array() {\n    return new Uint8Array(this.toUint32Array().buffer);\n  }\n  static fromHTMLImageElement(e) {\n    const i = e.naturalWidth, t = e.naturalHeight, r = document.createElement(\"canvas\");\n    return r.width = i, r.height = t, r.getContext(\"2d\").drawImage(e, 0, 0, i, t, 0, 0, i, t), PointContainer.fromHTMLCanvasElement(r);\n  }\n  static fromHTMLCanvasElement(e) {\n    const i = e.width, t = e.height, n = e.getContext(\"2d\").getImageData(0, 0, i, t);\n    return PointContainer.fromImageData(n);\n  }\n  static fromImageData(e) {\n    const i = e.width, t = e.height;\n    return PointContainer.fromUint8Array(e.data, i, t);\n  }\n  static fromUint8Array(e, i, t) {\n    switch (Object.prototype.toString.call(e)) {\n      case \"[object Uint8ClampedArray]\":\n      case \"[object Uint8Array]\":\n        break;\n      default:\n        e = new Uint8Array(e);\n    }\n    const r = new Uint32Array(e.buffer);\n    return PointContainer.fromUint32Array(r, i, t);\n  }\n  static fromUint32Array(e, i, t) {\n    const r = new PointContainer();\n    r._width = i, r._height = t;\n    for (let n = 0, a = e.length; n < a; n++)\n      r._pointArray[n] = Point.createByUint32(e[n] | 0);\n    return r;\n  }\n  static fromBuffer(e, i, t) {\n    const r = new Uint32Array(e.buffer, e.byteOffset, e.byteLength / Uint32Array.BYTES_PER_ELEMENT);\n    return PointContainer.fromUint32Array(r, i, t);\n  }\n}, hueGroups = 10;\nfunction hueGroup(e, i) {\n  const r = 360 / i, n = r / 2;\n  for (let a = 1, s = r - n; a < i; a++, s += r)\n    if (e >= s && e < s + r)\n      return a;\n  return 0;\n}\nvar Palette = class {\n  constructor() {\n    __publicField(this, \"_pointContainer\"), __publicField(this, \"_pointArray\", []), __publicField(this, \"_i32idx\", {}), this._pointContainer = new PointContainer(), this._pointContainer.setHeight(1), this._pointArray = this._pointContainer.getPointArray();\n  }\n  add(e) {\n    this._pointArray.push(e), this._pointContainer.setWidth(this._pointArray.length);\n  }\n  has(e) {\n    for (let i = this._pointArray.length - 1; i >= 0; i--)\n      if (e.uint32 === this._pointArray[i].uint32)\n        return !0;\n    return !1;\n  }\n  getNearestColor(e, i) {\n    return this._pointArray[this._getNearestIndex(e, i) | 0];\n  }\n  getPointContainer() {\n    return this._pointContainer;\n  }\n  _nearestPointFromCache(e) {\n    return typeof this._i32idx[e] == \"number\" ? this._i32idx[e] : -1;\n  }\n  _getNearestIndex(e, i) {\n    let t = this._nearestPointFromCache(\"\" + i.uint32);\n    if (t >= 0)\n      return t;\n    let r = Number.MAX_VALUE;\n    t = 0;\n    for (let n = 0, a = this._pointArray.length; n < a; n++) {\n      const s = this._pointArray[n], o = e.calculateRaw(i.r, i.g, i.b, i.a, s.r, s.g, s.b, s.a);\n      o < r && (r = o, t = n);\n    }\n    return this._i32idx[i.uint32] = t, t;\n  }\n  sort() {\n    this._i32idx = {}, this._pointArray.sort((e, i) => {\n      const t = rgb2hsl(e.r, e.g, e.b), r = rgb2hsl(i.r, i.g, i.b), n = e.r === e.g && e.g === e.b ? 0 : 1 + hueGroup(t.h, hueGroups), s = (i.r === i.g && i.g === i.b ? 0 : 1 + hueGroup(r.h, hueGroups)) - n;\n      if (s)\n        return -s;\n      const o = e.getLuminosity(!0), h = i.getLuminosity(!0);\n      if (h - o !== 0)\n        return h - o;\n      const l = (r.s * 100 | 0) - (t.s * 100 | 0);\n      return l ? -l : 0;\n    });\n  }\n}, utils_exports = {};\n__export(utils_exports, {\n  HueStatistics: () => HueStatistics,\n  Palette: () => Palette,\n  Point: () => Point,\n  PointContainer: () => PointContainer,\n  ProgressTracker: () => ProgressTracker,\n  arithmetic: () => arithmetic_exports\n});\nvar HueGroup = class {\n  constructor() {\n    __publicField(this, \"num\", 0), __publicField(this, \"cols\", []);\n  }\n}, HueStatistics = class {\n  constructor(e, i) {\n    __publicField(this, \"_numGroups\"), __publicField(this, \"_minCols\"), __publicField(this, \"_stats\"), __publicField(this, \"_groupsFull\"), this._numGroups = e, this._minCols = i, this._stats = [];\n    for (let t = 0; t <= e; t++)\n      this._stats[t] = new HueGroup();\n    this._groupsFull = 0;\n  }\n  check(e) {\n    this._groupsFull === this._numGroups + 1 && (this.check = () => {\n    });\n    const i = e & 255, t = e >>> 8 & 255, r = e >>> 16 & 255, n = i === t && t === r ? 0 : 1 + hueGroup(rgb2hsl(i, t, r).h, this._numGroups), a = this._stats[n], s = this._minCols;\n    a.num++, !(a.num > s) && (a.num === s && this._groupsFull++, a.num <= s && this._stats[n].cols.push(e));\n  }\n  injectIntoDictionary(e) {\n    for (let i = 0; i <= this._numGroups; i++)\n      this._stats[i].num <= this._minCols && this._stats[i].cols.forEach((t) => {\n        e[t] ? e[t]++ : e[t] = 1;\n      });\n  }\n  injectIntoArray(e) {\n    for (let i = 0; i <= this._numGroups; i++)\n      this._stats[i].num <= this._minCols && this._stats[i].cols.forEach((t) => {\n        e.indexOf(t) === -1 && e.push(t);\n      });\n  }\n}, _ProgressTracker = class {\n  constructor(e, i) {\n    __publicField(this, \"progress\"), __publicField(this, \"_step\"), __publicField(this, \"_range\"), __publicField(this, \"_last\"), __publicField(this, \"_progressRange\"), this._range = e, this._progressRange = i, this._step = Math.max(1, this._range / (_ProgressTracker.steps + 1) | 0), this._last = -this._step, this.progress = 0;\n  }\n  shouldNotify(e) {\n    return e - this._last >= this._step ? (this._last = e, this.progress = Math.min(this._progressRange * this._last / this._range, this._progressRange), !0) : !1;\n  }\n}, ProgressTracker = _ProgressTracker;\n__publicField(ProgressTracker, \"steps\", 100);\nvar networkBiasShift = 3, Neuron = class {\n  constructor(e) {\n    __publicField(this, \"r\"), __publicField(this, \"g\"), __publicField(this, \"b\"), __publicField(this, \"a\"), this.r = this.g = this.b = this.a = e;\n  }\n  toPoint() {\n    return Point.createByRGBA(this.r >> networkBiasShift, this.g >> networkBiasShift, this.b >> networkBiasShift, this.a >> networkBiasShift);\n  }\n  subtract(e, i, t, r) {\n    this.r -= e | 0, this.g -= i | 0, this.b -= t | 0, this.a -= r | 0;\n  }\n}, _NeuQuant = class extends AbstractPaletteQuantizer {\n  constructor(e, i = 256) {\n    super(), __publicField(this, \"_pointArray\"), __publicField(this, \"_networkSize\"), __publicField(this, \"_network\"), __publicField(this, \"_sampleFactor\"), __publicField(this, \"_radPower\"), __publicField(this, \"_freq\"), __publicField(this, \"_bias\"), __publicField(this, \"_distance\"), this._distance = e, this._pointArray = [], this._sampleFactor = 1, this._networkSize = i, this._distance.setWhitePoint(255 << networkBiasShift, 255 << networkBiasShift, 255 << networkBiasShift, 255 << networkBiasShift);\n  }\n  sample(e) {\n    this._pointArray = this._pointArray.concat(e.getPointArray());\n  }\n  *quantize() {\n    this._init(), yield* this._learn(), yield {\n      palette: this._buildPalette(),\n      progress: 100\n    };\n  }\n  _init() {\n    this._freq = [], this._bias = [], this._radPower = [], this._network = [];\n    for (let e = 0; e < this._networkSize; e++)\n      this._network[e] = new Neuron((e << networkBiasShift + 8) / this._networkSize | 0), this._freq[e] = _NeuQuant._initialBias / this._networkSize | 0, this._bias[e] = 0;\n  }\n  *_learn() {\n    let e = this._sampleFactor;\n    const i = this._pointArray.length;\n    i < _NeuQuant._minpicturebytes && (e = 1);\n    const t = 30 + (e - 1) / 3 | 0, r = i / e | 0;\n    let n = r / _NeuQuant._nCycles | 0, a = _NeuQuant._initAlpha, s = (this._networkSize >> 3) * _NeuQuant._radiusBias, o = s >> _NeuQuant._radiusBiasShift;\n    o <= 1 && (o = 0);\n    for (let f = 0; f < o; f++)\n      this._radPower[f] = a * ((o * o - f * f) * _NeuQuant._radBias / (o * o)) >>> 0;\n    let h;\n    i < _NeuQuant._minpicturebytes ? h = 1 : i % _NeuQuant._prime1 !== 0 ? h = _NeuQuant._prime1 : i % _NeuQuant._prime2 !== 0 ? h = _NeuQuant._prime2 : i % _NeuQuant._prime3 !== 0 ? h = _NeuQuant._prime3 : h = _NeuQuant._prime4;\n    const l = new ProgressTracker(r, 99);\n    for (let f = 0, b = 0; f < r; ) {\n      l.shouldNotify(f) && (yield {\n        progress: l.progress\n      });\n      const w = this._pointArray[b], g = w.b << networkBiasShift, E = w.g << networkBiasShift, k = w.r << networkBiasShift, A = w.a << networkBiasShift, T = this._contest(g, E, k, A);\n      if (this._alterSingle(a, T, g, E, k, A), o !== 0 && this._alterNeighbour(o, T, g, E, k, A), b += h, b >= i && (b -= i), f++, n === 0 && (n = 1), f % n === 0) {\n        a -= a / t | 0, s -= s / _NeuQuant._radiusDecrease | 0, o = s >> _NeuQuant._radiusBiasShift, o <= 1 && (o = 0);\n        for (let C = 0; C < o; C++)\n          this._radPower[C] = a * ((o * o - C * C) * _NeuQuant._radBias / (o * o)) >>> 0;\n      }\n    }\n  }\n  _buildPalette() {\n    const e = new Palette();\n    return this._network.forEach((i) => {\n      e.add(i.toPoint());\n    }), e.sort(), e;\n  }\n  _alterNeighbour(e, i, t, r, n, a) {\n    let s = i - e;\n    s < -1 && (s = -1);\n    let o = i + e;\n    o > this._networkSize && (o = this._networkSize);\n    let h = i + 1, l = i - 1, f = 1;\n    for (; h < o || l > s; ) {\n      const b = this._radPower[f++] / _NeuQuant._alphaRadBias;\n      if (h < o) {\n        const w = this._network[h++];\n        w.subtract(b * (w.r - n), b * (w.g - r), b * (w.b - t), b * (w.a - a));\n      }\n      if (l > s) {\n        const w = this._network[l--];\n        w.subtract(b * (w.r - n), b * (w.g - r), b * (w.b - t), b * (w.a - a));\n      }\n    }\n  }\n  _alterSingle(e, i, t, r, n, a) {\n    e /= _NeuQuant._initAlpha;\n    const s = this._network[i];\n    s.subtract(e * (s.r - n), e * (s.g - r), e * (s.b - t), e * (s.a - a));\n  }\n  _contest(e, i, t, r) {\n    const n = 1020 << networkBiasShift;\n    let a = 2147483647, s = a, o = -1, h = o;\n    for (let l = 0; l < this._networkSize; l++) {\n      const f = this._network[l], b = this._distance.calculateNormalized(f, { r: t, g: i, b: e, a: r }) * n | 0;\n      b < a && (a = b, o = l);\n      const w = b - (this._bias[l] >> _NeuQuant._initialBiasShift - networkBiasShift);\n      w < s && (s = w, h = l);\n      const g = this._freq[l] >> _NeuQuant._betaShift;\n      this._freq[l] -= g, this._bias[l] += g << _NeuQuant._gammaShift;\n    }\n    return this._freq[o] += _NeuQuant._beta, this._bias[o] -= _NeuQuant._betaGamma, h;\n  }\n}, NeuQuant = _NeuQuant;\n__publicField(NeuQuant, \"_prime1\", 499);\n__publicField(NeuQuant, \"_prime2\", 491);\n__publicField(NeuQuant, \"_prime3\", 487);\n__publicField(NeuQuant, \"_prime4\", 503);\n__publicField(NeuQuant, \"_minpicturebytes\", _NeuQuant._prime4);\n__publicField(NeuQuant, \"_nCycles\", 100);\n__publicField(NeuQuant, \"_initialBiasShift\", 16);\n__publicField(NeuQuant, \"_initialBias\", 1 << _NeuQuant._initialBiasShift);\n__publicField(NeuQuant, \"_gammaShift\", 10);\n__publicField(NeuQuant, \"_betaShift\", 10);\n__publicField(NeuQuant, \"_beta\", _NeuQuant._initialBias >> _NeuQuant._betaShift);\n__publicField(NeuQuant, \"_betaGamma\", _NeuQuant._initialBias << _NeuQuant._gammaShift - _NeuQuant._betaShift);\n__publicField(NeuQuant, \"_radiusBiasShift\", 6);\n__publicField(NeuQuant, \"_radiusBias\", 1 << _NeuQuant._radiusBiasShift);\n__publicField(NeuQuant, \"_radiusDecrease\", 30);\n__publicField(NeuQuant, \"_alphaBiasShift\", 10);\n__publicField(NeuQuant, \"_initAlpha\", 1 << _NeuQuant._alphaBiasShift);\n__publicField(NeuQuant, \"_radBiasShift\", 8);\n__publicField(NeuQuant, \"_radBias\", 1 << _NeuQuant._radBiasShift);\n__publicField(NeuQuant, \"_alphaRadBiasShift\", _NeuQuant._alphaBiasShift + _NeuQuant._radBiasShift);\n__publicField(NeuQuant, \"_alphaRadBias\", 1 << _NeuQuant._alphaRadBiasShift);\nvar networkBiasShift2 = 3, NeuronFloat = class {\n  constructor(e) {\n    __publicField(this, \"r\"), __publicField(this, \"g\"), __publicField(this, \"b\"), __publicField(this, \"a\"), this.r = this.g = this.b = this.a = e;\n  }\n  toPoint() {\n    return Point.createByRGBA(this.r >> networkBiasShift2, this.g >> networkBiasShift2, this.b >> networkBiasShift2, this.a >> networkBiasShift2);\n  }\n  subtract(e, i, t, r) {\n    this.r -= e, this.g -= i, this.b -= t, this.a -= r;\n  }\n}, _NeuQuantFloat = class extends AbstractPaletteQuantizer {\n  constructor(e, i = 256) {\n    super(), __publicField(this, \"_pointArray\"), __publicField(this, \"_networkSize\"), __publicField(this, \"_network\"), __publicField(this, \"_sampleFactor\"), __publicField(this, \"_radPower\"), __publicField(this, \"_freq\"), __publicField(this, \"_bias\"), __publicField(this, \"_distance\"), this._distance = e, this._pointArray = [], this._sampleFactor = 1, this._networkSize = i, this._distance.setWhitePoint(255 << networkBiasShift2, 255 << networkBiasShift2, 255 << networkBiasShift2, 255 << networkBiasShift2);\n  }\n  sample(e) {\n    this._pointArray = this._pointArray.concat(e.getPointArray());\n  }\n  *quantize() {\n    this._init(), yield* this._learn(), yield {\n      palette: this._buildPalette(),\n      progress: 100\n    };\n  }\n  _init() {\n    this._freq = [], this._bias = [], this._radPower = [], this._network = [];\n    for (let e = 0; e < this._networkSize; e++)\n      this._network[e] = new NeuronFloat((e << networkBiasShift2 + 8) / this._networkSize), this._freq[e] = _NeuQuantFloat._initialBias / this._networkSize, this._bias[e] = 0;\n  }\n  *_learn() {\n    let e = this._sampleFactor;\n    const i = this._pointArray.length;\n    i < _NeuQuantFloat._minpicturebytes && (e = 1);\n    const t = 30 + (e - 1) / 3, r = i / e;\n    let n = r / _NeuQuantFloat._nCycles | 0, a = _NeuQuantFloat._initAlpha, s = (this._networkSize >> 3) * _NeuQuantFloat._radiusBias, o = s >> _NeuQuantFloat._radiusBiasShift;\n    o <= 1 && (o = 0);\n    for (let f = 0; f < o; f++)\n      this._radPower[f] = a * ((o * o - f * f) * _NeuQuantFloat._radBias / (o * o));\n    let h;\n    i < _NeuQuantFloat._minpicturebytes ? h = 1 : i % _NeuQuantFloat._prime1 !== 0 ? h = _NeuQuantFloat._prime1 : i % _NeuQuantFloat._prime2 !== 0 ? h = _NeuQuantFloat._prime2 : i % _NeuQuantFloat._prime3 !== 0 ? h = _NeuQuantFloat._prime3 : h = _NeuQuantFloat._prime4;\n    const l = new ProgressTracker(r, 99);\n    for (let f = 0, b = 0; f < r; ) {\n      l.shouldNotify(f) && (yield {\n        progress: l.progress\n      });\n      const w = this._pointArray[b], g = w.b << networkBiasShift2, E = w.g << networkBiasShift2, k = w.r << networkBiasShift2, A = w.a << networkBiasShift2, T = this._contest(g, E, k, A);\n      if (this._alterSingle(a, T, g, E, k, A), o !== 0 && this._alterNeighbour(o, T, g, E, k, A), b += h, b >= i && (b -= i), f++, n === 0 && (n = 1), f % n === 0) {\n        a -= a / t, s -= s / _NeuQuantFloat._radiusDecrease, o = s >> _NeuQuantFloat._radiusBiasShift, o <= 1 && (o = 0);\n        for (let C = 0; C < o; C++)\n          this._radPower[C] = a * ((o * o - C * C) * _NeuQuantFloat._radBias / (o * o));\n      }\n    }\n  }\n  _buildPalette() {\n    const e = new Palette();\n    return this._network.forEach((i) => {\n      e.add(i.toPoint());\n    }), e.sort(), e;\n  }\n  _alterNeighbour(e, i, t, r, n, a) {\n    let s = i - e;\n    s < -1 && (s = -1);\n    let o = i + e;\n    o > this._networkSize && (o = this._networkSize);\n    let h = i + 1, l = i - 1, f = 1;\n    for (; h < o || l > s; ) {\n      const b = this._radPower[f++] / _NeuQuantFloat._alphaRadBias;\n      if (h < o) {\n        const w = this._network[h++];\n        w.subtract(b * (w.r - n), b * (w.g - r), b * (w.b - t), b * (w.a - a));\n      }\n      if (l > s) {\n        const w = this._network[l--];\n        w.subtract(b * (w.r - n), b * (w.g - r), b * (w.b - t), b * (w.a - a));\n      }\n    }\n  }\n  _alterSingle(e, i, t, r, n, a) {\n    e /= _NeuQuantFloat._initAlpha;\n    const s = this._network[i];\n    s.subtract(e * (s.r - n), e * (s.g - r), e * (s.b - t), e * (s.a - a));\n  }\n  _contest(e, i, t, r) {\n    const n = 1020 << networkBiasShift2;\n    let a = 2147483647, s = a, o = -1, h = o;\n    for (let l = 0; l < this._networkSize; l++) {\n      const f = this._network[l], b = this._distance.calculateNormalized(f, { r: t, g: i, b: e, a: r }) * n;\n      b < a && (a = b, o = l);\n      const w = b - (this._bias[l] >> _NeuQuantFloat._initialBiasShift - networkBiasShift2);\n      w < s && (s = w, h = l);\n      const g = this._freq[l] >> _NeuQuantFloat._betaShift;\n      this._freq[l] -= g, this._bias[l] += g << _NeuQuantFloat._gammaShift;\n    }\n    return this._freq[o] += _NeuQuantFloat._beta, this._bias[o] -= _NeuQuantFloat._betaGamma, h;\n  }\n}, NeuQuantFloat = _NeuQuantFloat;\n__publicField(NeuQuantFloat, \"_prime1\", 499);\n__publicField(NeuQuantFloat, \"_prime2\", 491);\n__publicField(NeuQuantFloat, \"_prime3\", 487);\n__publicField(NeuQuantFloat, \"_prime4\", 503);\n__publicField(NeuQuantFloat, \"_minpicturebytes\", _NeuQuantFloat._prime4);\n__publicField(NeuQuantFloat, \"_nCycles\", 100);\n__publicField(NeuQuantFloat, \"_initialBiasShift\", 16);\n__publicField(NeuQuantFloat, \"_initialBias\", 1 << _NeuQuantFloat._initialBiasShift);\n__publicField(NeuQuantFloat, \"_gammaShift\", 10);\n__publicField(NeuQuantFloat, \"_betaShift\", 10);\n__publicField(NeuQuantFloat, \"_beta\", _NeuQuantFloat._initialBias >> _NeuQuantFloat._betaShift);\n__publicField(NeuQuantFloat, \"_betaGamma\", _NeuQuantFloat._initialBias << _NeuQuantFloat._gammaShift - _NeuQuantFloat._betaShift);\n__publicField(NeuQuantFloat, \"_radiusBiasShift\", 6);\n__publicField(NeuQuantFloat, \"_radiusBias\", 1 << _NeuQuantFloat._radiusBiasShift);\n__publicField(NeuQuantFloat, \"_radiusDecrease\", 30);\n__publicField(NeuQuantFloat, \"_alphaBiasShift\", 10);\n__publicField(NeuQuantFloat, \"_initAlpha\", 1 << _NeuQuantFloat._alphaBiasShift);\n__publicField(NeuQuantFloat, \"_radBiasShift\", 8);\n__publicField(NeuQuantFloat, \"_radBias\", 1 << _NeuQuantFloat._radBiasShift);\n__publicField(NeuQuantFloat, \"_alphaRadBiasShift\", _NeuQuantFloat._alphaBiasShift + _NeuQuantFloat._radBiasShift);\n__publicField(NeuQuantFloat, \"_alphaRadBias\", 1 << _NeuQuantFloat._alphaRadBiasShift);\nvar _ColorHistogram = class {\n  constructor(e, i) {\n    __publicField(this, \"_method\"), __publicField(this, \"_hueStats\"), __publicField(this, \"_histogram\"), __publicField(this, \"_initColors\"), __publicField(this, \"_minHueCols\"), this._method = e, this._minHueCols = i << 2, this._initColors = i << 2, this._hueStats = new HueStatistics(_ColorHistogram._hueGroups, this._minHueCols), this._histogram = /* @__PURE__ */ Object.create(null);\n  }\n  sample(e) {\n    switch (this._method) {\n      case 1:\n        this._colorStats1D(e);\n        break;\n      case 2:\n        this._colorStats2D(e);\n        break;\n    }\n  }\n  getImportanceSortedColorsIDXI32() {\n    const e = stableSort(Object.keys(this._histogram), (t, r) => this._histogram[r] - this._histogram[t]);\n    if (e.length === 0)\n      return [];\n    let i;\n    switch (this._method) {\n      case 1:\n        const t = Math.min(e.length, this._initColors), r = e[t - 1], n = this._histogram[r];\n        i = e.slice(0, t);\n        let a = t;\n        const s = e.length;\n        for (; a < s && this._histogram[e[a]] === n; )\n          i.push(e[a++]);\n        this._hueStats.injectIntoArray(i);\n        break;\n      case 2:\n        i = e;\n        break;\n      default:\n        throw new Error(\"Incorrect method\");\n    }\n    return i.map((t) => +t);\n  }\n  _colorStats1D(e) {\n    const i = this._histogram, t = e.getPointArray(), r = t.length;\n    for (let n = 0; n < r; n++) {\n      const a = t[n].uint32;\n      this._hueStats.check(a), a in i ? i[a]++ : i[a] = 1;\n    }\n  }\n  _colorStats2D(e) {\n    const i = e.getWidth(), t = e.getHeight(), r = e.getPointArray(), n = _ColorHistogram._boxSize[0], a = _ColorHistogram._boxSize[1], s = n * a, o = this._makeBoxes(i, t, n, a), h = this._histogram;\n    o.forEach((l) => {\n      let f = Math.round(l.w * l.h / s) * _ColorHistogram._boxPixels;\n      f < 2 && (f = 2);\n      const b = {};\n      this._iterateBox(l, i, (w) => {\n        const g = r[w].uint32;\n        this._hueStats.check(g), g in h ? h[g]++ : g in b ? ++b[g] >= f && (h[g] = b[g]) : b[g] = 1;\n      });\n    }), this._hueStats.injectIntoDictionary(h);\n  }\n  _iterateBox(e, i, t) {\n    const r = e, n = r.y * i + r.x, a = (r.y + r.h - 1) * i + (r.x + r.w - 1), s = i - r.w + 1;\n    let o = 0, h = n;\n    do\n      t.call(this, h), h += ++o % r.w === 0 ? s : 1;\n    while (h <= a);\n  }\n  _makeBoxes(e, i, t, r) {\n    const n = e % t, a = i % r, s = e - n, o = i - a, h = [];\n    for (let l = 0; l < i; l += r)\n      for (let f = 0; f < e; f += t)\n        h.push({\n          x: f,\n          y: l,\n          w: f === s ? n : t,\n          h: l === o ? a : r\n        });\n    return h;\n  }\n}, ColorHistogram = _ColorHistogram;\n__publicField(ColorHistogram, \"_boxSize\", [64, 64]);\n__publicField(ColorHistogram, \"_boxPixels\", 2);\n__publicField(ColorHistogram, \"_hueGroups\", 10);\nvar RemovedColor = class {\n  constructor(e, i, t) {\n    __publicField(this, \"index\"), __publicField(this, \"color\"), __publicField(this, \"distance\"), this.index = e, this.color = i, this.distance = t;\n  }\n}, RGBQuant = class extends AbstractPaletteQuantizer {\n  constructor(e, i = 256, t = 2) {\n    super(), __publicField(this, \"_colors\"), __publicField(this, \"_initialDistance\"), __publicField(this, \"_distanceIncrement\"), __publicField(this, \"_histogram\"), __publicField(this, \"_distance\"), this._distance = e, this._colors = i, this._histogram = new ColorHistogram(t, i), this._initialDistance = 0.01, this._distanceIncrement = 5e-3;\n  }\n  sample(e) {\n    this._histogram.sample(e);\n  }\n  *quantize() {\n    const e = this._histogram.getImportanceSortedColorsIDXI32();\n    if (e.length === 0)\n      throw new Error(\"No colors in image\");\n    yield* this._buildPalette(e);\n  }\n  *_buildPalette(e) {\n    const i = new Palette(), t = i.getPointContainer().getPointArray(), r = new Array(e.length);\n    for (let f = 0; f < e.length; f++)\n      t.push(Point.createByUint32(e[f])), r[f] = 1;\n    const n = t.length, a = [];\n    let s = n, o = this._initialDistance;\n    const h = new ProgressTracker(s - this._colors, 99);\n    for (; s > this._colors; ) {\n      a.length = 0;\n      for (let f = 0; f < n; f++) {\n        if (h.shouldNotify(n - s) && (yield {\n          progress: h.progress\n        }), r[f] === 0)\n          continue;\n        const b = t[f];\n        for (let w = f + 1; w < n; w++) {\n          if (r[w] === 0)\n            continue;\n          const g = t[w], E = this._distance.calculateNormalized(b, g);\n          E < o && (a.push(new RemovedColor(w, g, E)), r[w] = 0, s--);\n        }\n      }\n      o += s > this._colors * 3 ? this._initialDistance : this._distanceIncrement;\n    }\n    if (s < this._colors) {\n      stableSort(a, (b, w) => w.distance - b.distance);\n      let f = 0;\n      for (; s < this._colors && f < a.length; ) {\n        const b = a[f];\n        r[b.index] = 1, s++, f++;\n      }\n    }\n    let l = t.length;\n    for (let f = l - 1; f >= 0; f--)\n      r[f] === 0 && (f !== l - 1 && (t[f] = t[l - 1]), --l);\n    t.length = l, i.sort(), yield {\n      palette: i,\n      progress: 100\n    };\n  }\n};\nfunction createArray1D(e) {\n  const i = [];\n  for (let t = 0; t < e; t++)\n    i[t] = 0;\n  return i;\n}\nfunction createArray4D(e, i, t, r) {\n  const n = new Array(e);\n  for (let a = 0; a < e; a++) {\n    n[a] = new Array(i);\n    for (let s = 0; s < i; s++) {\n      n[a][s] = new Array(t);\n      for (let o = 0; o < t; o++) {\n        n[a][s][o] = new Array(r);\n        for (let h = 0; h < r; h++)\n          n[a][s][o][h] = 0;\n      }\n    }\n  }\n  return n;\n}\nfunction createArray3D(e, i, t) {\n  const r = new Array(e);\n  for (let n = 0; n < e; n++) {\n    r[n] = new Array(i);\n    for (let a = 0; a < i; a++) {\n      r[n][a] = new Array(t);\n      for (let s = 0; s < t; s++)\n        r[n][a][s] = 0;\n    }\n  }\n  return r;\n}\nfunction fillArray3D(e, i, t, r, n) {\n  for (let a = 0; a < i; a++) {\n    e[a] = [];\n    for (let s = 0; s < t; s++) {\n      e[a][s] = [];\n      for (let o = 0; o < r; o++)\n        e[a][s][o] = n;\n    }\n  }\n}\nfunction fillArray1D(e, i, t) {\n  for (let r = 0; r < i; r++)\n    e[r] = t;\n}\nvar WuColorCube = class {\n  constructor() {\n    __publicField(this, \"redMinimum\"), __publicField(this, \"redMaximum\"), __publicField(this, \"greenMinimum\"), __publicField(this, \"greenMaximum\"), __publicField(this, \"blueMinimum\"), __publicField(this, \"blueMaximum\"), __publicField(this, \"volume\"), __publicField(this, \"alphaMinimum\"), __publicField(this, \"alphaMaximum\");\n  }\n}, _WuQuant = class extends AbstractPaletteQuantizer {\n  constructor(e, i = 256, t = 5) {\n    super(), __publicField(this, \"_reds\"), __publicField(this, \"_greens\"), __publicField(this, \"_blues\"), __publicField(this, \"_alphas\"), __publicField(this, \"_sums\"), __publicField(this, \"_weights\"), __publicField(this, \"_momentsRed\"), __publicField(this, \"_momentsGreen\"), __publicField(this, \"_momentsBlue\"), __publicField(this, \"_momentsAlpha\"), __publicField(this, \"_moments\"), __publicField(this, \"_table\"), __publicField(this, \"_pixels\"), __publicField(this, \"_cubes\"), __publicField(this, \"_colors\"), __publicField(this, \"_significantBitsPerChannel\"), __publicField(this, \"_maxSideIndex\"), __publicField(this, \"_alphaMaxSideIndex\"), __publicField(this, \"_sideSize\"), __publicField(this, \"_alphaSideSize\"), __publicField(this, \"_distance\"), this._distance = e, this._setQuality(t), this._initialize(i);\n  }\n  sample(e) {\n    const i = e.getPointArray();\n    for (let t = 0, r = i.length; t < r; t++)\n      this._addColor(i[t]);\n    this._pixels = this._pixels.concat(i);\n  }\n  *quantize() {\n    yield* this._preparePalette();\n    const e = new Palette();\n    for (let i = 0; i < this._colors; i++)\n      if (this._sums[i] > 0) {\n        const t = this._sums[i], r = this._reds[i] / t, n = this._greens[i] / t, a = this._blues[i] / t, s = this._alphas[i] / t, o = Point.createByRGBA(r | 0, n | 0, a | 0, s | 0);\n        e.add(o);\n      }\n    e.sort(), yield {\n      palette: e,\n      progress: 100\n    };\n  }\n  *_preparePalette() {\n    yield* this._calculateMoments();\n    let e = 0;\n    const i = createArray1D(this._colors);\n    for (let s = 1; s < this._colors; ++s) {\n      this._cut(this._cubes[e], this._cubes[s]) ? (i[e] = this._cubes[e].volume > 1 ? this._calculateVariance(this._cubes[e]) : 0, i[s] = this._cubes[s].volume > 1 ? this._calculateVariance(this._cubes[s]) : 0) : (i[e] = 0, s--), e = 0;\n      let o = i[0];\n      for (let h = 1; h <= s; ++h)\n        i[h] > o && (o = i[h], e = h);\n      if (o <= 0) {\n        this._colors = s + 1;\n        break;\n      }\n    }\n    const t = [], r = [], n = [], a = [];\n    for (let s = 0; s < this._colors; ++s) {\n      const o = _WuQuant._volume(this._cubes[s], this._weights);\n      o > 0 ? (t[s] = _WuQuant._volume(this._cubes[s], this._momentsRed) / o | 0, r[s] = _WuQuant._volume(this._cubes[s], this._momentsGreen) / o | 0, n[s] = _WuQuant._volume(this._cubes[s], this._momentsBlue) / o | 0, a[s] = _WuQuant._volume(this._cubes[s], this._momentsAlpha) / o | 0) : (t[s] = 0, r[s] = 0, n[s] = 0, a[s] = 0);\n    }\n    this._reds = createArray1D(this._colors + 1), this._greens = createArray1D(this._colors + 1), this._blues = createArray1D(this._colors + 1), this._alphas = createArray1D(this._colors + 1), this._sums = createArray1D(this._colors + 1);\n    for (let s = 0, o = this._pixels.length; s < o; s++) {\n      const h = this._pixels[s];\n      let f = -1, b = Number.MAX_VALUE;\n      for (let w = 0; w < this._colors; w++) {\n        const g = t[w], E = r[w], k = n[w], A = a[w], T = this._distance.calculateRaw(g, E, k, A, h.r, h.g, h.b, h.a);\n        T < b && (b = T, f = w);\n      }\n      this._reds[f] += h.r, this._greens[f] += h.g, this._blues[f] += h.b, this._alphas[f] += h.a, this._sums[f]++;\n    }\n  }\n  _addColor(e) {\n    const i = 8 - this._significantBitsPerChannel, t = (e.r >> i) + 1, r = (e.g >> i) + 1, n = (e.b >> i) + 1, a = (e.a >> i) + 1;\n    this._weights[a][t][r][n]++, this._momentsRed[a][t][r][n] += e.r, this._momentsGreen[a][t][r][n] += e.g, this._momentsBlue[a][t][r][n] += e.b, this._momentsAlpha[a][t][r][n] += e.a, this._moments[a][t][r][n] += this._table[e.r] + this._table[e.g] + this._table[e.b] + this._table[e.a];\n  }\n  *_calculateMoments() {\n    const e = [], i = [], t = [], r = [], n = [], a = [], s = createArray3D(this._sideSize, this._sideSize, this._sideSize), o = createArray3D(this._sideSize, this._sideSize, this._sideSize), h = createArray3D(this._sideSize, this._sideSize, this._sideSize), l = createArray3D(this._sideSize, this._sideSize, this._sideSize), f = createArray3D(this._sideSize, this._sideSize, this._sideSize), b = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    let w = 0;\n    const g = new ProgressTracker(this._alphaMaxSideIndex * this._maxSideIndex, 99);\n    for (let E = 1; E <= this._alphaMaxSideIndex; ++E) {\n      fillArray3D(s, this._sideSize, this._sideSize, this._sideSize, 0), fillArray3D(o, this._sideSize, this._sideSize, this._sideSize, 0), fillArray3D(h, this._sideSize, this._sideSize, this._sideSize, 0), fillArray3D(l, this._sideSize, this._sideSize, this._sideSize, 0), fillArray3D(f, this._sideSize, this._sideSize, this._sideSize, 0), fillArray3D(b, this._sideSize, this._sideSize, this._sideSize, 0);\n      for (let k = 1; k <= this._maxSideIndex; ++k, ++w) {\n        g.shouldNotify(w) && (yield {\n          progress: g.progress\n        }), fillArray1D(e, this._sideSize, 0), fillArray1D(i, this._sideSize, 0), fillArray1D(t, this._sideSize, 0), fillArray1D(r, this._sideSize, 0), fillArray1D(n, this._sideSize, 0), fillArray1D(a, this._sideSize, 0);\n        for (let A = 1; A <= this._maxSideIndex; ++A) {\n          let T = 0, C = 0, D = 0, $ = 0, P = 0, z = 0;\n          for (let B = 1; B <= this._maxSideIndex; ++B)\n            T += this._weights[E][k][A][B], C += this._momentsRed[E][k][A][B], D += this._momentsGreen[E][k][A][B], $ += this._momentsBlue[E][k][A][B], P += this._momentsAlpha[E][k][A][B], z += this._moments[E][k][A][B], e[B] += T, i[B] += C, t[B] += D, r[B] += $, n[B] += P, a[B] += z, s[k][A][B] = s[k - 1][A][B] + e[B], o[k][A][B] = o[k - 1][A][B] + i[B], h[k][A][B] = h[k - 1][A][B] + t[B], l[k][A][B] = l[k - 1][A][B] + r[B], f[k][A][B] = f[k - 1][A][B] + n[B], b[k][A][B] = b[k - 1][A][B] + a[B], this._weights[E][k][A][B] = this._weights[E - 1][k][A][B] + s[k][A][B], this._momentsRed[E][k][A][B] = this._momentsRed[E - 1][k][A][B] + o[k][A][B], this._momentsGreen[E][k][A][B] = this._momentsGreen[E - 1][k][A][B] + h[k][A][B], this._momentsBlue[E][k][A][B] = this._momentsBlue[E - 1][k][A][B] + l[k][A][B], this._momentsAlpha[E][k][A][B] = this._momentsAlpha[E - 1][k][A][B] + f[k][A][B], this._moments[E][k][A][B] = this._moments[E - 1][k][A][B] + b[k][A][B];\n        }\n      }\n    }\n  }\n  static _volumeFloat(e, i) {\n    return i[e.alphaMaximum][e.redMaximum][e.greenMaximum][e.blueMaximum] - i[e.alphaMaximum][e.redMaximum][e.greenMinimum][e.blueMaximum] - i[e.alphaMaximum][e.redMinimum][e.greenMaximum][e.blueMaximum] + i[e.alphaMaximum][e.redMinimum][e.greenMinimum][e.blueMaximum] - i[e.alphaMinimum][e.redMaximum][e.greenMaximum][e.blueMaximum] + i[e.alphaMinimum][e.redMaximum][e.greenMinimum][e.blueMaximum] + i[e.alphaMinimum][e.redMinimum][e.greenMaximum][e.blueMaximum] - i[e.alphaMinimum][e.redMinimum][e.greenMinimum][e.blueMaximum] - (i[e.alphaMaximum][e.redMaximum][e.greenMaximum][e.blueMinimum] - i[e.alphaMinimum][e.redMaximum][e.greenMaximum][e.blueMinimum] - i[e.alphaMaximum][e.redMaximum][e.greenMinimum][e.blueMinimum] + i[e.alphaMinimum][e.redMaximum][e.greenMinimum][e.blueMinimum] - i[e.alphaMaximum][e.redMinimum][e.greenMaximum][e.blueMinimum] + i[e.alphaMinimum][e.redMinimum][e.greenMaximum][e.blueMinimum] + i[e.alphaMaximum][e.redMinimum][e.greenMinimum][e.blueMinimum] - i[e.alphaMinimum][e.redMinimum][e.greenMinimum][e.blueMinimum]);\n  }\n  static _volume(e, i) {\n    return _WuQuant._volumeFloat(e, i) | 0;\n  }\n  static _top(e, i, t, r) {\n    let n;\n    switch (i) {\n      case _WuQuant._alpha:\n        n = r[t][e.redMaximum][e.greenMaximum][e.blueMaximum] - r[t][e.redMaximum][e.greenMinimum][e.blueMaximum] - r[t][e.redMinimum][e.greenMaximum][e.blueMaximum] + r[t][e.redMinimum][e.greenMinimum][e.blueMaximum] - (r[t][e.redMaximum][e.greenMaximum][e.blueMinimum] - r[t][e.redMaximum][e.greenMinimum][e.blueMinimum] - r[t][e.redMinimum][e.greenMaximum][e.blueMinimum] + r[t][e.redMinimum][e.greenMinimum][e.blueMinimum]);\n        break;\n      case _WuQuant._red:\n        n = r[e.alphaMaximum][t][e.greenMaximum][e.blueMaximum] - r[e.alphaMaximum][t][e.greenMinimum][e.blueMaximum] - r[e.alphaMinimum][t][e.greenMaximum][e.blueMaximum] + r[e.alphaMinimum][t][e.greenMinimum][e.blueMaximum] - (r[e.alphaMaximum][t][e.greenMaximum][e.blueMinimum] - r[e.alphaMaximum][t][e.greenMinimum][e.blueMinimum] - r[e.alphaMinimum][t][e.greenMaximum][e.blueMinimum] + r[e.alphaMinimum][t][e.greenMinimum][e.blueMinimum]);\n        break;\n      case _WuQuant._green:\n        n = r[e.alphaMaximum][e.redMaximum][t][e.blueMaximum] - r[e.alphaMaximum][e.redMinimum][t][e.blueMaximum] - r[e.alphaMinimum][e.redMaximum][t][e.blueMaximum] + r[e.alphaMinimum][e.redMinimum][t][e.blueMaximum] - (r[e.alphaMaximum][e.redMaximum][t][e.blueMinimum] - r[e.alphaMaximum][e.redMinimum][t][e.blueMinimum] - r[e.alphaMinimum][e.redMaximum][t][e.blueMinimum] + r[e.alphaMinimum][e.redMinimum][t][e.blueMinimum]);\n        break;\n      case _WuQuant._blue:\n        n = r[e.alphaMaximum][e.redMaximum][e.greenMaximum][t] - r[e.alphaMaximum][e.redMaximum][e.greenMinimum][t] - r[e.alphaMaximum][e.redMinimum][e.greenMaximum][t] + r[e.alphaMaximum][e.redMinimum][e.greenMinimum][t] - (r[e.alphaMinimum][e.redMaximum][e.greenMaximum][t] - r[e.alphaMinimum][e.redMaximum][e.greenMinimum][t] - r[e.alphaMinimum][e.redMinimum][e.greenMaximum][t] + r[e.alphaMinimum][e.redMinimum][e.greenMinimum][t]);\n        break;\n      default:\n        throw new Error(\"impossible\");\n    }\n    return n | 0;\n  }\n  static _bottom(e, i, t) {\n    switch (i) {\n      case _WuQuant._alpha:\n        return -t[e.alphaMinimum][e.redMaximum][e.greenMaximum][e.blueMaximum] + t[e.alphaMinimum][e.redMaximum][e.greenMinimum][e.blueMaximum] + t[e.alphaMinimum][e.redMinimum][e.greenMaximum][e.blueMaximum] - t[e.alphaMinimum][e.redMinimum][e.greenMinimum][e.blueMaximum] - (-t[e.alphaMinimum][e.redMaximum][e.greenMaximum][e.blueMinimum] + t[e.alphaMinimum][e.redMaximum][e.greenMinimum][e.blueMinimum] + t[e.alphaMinimum][e.redMinimum][e.greenMaximum][e.blueMinimum] - t[e.alphaMinimum][e.redMinimum][e.greenMinimum][e.blueMinimum]);\n      case _WuQuant._red:\n        return -t[e.alphaMaximum][e.redMinimum][e.greenMaximum][e.blueMaximum] + t[e.alphaMaximum][e.redMinimum][e.greenMinimum][e.blueMaximum] + t[e.alphaMinimum][e.redMinimum][e.greenMaximum][e.blueMaximum] - t[e.alphaMinimum][e.redMinimum][e.greenMinimum][e.blueMaximum] - (-t[e.alphaMaximum][e.redMinimum][e.greenMaximum][e.blueMinimum] + t[e.alphaMaximum][e.redMinimum][e.greenMinimum][e.blueMinimum] + t[e.alphaMinimum][e.redMinimum][e.greenMaximum][e.blueMinimum] - t[e.alphaMinimum][e.redMinimum][e.greenMinimum][e.blueMinimum]);\n      case _WuQuant._green:\n        return -t[e.alphaMaximum][e.redMaximum][e.greenMinimum][e.blueMaximum] + t[e.alphaMaximum][e.redMinimum][e.greenMinimum][e.blueMaximum] + t[e.alphaMinimum][e.redMaximum][e.greenMinimum][e.blueMaximum] - t[e.alphaMinimum][e.redMinimum][e.greenMinimum][e.blueMaximum] - (-t[e.alphaMaximum][e.redMaximum][e.greenMinimum][e.blueMinimum] + t[e.alphaMaximum][e.redMinimum][e.greenMinimum][e.blueMinimum] + t[e.alphaMinimum][e.redMaximum][e.greenMinimum][e.blueMinimum] - t[e.alphaMinimum][e.redMinimum][e.greenMinimum][e.blueMinimum]);\n      case _WuQuant._blue:\n        return -t[e.alphaMaximum][e.redMaximum][e.greenMaximum][e.blueMinimum] + t[e.alphaMaximum][e.redMaximum][e.greenMinimum][e.blueMinimum] + t[e.alphaMaximum][e.redMinimum][e.greenMaximum][e.blueMinimum] - t[e.alphaMaximum][e.redMinimum][e.greenMinimum][e.blueMinimum] - (-t[e.alphaMinimum][e.redMaximum][e.greenMaximum][e.blueMinimum] + t[e.alphaMinimum][e.redMaximum][e.greenMinimum][e.blueMinimum] + t[e.alphaMinimum][e.redMinimum][e.greenMaximum][e.blueMinimum] - t[e.alphaMinimum][e.redMinimum][e.greenMinimum][e.blueMinimum]);\n      default:\n        return 0;\n    }\n  }\n  _calculateVariance(e) {\n    const i = _WuQuant._volume(e, this._momentsRed), t = _WuQuant._volume(e, this._momentsGreen), r = _WuQuant._volume(e, this._momentsBlue), n = _WuQuant._volume(e, this._momentsAlpha), a = _WuQuant._volumeFloat(e, this._moments), s = _WuQuant._volume(e, this._weights), o = i * i + t * t + r * r + n * n;\n    return a - o / s;\n  }\n  _maximize(e, i, t, r, n, a, s, o, h) {\n    const l = _WuQuant._bottom(e, i, this._momentsRed) | 0, f = _WuQuant._bottom(e, i, this._momentsGreen) | 0, b = _WuQuant._bottom(e, i, this._momentsBlue) | 0, w = _WuQuant._bottom(e, i, this._momentsAlpha) | 0, g = _WuQuant._bottom(e, i, this._weights) | 0;\n    let E = 0, k = -1;\n    for (let A = t; A < r; ++A) {\n      let T = l + _WuQuant._top(e, i, A, this._momentsRed), C = f + _WuQuant._top(e, i, A, this._momentsGreen), D = b + _WuQuant._top(e, i, A, this._momentsBlue), $ = w + _WuQuant._top(e, i, A, this._momentsAlpha), P = g + _WuQuant._top(e, i, A, this._weights);\n      if (P !== 0) {\n        let z = T * T + C * C + D * D + $ * $, B = z / P;\n        T = n - T, C = a - C, D = s - D, $ = o - $, P = h - P, P !== 0 && (z = T * T + C * C + D * D + $ * $, B += z / P, B > E && (E = B, k = A));\n      }\n    }\n    return { max: E, position: k };\n  }\n  _cut(e, i) {\n    let t;\n    const r = _WuQuant._volume(e, this._momentsRed), n = _WuQuant._volume(e, this._momentsGreen), a = _WuQuant._volume(e, this._momentsBlue), s = _WuQuant._volume(e, this._momentsAlpha), o = _WuQuant._volume(e, this._weights), h = this._maximize(e, _WuQuant._red, e.redMinimum + 1, e.redMaximum, r, n, a, s, o), l = this._maximize(e, _WuQuant._green, e.greenMinimum + 1, e.greenMaximum, r, n, a, s, o), f = this._maximize(e, _WuQuant._blue, e.blueMinimum + 1, e.blueMaximum, r, n, a, s, o), b = this._maximize(e, _WuQuant._alpha, e.alphaMinimum + 1, e.alphaMaximum, r, n, a, s, o);\n    if (b.max >= h.max && b.max >= l.max && b.max >= f.max) {\n      if (t = _WuQuant._alpha, b.position < 0)\n        return !1;\n    } else h.max >= b.max && h.max >= l.max && h.max >= f.max ? t = _WuQuant._red : l.max >= b.max && l.max >= h.max && l.max >= f.max ? t = _WuQuant._green : t = _WuQuant._blue;\n    switch (i.redMaximum = e.redMaximum, i.greenMaximum = e.greenMaximum, i.blueMaximum = e.blueMaximum, i.alphaMaximum = e.alphaMaximum, t) {\n      case _WuQuant._red:\n        i.redMinimum = e.redMaximum = h.position, i.greenMinimum = e.greenMinimum, i.blueMinimum = e.blueMinimum, i.alphaMinimum = e.alphaMinimum;\n        break;\n      case _WuQuant._green:\n        i.greenMinimum = e.greenMaximum = l.position, i.redMinimum = e.redMinimum, i.blueMinimum = e.blueMinimum, i.alphaMinimum = e.alphaMinimum;\n        break;\n      case _WuQuant._blue:\n        i.blueMinimum = e.blueMaximum = f.position, i.redMinimum = e.redMinimum, i.greenMinimum = e.greenMinimum, i.alphaMinimum = e.alphaMinimum;\n        break;\n      case _WuQuant._alpha:\n        i.alphaMinimum = e.alphaMaximum = b.position, i.blueMinimum = e.blueMinimum, i.redMinimum = e.redMinimum, i.greenMinimum = e.greenMinimum;\n        break;\n    }\n    return e.volume = (e.redMaximum - e.redMinimum) * (e.greenMaximum - e.greenMinimum) * (e.blueMaximum - e.blueMinimum) * (e.alphaMaximum - e.alphaMinimum), i.volume = (i.redMaximum - i.redMinimum) * (i.greenMaximum - i.greenMinimum) * (i.blueMaximum - i.blueMinimum) * (i.alphaMaximum - i.alphaMinimum), !0;\n  }\n  _initialize(e) {\n    this._colors = e, this._cubes = [];\n    for (let i = 0; i < e; i++)\n      this._cubes[i] = new WuColorCube();\n    this._cubes[0].redMinimum = 0, this._cubes[0].greenMinimum = 0, this._cubes[0].blueMinimum = 0, this._cubes[0].alphaMinimum = 0, this._cubes[0].redMaximum = this._maxSideIndex, this._cubes[0].greenMaximum = this._maxSideIndex, this._cubes[0].blueMaximum = this._maxSideIndex, this._cubes[0].alphaMaximum = this._alphaMaxSideIndex, this._weights = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize), this._momentsRed = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize), this._momentsGreen = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize), this._momentsBlue = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize), this._momentsAlpha = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize), this._moments = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize), this._table = [];\n    for (let i = 0; i < 256; ++i)\n      this._table[i] = i * i;\n    this._pixels = [];\n  }\n  _setQuality(e = 5) {\n    this._significantBitsPerChannel = e, this._maxSideIndex = 1 << this._significantBitsPerChannel, this._alphaMaxSideIndex = this._maxSideIndex, this._sideSize = this._maxSideIndex + 1, this._alphaSideSize = this._alphaMaxSideIndex + 1;\n  }\n}, WuQuant = _WuQuant;\n__publicField(WuQuant, \"_alpha\", 3);\n__publicField(WuQuant, \"_red\", 2);\n__publicField(WuQuant, \"_green\", 1);\n__publicField(WuQuant, \"_blue\", 0);\nvar image_exports = {};\n__export(image_exports, {\n  AbstractImageQuantizer: () => AbstractImageQuantizer,\n  ErrorDiffusionArray: () => ErrorDiffusionArray,\n  ErrorDiffusionArrayKernel: () => ErrorDiffusionArrayKernel,\n  ErrorDiffusionRiemersma: () => ErrorDiffusionRiemersma,\n  NearestColor: () => NearestColor\n});\nvar AbstractImageQuantizer = class {\n  quantizeSync(e, i) {\n    for (const t of this.quantize(e, i))\n      if (t.pointContainer)\n        return t.pointContainer;\n    throw new Error(\"unreachable\");\n  }\n}, NearestColor = class extends AbstractImageQuantizer {\n  constructor(e) {\n    super(), __publicField(this, \"_distance\"), this._distance = e;\n  }\n  *quantize(e, i) {\n    const t = e.getPointArray(), r = e.getWidth(), n = e.getHeight(), a = new ProgressTracker(n, 99);\n    for (let s = 0; s < n; s++) {\n      a.shouldNotify(s) && (yield {\n        progress: a.progress\n      });\n      for (let o = 0, h = s * r; o < r; o++, h++) {\n        const l = t[h];\n        l.from(i.getNearestColor(this._distance, l));\n      }\n    }\n    yield {\n      pointContainer: e,\n      progress: 100\n    };\n  }\n}, ErrorDiffusionArrayKernel = /* @__PURE__ */ ((e) => (e[e.FloydSteinberg = 0] = \"FloydSteinberg\", e[e.FalseFloydSteinberg = 1] = \"FalseFloydSteinberg\", e[e.Stucki = 2] = \"Stucki\", e[e.Atkinson = 3] = \"Atkinson\", e[e.Jarvis = 4] = \"Jarvis\", e[e.Burkes = 5] = \"Burkes\", e[e.Sierra = 6] = \"Sierra\", e[e.TwoSierra = 7] = \"TwoSierra\", e[e.SierraLite = 8] = \"SierraLite\", e))(ErrorDiffusionArrayKernel || {}), ErrorDiffusionArray = class extends AbstractImageQuantizer {\n  constructor(e, i, t = !0, r = 0, n = !1) {\n    super(), __publicField(this, \"_minColorDistance\"), __publicField(this, \"_serpentine\"), __publicField(this, \"_kernel\"), __publicField(this, \"_calculateErrorLikeGIMP\"), __publicField(this, \"_distance\"), this._setKernel(i), this._distance = e, this._minColorDistance = r, this._serpentine = t, this._calculateErrorLikeGIMP = n;\n  }\n  *quantize(e, i) {\n    const t = e.getPointArray(), r = new Point(), n = e.getWidth(), a = e.getHeight(), s = [];\n    let o = 1, h = 1;\n    for (const f of this._kernel) {\n      const b = f[2] + 1;\n      h < b && (h = b);\n    }\n    for (let f = 0; f < h; f++)\n      this._fillErrorLine(s[f] = [], n);\n    const l = new ProgressTracker(a, 99);\n    for (let f = 0; f < a; f++) {\n      l.shouldNotify(f) && (yield {\n        progress: l.progress\n      }), this._serpentine && (o *= -1);\n      const b = f * n, w = o === 1 ? 0 : n - 1, g = o === 1 ? n : -1;\n      this._fillErrorLine(s[0], n), s.push(s.shift());\n      const E = s[0];\n      for (let k = w, A = b + w; k !== g; k += o, A += o) {\n        const T = t[A], C = E[k];\n        r.from(T);\n        const D = Point.createByRGBA(inRange0to255Rounded(T.r + C[0]), inRange0to255Rounded(T.g + C[1]), inRange0to255Rounded(T.b + C[2]), inRange0to255Rounded(T.a + C[3])), $ = i.getNearestColor(this._distance, D);\n        if (T.from($), this._minColorDistance && this._distance.calculateNormalized(r, $) < this._minColorDistance)\n          continue;\n        let P, z, B, F;\n        this._calculateErrorLikeGIMP ? (P = D.r - $.r, z = D.g - $.g, B = D.b - $.b, F = D.a - $.a) : (P = r.r - $.r, z = r.g - $.g, B = r.b - $.b, F = r.a - $.a);\n        const O = o === 1 ? 0 : this._kernel.length - 1, N = o === 1 ? this._kernel.length : -1;\n        for (let G = O; G !== N; G += o) {\n          const V = this._kernel[G][1] * o, J = this._kernel[G][2];\n          if (V + k >= 0 && V + k < n && J + f >= 0 && J + f < a) {\n            const Q = this._kernel[G][0], W = s[J][V + k];\n            W[0] += P * Q, W[1] += z * Q, W[2] += B * Q, W[3] += F * Q;\n          }\n        }\n      }\n    }\n    yield {\n      pointContainer: e,\n      progress: 100\n    };\n  }\n  _fillErrorLine(e, i) {\n    e.length > i && (e.length = i);\n    const t = e.length;\n    for (let r = 0; r < t; r++) {\n      const n = e[r];\n      n[0] = n[1] = n[2] = n[3] = 0;\n    }\n    for (let r = t; r < i; r++)\n      e[r] = [0, 0, 0, 0];\n  }\n  _setKernel(e) {\n    switch (e) {\n      case 0:\n        this._kernel = [\n          [7 / 16, 1, 0],\n          [3 / 16, -1, 1],\n          [5 / 16, 0, 1],\n          [1 / 16, 1, 1]\n        ];\n        break;\n      case 1:\n        this._kernel = [\n          [3 / 8, 1, 0],\n          [3 / 8, 0, 1],\n          [2 / 8, 1, 1]\n        ];\n        break;\n      case 2:\n        this._kernel = [\n          [8 / 42, 1, 0],\n          [4 / 42, 2, 0],\n          [2 / 42, -2, 1],\n          [4 / 42, -1, 1],\n          [8 / 42, 0, 1],\n          [4 / 42, 1, 1],\n          [2 / 42, 2, 1],\n          [1 / 42, -2, 2],\n          [2 / 42, -1, 2],\n          [4 / 42, 0, 2],\n          [2 / 42, 1, 2],\n          [1 / 42, 2, 2]\n        ];\n        break;\n      case 3:\n        this._kernel = [\n          [1 / 8, 1, 0],\n          [1 / 8, 2, 0],\n          [1 / 8, -1, 1],\n          [1 / 8, 0, 1],\n          [1 / 8, 1, 1],\n          [1 / 8, 0, 2]\n        ];\n        break;\n      case 4:\n        this._kernel = [\n          [7 / 48, 1, 0],\n          [5 / 48, 2, 0],\n          [3 / 48, -2, 1],\n          [5 / 48, -1, 1],\n          [7 / 48, 0, 1],\n          [5 / 48, 1, 1],\n          [3 / 48, 2, 1],\n          [1 / 48, -2, 2],\n          [3 / 48, -1, 2],\n          [5 / 48, 0, 2],\n          [3 / 48, 1, 2],\n          [1 / 48, 2, 2]\n        ];\n        break;\n      case 5:\n        this._kernel = [\n          [8 / 32, 1, 0],\n          [4 / 32, 2, 0],\n          [2 / 32, -2, 1],\n          [4 / 32, -1, 1],\n          [8 / 32, 0, 1],\n          [4 / 32, 1, 1],\n          [2 / 32, 2, 1]\n        ];\n        break;\n      case 6:\n        this._kernel = [\n          [5 / 32, 1, 0],\n          [3 / 32, 2, 0],\n          [2 / 32, -2, 1],\n          [4 / 32, -1, 1],\n          [5 / 32, 0, 1],\n          [4 / 32, 1, 1],\n          [2 / 32, 2, 1],\n          [2 / 32, -1, 2],\n          [3 / 32, 0, 2],\n          [2 / 32, 1, 2]\n        ];\n        break;\n      case 7:\n        this._kernel = [\n          [4 / 16, 1, 0],\n          [3 / 16, 2, 0],\n          [1 / 16, -2, 1],\n          [2 / 16, -1, 1],\n          [3 / 16, 0, 1],\n          [2 / 16, 1, 1],\n          [1 / 16, 2, 1]\n        ];\n        break;\n      case 8:\n        this._kernel = [\n          [2 / 4, 1, 0],\n          [1 / 4, -1, 1],\n          [1 / 4, 0, 1]\n        ];\n        break;\n      default:\n        throw new Error(`ErrorDiffusionArray: unknown kernel = ${e}`);\n    }\n  }\n};\nfunction* hilbertCurve(e, i, t) {\n  const r = Math.max(e, i), n = Math.floor(Math.log(r) / Math.log(2) + 1), a = new ProgressTracker(e * i, 99), s = {\n    width: e,\n    height: i,\n    level: n,\n    callback: t,\n    tracker: a,\n    index: 0,\n    x: 0,\n    y: 0\n  };\n  yield* walkHilbert(\n    s,\n    1\n    /* UP */\n  ), visit(\n    s,\n    0\n    /* NONE */\n  );\n}\nfunction* walkHilbert(e, i) {\n  if (!(e.level < 1)) {\n    switch (e.tracker.shouldNotify(e.index) && (yield { progress: e.tracker.progress }), e.level--, i) {\n      case 2:\n        yield* walkHilbert(\n          e,\n          1\n          /* UP */\n        ), visit(\n          e,\n          3\n          /* RIGHT */\n        ), yield* walkHilbert(\n          e,\n          2\n          /* LEFT */\n        ), visit(\n          e,\n          4\n          /* DOWN */\n        ), yield* walkHilbert(\n          e,\n          2\n          /* LEFT */\n        ), visit(\n          e,\n          2\n          /* LEFT */\n        ), yield* walkHilbert(\n          e,\n          4\n          /* DOWN */\n        );\n        break;\n      case 3:\n        yield* walkHilbert(\n          e,\n          4\n          /* DOWN */\n        ), visit(\n          e,\n          2\n          /* LEFT */\n        ), yield* walkHilbert(\n          e,\n          3\n          /* RIGHT */\n        ), visit(\n          e,\n          1\n          /* UP */\n        ), yield* walkHilbert(\n          e,\n          3\n          /* RIGHT */\n        ), visit(\n          e,\n          3\n          /* RIGHT */\n        ), yield* walkHilbert(\n          e,\n          1\n          /* UP */\n        );\n        break;\n      case 1:\n        yield* walkHilbert(\n          e,\n          2\n          /* LEFT */\n        ), visit(\n          e,\n          4\n          /* DOWN */\n        ), yield* walkHilbert(\n          e,\n          1\n          /* UP */\n        ), visit(\n          e,\n          3\n          /* RIGHT */\n        ), yield* walkHilbert(\n          e,\n          1\n          /* UP */\n        ), visit(\n          e,\n          1\n          /* UP */\n        ), yield* walkHilbert(\n          e,\n          3\n          /* RIGHT */\n        );\n        break;\n      case 4:\n        yield* walkHilbert(\n          e,\n          3\n          /* RIGHT */\n        ), visit(\n          e,\n          1\n          /* UP */\n        ), yield* walkHilbert(\n          e,\n          4\n          /* DOWN */\n        ), visit(\n          e,\n          2\n          /* LEFT */\n        ), yield* walkHilbert(\n          e,\n          4\n          /* DOWN */\n        ), visit(\n          e,\n          4\n          /* DOWN */\n        ), yield* walkHilbert(\n          e,\n          2\n          /* LEFT */\n        );\n        break;\n    }\n    e.level++;\n  }\n}\nfunction visit(e, i) {\n  switch (e.x >= 0 && e.x < e.width && e.y >= 0 && e.y < e.height && (e.callback(e.x, e.y), e.index++), i) {\n    case 2:\n      e.x--;\n      break;\n    case 3:\n      e.x++;\n      break;\n    case 1:\n      e.y--;\n      break;\n    case 4:\n      e.y++;\n      break;\n  }\n}\nvar ErrorDiffusionRiemersma = class extends AbstractImageQuantizer {\n  constructor(e, i = 16, t = 1) {\n    super(), __publicField(this, \"_distance\"), __publicField(this, \"_weights\"), __publicField(this, \"_errorQueueSize\"), this._distance = e, this._errorQueueSize = i, this._weights = ErrorDiffusionRiemersma._createWeights(t, i);\n  }\n  *quantize(e, i) {\n    const t = e.getPointArray(), r = e.getWidth(), n = e.getHeight(), a = [];\n    let s = 0;\n    for (let o = 0; o < this._errorQueueSize; o++)\n      a[o] = { r: 0, g: 0, b: 0, a: 0 };\n    yield* hilbertCurve(r, n, (o, h) => {\n      const l = t[o + h * r];\n      let { r: f, g: b, b: w, a: g } = l;\n      for (let T = 0; T < this._errorQueueSize; T++) {\n        const C = this._weights[T], D = a[(T + s) % this._errorQueueSize];\n        f += D.r * C, b += D.g * C, w += D.b * C, g += D.a * C;\n      }\n      const E = Point.createByRGBA(inRange0to255Rounded(f), inRange0to255Rounded(b), inRange0to255Rounded(w), inRange0to255Rounded(g)), k = i.getNearestColor(this._distance, E);\n      s = (s + 1) % this._errorQueueSize;\n      const A = (s + this._errorQueueSize - 1) % this._errorQueueSize;\n      a[A].r = l.r - k.r, a[A].g = l.g - k.g, a[A].b = l.b - k.b, a[A].a = l.a - k.a, l.from(k);\n    }), yield {\n      pointContainer: e,\n      progress: 100\n    };\n  }\n  static _createWeights(e, i) {\n    const t = [], r = Math.exp(Math.log(i) / (i - 1));\n    for (let n = 0, a = 1; n < i; n++)\n      t[n] = (a + 0.5 | 0) / i * e, a *= r;\n    return t;\n  }\n}, quality_exports = {};\n__export(quality_exports, {\n  ssim: () => ssim\n});\nvar K1 = 0.01, K2 = 0.03;\nfunction ssim(e, i) {\n  if (e.getHeight() !== i.getHeight() || e.getWidth() !== i.getWidth())\n    throw new Error(\"Images have different sizes!\");\n  const r = (1 << 8) - 1, n = (K1 * r) ** 2, a = (K2 * r) ** 2;\n  let s = 0, o = 0;\n  return iterate(e, i, (h, l, f, b) => {\n    let w = 0, g = 0, E = 0;\n    for (let D = 0; D < h.length; D++)\n      g += (h[D] - f) ** 2, E += (l[D] - b) ** 2, w += (h[D] - f) * (l[D] - b);\n    const k = h.length - 1;\n    g /= k, E /= k, w /= k;\n    const A = (2 * f * b + n) * (2 * w + a), T = (f ** 2 + b ** 2 + n) * (g + E + a), C = A / T;\n    o += C, s++;\n  }), o / s;\n}\nfunction iterate(e, i, t) {\n  const n = e.getWidth(), a = e.getHeight();\n  for (let s = 0; s < a; s += 8)\n    for (let o = 0; o < n; o += 8) {\n      const h = Math.min(8, n - o), l = Math.min(8, a - s), f = calculateLumaValuesForWindow(e, o, s, h, l), b = calculateLumaValuesForWindow(i, o, s, h, l), w = calculateAverageLuma(f), g = calculateAverageLuma(b);\n      t(f, b, w, g);\n    }\n}\nfunction calculateLumaValuesForWindow(e, i, t, r, n) {\n  const a = e.getPointArray(), s = [];\n  let o = 0;\n  for (let h = t; h < t + n; h++) {\n    const l = h * e.getWidth();\n    for (let f = i; f < i + r; f++) {\n      const b = a[l + f];\n      s[o] = b.r * 0.2126 + b.g * 0.7152 + b.b * 0.0722, o++;\n    }\n  }\n  return s;\n}\nfunction calculateAverageLuma(e) {\n  let i = 0;\n  for (const t of e)\n    i += t;\n  return i / e.length;\n}\ntypeof setImmediate == \"function\" ? setImmediate : typeof process < \"u\" && (process == null || process.nextTick);\nfunction buildPaletteSync(e, {\n  colorDistanceFormula: i,\n  paletteQuantization: t,\n  colors: r\n} = {}) {\n  const n = colorDistanceFormulaToColorDistance(i), a = paletteQuantizationToPaletteQuantizer(n, t, r);\n  return e.forEach((s) => a.sample(s)), a.quantizeSync();\n}\nfunction applyPaletteSync(e, i, { colorDistanceFormula: t, imageQuantization: r } = {}) {\n  const n = colorDistanceFormulaToColorDistance(t);\n  return imageQuantizationToImageQuantizer(n, r).quantizeSync(e, i);\n}\nfunction colorDistanceFormulaToColorDistance(e = \"euclidean-bt709\") {\n  switch (e) {\n    case \"cie94-graphic-arts\":\n      return new CIE94GraphicArts();\n    case \"cie94-textiles\":\n      return new CIE94Textiles();\n    case \"ciede2000\":\n      return new CIEDE2000();\n    case \"color-metric\":\n      return new CMetric();\n    case \"euclidean\":\n      return new Euclidean();\n    case \"euclidean-bt709\":\n      return new EuclideanBT709();\n    case \"euclidean-bt709-noalpha\":\n      return new EuclideanBT709NoAlpha();\n    case \"manhattan\":\n      return new Manhattan();\n    case \"manhattan-bt709\":\n      return new ManhattanBT709();\n    case \"manhattan-nommyde\":\n      return new ManhattanNommyde();\n    case \"pngquant\":\n      return new PNGQuant();\n    default:\n      throw new Error(`Unknown colorDistanceFormula ${e}`);\n  }\n}\nfunction imageQuantizationToImageQuantizer(e, i = \"floyd-steinberg\") {\n  switch (i) {\n    case \"nearest\":\n      return new NearestColor(e);\n    case \"riemersma\":\n      return new ErrorDiffusionRiemersma(e);\n    case \"floyd-steinberg\":\n      return new ErrorDiffusionArray(\n        e,\n        0\n        /* FloydSteinberg */\n      );\n    case \"false-floyd-steinberg\":\n      return new ErrorDiffusionArray(\n        e,\n        1\n        /* FalseFloydSteinberg */\n      );\n    case \"stucki\":\n      return new ErrorDiffusionArray(\n        e,\n        2\n        /* Stucki */\n      );\n    case \"atkinson\":\n      return new ErrorDiffusionArray(\n        e,\n        3\n        /* Atkinson */\n      );\n    case \"jarvis\":\n      return new ErrorDiffusionArray(\n        e,\n        4\n        /* Jarvis */\n      );\n    case \"burkes\":\n      return new ErrorDiffusionArray(\n        e,\n        5\n        /* Burkes */\n      );\n    case \"sierra\":\n      return new ErrorDiffusionArray(\n        e,\n        6\n        /* Sierra */\n      );\n    case \"two-sierra\":\n      return new ErrorDiffusionArray(\n        e,\n        7\n        /* TwoSierra */\n      );\n    case \"sierra-lite\":\n      return new ErrorDiffusionArray(\n        e,\n        8\n        /* SierraLite */\n      );\n    default:\n      throw new Error(`Unknown imageQuantization ${i}`);\n  }\n}\nfunction paletteQuantizationToPaletteQuantizer(e, i = \"wuquant\", t = 256) {\n  switch (i) {\n    case \"neuquant\":\n      return new NeuQuant(e, t);\n    case \"rgbquant\":\n      return new RGBQuant(e, t);\n    case \"wuquant\":\n      return new WuQuant(e, t);\n    case \"neuquant-float\":\n      return new NeuQuantFloat(e, t);\n    default:\n      throw new Error(`Unknown paletteQuantization ${i}`);\n  }\n}\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * cie94.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * ciede2000.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * cmetric.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * common.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * constants.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * ditherErrorDiffusionArray.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * euclidean.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * helper.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * hueStatistics.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * iq.ts - Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * lab2rgb.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * lab2xyz.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * manhattanNeuQuant.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * nearestColor.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * palette.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * pngQuant.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * point.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * pointContainer.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgb2hsl.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgb2lab.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgb2xyz.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * ssim.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * wuQuant.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * xyz2lab.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * xyz2rgb.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * MIT License\n *\n * Copyright 2015-2018 Igor Bezkrovnyi\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n * riemersma.ts - part of Image Quantization Library\n */\n/**\n * @preserve TypeScript port:\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * colorHistogram.ts - part of Image Quantization Library\n */\n/**\n * @preserve TypeScript port:\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * neuquant.ts - part of Image Quantization Library\n */\n/**\n * @preserve TypeScript port:\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgbquant.ts - part of Image Quantization Library\n */\nvar common = {}, hasRequiredCommon;\nfunction requireCommon() {\n  return hasRequiredCommon || (hasRequiredCommon = 1, function(e) {\n    var i = typeof Uint8Array < \"u\" && typeof Uint16Array < \"u\" && typeof Int32Array < \"u\";\n    function t(a, s) {\n      return Object.prototype.hasOwnProperty.call(a, s);\n    }\n    e.assign = function(a) {\n      for (var s = Array.prototype.slice.call(arguments, 1); s.length; ) {\n        var o = s.shift();\n        if (o) {\n          if (typeof o != \"object\")\n            throw new TypeError(o + \"must be non-object\");\n          for (var h in o)\n            t(o, h) && (a[h] = o[h]);\n        }\n      }\n      return a;\n    }, e.shrinkBuf = function(a, s) {\n      return a.length === s ? a : a.subarray ? a.subarray(0, s) : (a.length = s, a);\n    };\n    var r = {\n      arraySet: function(a, s, o, h, l) {\n        if (s.subarray && a.subarray) {\n          a.set(s.subarray(o, o + h), l);\n          return;\n        }\n        for (var f = 0; f < h; f++)\n          a[l + f] = s[o + f];\n      },\n      // Join array of chunks to single array.\n      flattenChunks: function(a) {\n        var s, o, h, l, f, b;\n        for (h = 0, s = 0, o = a.length; s < o; s++)\n          h += a[s].length;\n        for (b = new Uint8Array(h), l = 0, s = 0, o = a.length; s < o; s++)\n          f = a[s], b.set(f, l), l += f.length;\n        return b;\n      }\n    }, n = {\n      arraySet: function(a, s, o, h, l) {\n        for (var f = 0; f < h; f++)\n          a[l + f] = s[o + f];\n      },\n      // Join array of chunks to single array.\n      flattenChunks: function(a) {\n        return [].concat.apply([], a);\n      }\n    };\n    e.setTyped = function(a) {\n      a ? (e.Buf8 = Uint8Array, e.Buf16 = Uint16Array, e.Buf32 = Int32Array, e.assign(e, r)) : (e.Buf8 = Array, e.Buf16 = Array, e.Buf32 = Array, e.assign(e, n));\n    }, e.setTyped(i);\n  }(common)), common;\n}\nvar deflate$1 = {}, deflate = {}, trees = {}, hasRequiredTrees;\nfunction requireTrees() {\n  if (hasRequiredTrees) return trees;\n  hasRequiredTrees = 1;\n  var e = requireCommon(), i = 4, t = 0, r = 1, n = 2;\n  function a(Z) {\n    for (var ue = Z.length; --ue >= 0; )\n      Z[ue] = 0;\n  }\n  var s = 0, o = 1, h = 2, l = 3, f = 258, b = 29, w = 256, g = w + 1 + b, E = 30, k = 19, A = 2 * g + 1, T = 15, C = 16, D = 7, $ = 256, P = 16, z = 17, B = 18, F = (\n    /* extra bits for each length code */\n    [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]\n  ), O = (\n    /* extra bits for each distance code */\n    [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]\n  ), N = (\n    /* extra bits for each bit length code */\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]\n  ), G = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], V = 512, J = new Array((g + 2) * 2);\n  a(J);\n  var Q = new Array(E * 2);\n  a(Q);\n  var W = new Array(V);\n  a(W);\n  var ne = new Array(f - l + 1);\n  a(ne);\n  var pe = new Array(b);\n  a(pe);\n  var be = new Array(E);\n  a(be);\n  function ve(Z, ue, xe, ke, te) {\n    this.static_tree = Z, this.extra_bits = ue, this.extra_base = xe, this.elems = ke, this.max_length = te, this.has_stree = Z && Z.length;\n  }\n  var Ee, Ae, _e;\n  function Be(Z, ue) {\n    this.dyn_tree = Z, this.max_code = 0, this.stat_desc = ue;\n  }\n  function Me(Z) {\n    return Z < 256 ? W[Z] : W[256 + (Z >>> 7)];\n  }\n  function re(Z, ue) {\n    Z.pending_buf[Z.pending++] = ue & 255, Z.pending_buf[Z.pending++] = ue >>> 8 & 255;\n  }\n  function Te(Z, ue, xe) {\n    Z.bi_valid > C - xe ? (Z.bi_buf |= ue << Z.bi_valid & 65535, re(Z, Z.bi_buf), Z.bi_buf = ue >> C - Z.bi_valid, Z.bi_valid += xe - C) : (Z.bi_buf |= ue << Z.bi_valid & 65535, Z.bi_valid += xe);\n  }\n  function Fe(Z, ue, xe) {\n    Te(\n      Z,\n      xe[ue * 2],\n      xe[ue * 2 + 1]\n      /*.Len*/\n    );\n  }\n  function Se(Z, ue) {\n    var xe = 0;\n    do\n      xe |= Z & 1, Z >>>= 1, xe <<= 1;\n    while (--ue > 0);\n    return xe >>> 1;\n  }\n  function Ye(Z) {\n    Z.bi_valid === 16 ? (re(Z, Z.bi_buf), Z.bi_buf = 0, Z.bi_valid = 0) : Z.bi_valid >= 8 && (Z.pending_buf[Z.pending++] = Z.bi_buf & 255, Z.bi_buf >>= 8, Z.bi_valid -= 8);\n  }\n  function Je(Z, ue) {\n    var xe = ue.dyn_tree, ke = ue.max_code, te = ue.stat_desc.static_tree, me = ue.stat_desc.has_stree, U = ue.stat_desc.extra_bits, ye = ue.stat_desc.extra_base, it = ue.stat_desc.max_length, I, fe, de, H, ee, oe, We = 0;\n    for (H = 0; H <= T; H++)\n      Z.bl_count[H] = 0;\n    for (xe[Z.heap[Z.heap_max] * 2 + 1] = 0, I = Z.heap_max + 1; I < A; I++)\n      fe = Z.heap[I], H = xe[xe[fe * 2 + 1] * 2 + 1] + 1, H > it && (H = it, We++), xe[fe * 2 + 1] = H, !(fe > ke) && (Z.bl_count[H]++, ee = 0, fe >= ye && (ee = U[fe - ye]), oe = xe[fe * 2], Z.opt_len += oe * (H + ee), me && (Z.static_len += oe * (te[fe * 2 + 1] + ee)));\n    if (We !== 0) {\n      do {\n        for (H = it - 1; Z.bl_count[H] === 0; )\n          H--;\n        Z.bl_count[H]--, Z.bl_count[H + 1] += 2, Z.bl_count[it]--, We -= 2;\n      } while (We > 0);\n      for (H = it; H !== 0; H--)\n        for (fe = Z.bl_count[H]; fe !== 0; )\n          de = Z.heap[--I], !(de > ke) && (xe[de * 2 + 1] !== H && (Z.opt_len += (H - xe[de * 2 + 1]) * xe[de * 2], xe[de * 2 + 1] = H), fe--);\n    }\n  }\n  function et(Z, ue, xe) {\n    var ke = new Array(T + 1), te = 0, me, U;\n    for (me = 1; me <= T; me++)\n      ke[me] = te = te + xe[me - 1] << 1;\n    for (U = 0; U <= ue; U++) {\n      var ye = Z[U * 2 + 1];\n      ye !== 0 && (Z[U * 2] = Se(ke[ye]++, ye));\n    }\n  }\n  function Ve() {\n    var Z, ue, xe, ke, te, me = new Array(T + 1);\n    for (xe = 0, ke = 0; ke < b - 1; ke++)\n      for (pe[ke] = xe, Z = 0; Z < 1 << F[ke]; Z++)\n        ne[xe++] = ke;\n    for (ne[xe - 1] = ke, te = 0, ke = 0; ke < 16; ke++)\n      for (be[ke] = te, Z = 0; Z < 1 << O[ke]; Z++)\n        W[te++] = ke;\n    for (te >>= 7; ke < E; ke++)\n      for (be[ke] = te << 7, Z = 0; Z < 1 << O[ke] - 7; Z++)\n        W[256 + te++] = ke;\n    for (ue = 0; ue <= T; ue++)\n      me[ue] = 0;\n    for (Z = 0; Z <= 143; )\n      J[Z * 2 + 1] = 8, Z++, me[8]++;\n    for (; Z <= 255; )\n      J[Z * 2 + 1] = 9, Z++, me[9]++;\n    for (; Z <= 279; )\n      J[Z * 2 + 1] = 7, Z++, me[7]++;\n    for (; Z <= 287; )\n      J[Z * 2 + 1] = 8, Z++, me[8]++;\n    for (et(J, g + 1, me), Z = 0; Z < E; Z++)\n      Q[Z * 2 + 1] = 5, Q[Z * 2] = Se(Z, 5);\n    Ee = new ve(J, F, w + 1, g, T), Ae = new ve(Q, O, 0, E, T), _e = new ve(new Array(0), N, 0, k, D);\n  }\n  function tt(Z) {\n    var ue;\n    for (ue = 0; ue < g; ue++)\n      Z.dyn_ltree[ue * 2] = 0;\n    for (ue = 0; ue < E; ue++)\n      Z.dyn_dtree[ue * 2] = 0;\n    for (ue = 0; ue < k; ue++)\n      Z.bl_tree[ue * 2] = 0;\n    Z.dyn_ltree[$ * 2] = 1, Z.opt_len = Z.static_len = 0, Z.last_lit = Z.matches = 0;\n  }\n  function qe(Z) {\n    Z.bi_valid > 8 ? re(Z, Z.bi_buf) : Z.bi_valid > 0 && (Z.pending_buf[Z.pending++] = Z.bi_buf), Z.bi_buf = 0, Z.bi_valid = 0;\n  }\n  function Re(Z, ue, xe, ke) {\n    qe(Z), re(Z, xe), re(Z, ~xe), e.arraySet(Z.pending_buf, Z.window, ue, xe, Z.pending), Z.pending += xe;\n  }\n  function nt(Z, ue, xe, ke) {\n    var te = ue * 2, me = xe * 2;\n    return Z[te] < Z[me] || Z[te] === Z[me] && ke[ue] <= ke[xe];\n  }\n  function Ge(Z, ue, xe) {\n    for (var ke = Z.heap[xe], te = xe << 1; te <= Z.heap_len && (te < Z.heap_len && nt(ue, Z.heap[te + 1], Z.heap[te], Z.depth) && te++, !nt(ue, ke, Z.heap[te], Z.depth)); )\n      Z.heap[xe] = Z.heap[te], xe = te, te <<= 1;\n    Z.heap[xe] = ke;\n  }\n  function Ne(Z, ue, xe) {\n    var ke, te, me = 0, U, ye;\n    if (Z.last_lit !== 0)\n      do\n        ke = Z.pending_buf[Z.d_buf + me * 2] << 8 | Z.pending_buf[Z.d_buf + me * 2 + 1], te = Z.pending_buf[Z.l_buf + me], me++, ke === 0 ? Fe(Z, te, ue) : (U = ne[te], Fe(Z, U + w + 1, ue), ye = F[U], ye !== 0 && (te -= pe[U], Te(Z, te, ye)), ke--, U = Me(ke), Fe(Z, U, xe), ye = O[U], ye !== 0 && (ke -= be[U], Te(Z, ke, ye)));\n      while (me < Z.last_lit);\n    Fe(Z, $, ue);\n  }\n  function he(Z, ue) {\n    var xe = ue.dyn_tree, ke = ue.stat_desc.static_tree, te = ue.stat_desc.has_stree, me = ue.stat_desc.elems, U, ye, it = -1, I;\n    for (Z.heap_len = 0, Z.heap_max = A, U = 0; U < me; U++)\n      xe[U * 2] !== 0 ? (Z.heap[++Z.heap_len] = it = U, Z.depth[U] = 0) : xe[U * 2 + 1] = 0;\n    for (; Z.heap_len < 2; )\n      I = Z.heap[++Z.heap_len] = it < 2 ? ++it : 0, xe[I * 2] = 1, Z.depth[I] = 0, Z.opt_len--, te && (Z.static_len -= ke[I * 2 + 1]);\n    for (ue.max_code = it, U = Z.heap_len >> 1; U >= 1; U--)\n      Ge(Z, xe, U);\n    I = me;\n    do\n      U = Z.heap[\n        1\n        /*SMALLEST*/\n      ], Z.heap[\n        1\n        /*SMALLEST*/\n      ] = Z.heap[Z.heap_len--], Ge(\n        Z,\n        xe,\n        1\n        /*SMALLEST*/\n      ), ye = Z.heap[\n        1\n        /*SMALLEST*/\n      ], Z.heap[--Z.heap_max] = U, Z.heap[--Z.heap_max] = ye, xe[I * 2] = xe[U * 2] + xe[ye * 2], Z.depth[I] = (Z.depth[U] >= Z.depth[ye] ? Z.depth[U] : Z.depth[ye]) + 1, xe[U * 2 + 1] = xe[ye * 2 + 1] = I, Z.heap[\n        1\n        /*SMALLEST*/\n      ] = I++, Ge(\n        Z,\n        xe,\n        1\n        /*SMALLEST*/\n      );\n    while (Z.heap_len >= 2);\n    Z.heap[--Z.heap_max] = Z.heap[\n      1\n      /*SMALLEST*/\n    ], Je(Z, ue), et(xe, it, Z.bl_count);\n  }\n  function Qe(Z, ue, xe) {\n    var ke, te = -1, me, U = ue[0 * 2 + 1], ye = 0, it = 7, I = 4;\n    for (U === 0 && (it = 138, I = 3), ue[(xe + 1) * 2 + 1] = 65535, ke = 0; ke <= xe; ke++)\n      me = U, U = ue[(ke + 1) * 2 + 1], !(++ye < it && me === U) && (ye < I ? Z.bl_tree[me * 2] += ye : me !== 0 ? (me !== te && Z.bl_tree[me * 2]++, Z.bl_tree[P * 2]++) : ye <= 10 ? Z.bl_tree[z * 2]++ : Z.bl_tree[B * 2]++, ye = 0, te = me, U === 0 ? (it = 138, I = 3) : me === U ? (it = 6, I = 3) : (it = 7, I = 4));\n  }\n  function Ze(Z, ue, xe) {\n    var ke, te = -1, me, U = ue[0 * 2 + 1], ye = 0, it = 7, I = 4;\n    for (U === 0 && (it = 138, I = 3), ke = 0; ke <= xe; ke++)\n      if (me = U, U = ue[(ke + 1) * 2 + 1], !(++ye < it && me === U)) {\n        if (ye < I)\n          do\n            Fe(Z, me, Z.bl_tree);\n          while (--ye !== 0);\n        else me !== 0 ? (me !== te && (Fe(Z, me, Z.bl_tree), ye--), Fe(Z, P, Z.bl_tree), Te(Z, ye - 3, 2)) : ye <= 10 ? (Fe(Z, z, Z.bl_tree), Te(Z, ye - 3, 3)) : (Fe(Z, B, Z.bl_tree), Te(Z, ye - 11, 7));\n        ye = 0, te = me, U === 0 ? (it = 138, I = 3) : me === U ? (it = 6, I = 3) : (it = 7, I = 4);\n      }\n  }\n  function He(Z) {\n    var ue;\n    for (Qe(Z, Z.dyn_ltree, Z.l_desc.max_code), Qe(Z, Z.dyn_dtree, Z.d_desc.max_code), he(Z, Z.bl_desc), ue = k - 1; ue >= 3 && Z.bl_tree[G[ue] * 2 + 1] === 0; ue--)\n      ;\n    return Z.opt_len += 3 * (ue + 1) + 5 + 5 + 4, ue;\n  }\n  function De(Z, ue, xe, ke) {\n    var te;\n    for (Te(Z, ue - 257, 5), Te(Z, xe - 1, 5), Te(Z, ke - 4, 4), te = 0; te < ke; te++)\n      Te(Z, Z.bl_tree[G[te] * 2 + 1], 3);\n    Ze(Z, Z.dyn_ltree, ue - 1), Ze(Z, Z.dyn_dtree, xe - 1);\n  }\n  function lt(Z) {\n    var ue = 4093624447, xe;\n    for (xe = 0; xe <= 31; xe++, ue >>>= 1)\n      if (ue & 1 && Z.dyn_ltree[xe * 2] !== 0)\n        return t;\n    if (Z.dyn_ltree[9 * 2] !== 0 || Z.dyn_ltree[10 * 2] !== 0 || Z.dyn_ltree[13 * 2] !== 0)\n      return r;\n    for (xe = 32; xe < w; xe++)\n      if (Z.dyn_ltree[xe * 2] !== 0)\n        return r;\n    return t;\n  }\n  var ot = !1;\n  function Le(Z) {\n    ot || (Ve(), ot = !0), Z.l_desc = new Be(Z.dyn_ltree, Ee), Z.d_desc = new Be(Z.dyn_dtree, Ae), Z.bl_desc = new Be(Z.bl_tree, _e), Z.bi_buf = 0, Z.bi_valid = 0, tt(Z);\n  }\n  function ze(Z, ue, xe, ke) {\n    Te(Z, (s << 1) + (ke ? 1 : 0), 3), Re(Z, ue, xe);\n  }\n  function je(Z) {\n    Te(Z, o << 1, 3), Fe(Z, $, J), Ye(Z);\n  }\n  function Oe(Z, ue, xe, ke) {\n    var te, me, U = 0;\n    Z.level > 0 ? (Z.strm.data_type === n && (Z.strm.data_type = lt(Z)), he(Z, Z.l_desc), he(Z, Z.d_desc), U = He(Z), te = Z.opt_len + 3 + 7 >>> 3, me = Z.static_len + 3 + 7 >>> 3, me <= te && (te = me)) : te = me = xe + 5, xe + 4 <= te && ue !== -1 ? ze(Z, ue, xe, ke) : Z.strategy === i || me === te ? (Te(Z, (o << 1) + (ke ? 1 : 0), 3), Ne(Z, J, Q)) : (Te(Z, (h << 1) + (ke ? 1 : 0), 3), De(Z, Z.l_desc.max_code + 1, Z.d_desc.max_code + 1, U + 1), Ne(Z, Z.dyn_ltree, Z.dyn_dtree)), tt(Z), ke && qe(Z);\n  }\n  function st(Z, ue, xe) {\n    return Z.pending_buf[Z.d_buf + Z.last_lit * 2] = ue >>> 8 & 255, Z.pending_buf[Z.d_buf + Z.last_lit * 2 + 1] = ue & 255, Z.pending_buf[Z.l_buf + Z.last_lit] = xe & 255, Z.last_lit++, ue === 0 ? Z.dyn_ltree[xe * 2]++ : (Z.matches++, ue--, Z.dyn_ltree[(ne[xe] + w + 1) * 2]++, Z.dyn_dtree[Me(ue) * 2]++), Z.last_lit === Z.lit_bufsize - 1;\n  }\n  return trees._tr_init = Le, trees._tr_stored_block = ze, trees._tr_flush_block = Oe, trees._tr_tally = st, trees._tr_align = je, trees;\n}\nvar adler32_1, hasRequiredAdler32;\nfunction requireAdler32() {\n  if (hasRequiredAdler32) return adler32_1;\n  hasRequiredAdler32 = 1;\n  function e(i, t, r, n) {\n    for (var a = i & 65535 | 0, s = i >>> 16 & 65535 | 0, o = 0; r !== 0; ) {\n      o = r > 2e3 ? 2e3 : r, r -= o;\n      do\n        a = a + t[n++] | 0, s = s + a | 0;\n      while (--o);\n      a %= 65521, s %= 65521;\n    }\n    return a | s << 16 | 0;\n  }\n  return adler32_1 = e, adler32_1;\n}\nvar crc32_1, hasRequiredCrc32;\nfunction requireCrc32() {\n  if (hasRequiredCrc32) return crc32_1;\n  hasRequiredCrc32 = 1;\n  function e() {\n    for (var r, n = [], a = 0; a < 256; a++) {\n      r = a;\n      for (var s = 0; s < 8; s++)\n        r = r & 1 ? 3988292384 ^ r >>> 1 : r >>> 1;\n      n[a] = r;\n    }\n    return n;\n  }\n  var i = e();\n  function t(r, n, a, s) {\n    var o = i, h = s + a;\n    r ^= -1;\n    for (var l = s; l < h; l++)\n      r = r >>> 8 ^ o[(r ^ n[l]) & 255];\n    return r ^ -1;\n  }\n  return crc32_1 = t, crc32_1;\n}\nvar messages, hasRequiredMessages;\nfunction requireMessages() {\n  return hasRequiredMessages || (hasRequiredMessages = 1, messages = {\n    2: \"need dictionary\",\n    /* Z_NEED_DICT       2  */\n    1: \"stream end\",\n    /* Z_STREAM_END      1  */\n    0: \"\",\n    /* Z_OK              0  */\n    \"-1\": \"file error\",\n    /* Z_ERRNO         (-1) */\n    \"-2\": \"stream error\",\n    /* Z_STREAM_ERROR  (-2) */\n    \"-3\": \"data error\",\n    /* Z_DATA_ERROR    (-3) */\n    \"-4\": \"insufficient memory\",\n    /* Z_MEM_ERROR     (-4) */\n    \"-5\": \"buffer error\",\n    /* Z_BUF_ERROR     (-5) */\n    \"-6\": \"incompatible version\"\n    /* Z_VERSION_ERROR (-6) */\n  }), messages;\n}\nvar hasRequiredDeflate$1;\nfunction requireDeflate$1() {\n  if (hasRequiredDeflate$1) return deflate;\n  hasRequiredDeflate$1 = 1;\n  var e = requireCommon(), i = requireTrees(), t = requireAdler32(), r = requireCrc32(), n = requireMessages(), a = 0, s = 1, o = 3, h = 4, l = 5, f = 0, b = 1, w = -2, g = -3, E = -5, k = -1, A = 1, T = 2, C = 3, D = 4, $ = 0, P = 2, z = 8, B = 9, F = 15, O = 8, N = 29, G = 256, V = G + 1 + N, J = 30, Q = 19, W = 2 * V + 1, ne = 15, pe = 3, be = 258, ve = be + pe + 1, Ee = 32, Ae = 42, _e = 69, Be = 73, Me = 91, re = 103, Te = 113, Fe = 666, Se = 1, Ye = 2, Je = 3, et = 4, Ve = 3;\n  function tt(I, fe) {\n    return I.msg = n[fe], fe;\n  }\n  function qe(I) {\n    return (I << 1) - (I > 4 ? 9 : 0);\n  }\n  function Re(I) {\n    for (var fe = I.length; --fe >= 0; )\n      I[fe] = 0;\n  }\n  function nt(I) {\n    var fe = I.state, de = fe.pending;\n    de > I.avail_out && (de = I.avail_out), de !== 0 && (e.arraySet(I.output, fe.pending_buf, fe.pending_out, de, I.next_out), I.next_out += de, fe.pending_out += de, I.total_out += de, I.avail_out -= de, fe.pending -= de, fe.pending === 0 && (fe.pending_out = 0));\n  }\n  function Ge(I, fe) {\n    i._tr_flush_block(I, I.block_start >= 0 ? I.block_start : -1, I.strstart - I.block_start, fe), I.block_start = I.strstart, nt(I.strm);\n  }\n  function Ne(I, fe) {\n    I.pending_buf[I.pending++] = fe;\n  }\n  function he(I, fe) {\n    I.pending_buf[I.pending++] = fe >>> 8 & 255, I.pending_buf[I.pending++] = fe & 255;\n  }\n  function Qe(I, fe, de, H) {\n    var ee = I.avail_in;\n    return ee > H && (ee = H), ee === 0 ? 0 : (I.avail_in -= ee, e.arraySet(fe, I.input, I.next_in, ee, de), I.state.wrap === 1 ? I.adler = t(I.adler, fe, ee, de) : I.state.wrap === 2 && (I.adler = r(I.adler, fe, ee, de)), I.next_in += ee, I.total_in += ee, ee);\n  }\n  function Ze(I, fe) {\n    var de = I.max_chain_length, H = I.strstart, ee, oe, We = I.prev_length, M = I.nice_match, _ = I.strstart > I.w_size - ve ? I.strstart - (I.w_size - ve) : 0, d = I.window, u = I.w_mask, v = I.prev, S = I.strstart + be, L = d[H + We - 1], q = d[H + We];\n    I.prev_length >= I.good_match && (de >>= 2), M > I.lookahead && (M = I.lookahead);\n    do\n      if (ee = fe, !(d[ee + We] !== q || d[ee + We - 1] !== L || d[ee] !== d[H] || d[++ee] !== d[H + 1])) {\n        H += 2, ee++;\n        do\n          ;\n        while (d[++H] === d[++ee] && d[++H] === d[++ee] && d[++H] === d[++ee] && d[++H] === d[++ee] && d[++H] === d[++ee] && d[++H] === d[++ee] && d[++H] === d[++ee] && d[++H] === d[++ee] && H < S);\n        if (oe = be - (S - H), H = S - be, oe > We) {\n          if (I.match_start = fe, We = oe, oe >= M)\n            break;\n          L = d[H + We - 1], q = d[H + We];\n        }\n      }\n    while ((fe = v[fe & u]) > _ && --de !== 0);\n    return We <= I.lookahead ? We : I.lookahead;\n  }\n  function He(I) {\n    var fe = I.w_size, de, H, ee, oe, We;\n    do {\n      if (oe = I.window_size - I.lookahead - I.strstart, I.strstart >= fe + (fe - ve)) {\n        e.arraySet(I.window, I.window, fe, fe, 0), I.match_start -= fe, I.strstart -= fe, I.block_start -= fe, H = I.hash_size, de = H;\n        do\n          ee = I.head[--de], I.head[de] = ee >= fe ? ee - fe : 0;\n        while (--H);\n        H = fe, de = H;\n        do\n          ee = I.prev[--de], I.prev[de] = ee >= fe ? ee - fe : 0;\n        while (--H);\n        oe += fe;\n      }\n      if (I.strm.avail_in === 0)\n        break;\n      if (H = Qe(I.strm, I.window, I.strstart + I.lookahead, oe), I.lookahead += H, I.lookahead + I.insert >= pe)\n        for (We = I.strstart - I.insert, I.ins_h = I.window[We], I.ins_h = (I.ins_h << I.hash_shift ^ I.window[We + 1]) & I.hash_mask; I.insert && (I.ins_h = (I.ins_h << I.hash_shift ^ I.window[We + pe - 1]) & I.hash_mask, I.prev[We & I.w_mask] = I.head[I.ins_h], I.head[I.ins_h] = We, We++, I.insert--, !(I.lookahead + I.insert < pe)); )\n          ;\n    } while (I.lookahead < ve && I.strm.avail_in !== 0);\n  }\n  function De(I, fe) {\n    var de = 65535;\n    for (de > I.pending_buf_size - 5 && (de = I.pending_buf_size - 5); ; ) {\n      if (I.lookahead <= 1) {\n        if (He(I), I.lookahead === 0 && fe === a)\n          return Se;\n        if (I.lookahead === 0)\n          break;\n      }\n      I.strstart += I.lookahead, I.lookahead = 0;\n      var H = I.block_start + de;\n      if ((I.strstart === 0 || I.strstart >= H) && (I.lookahead = I.strstart - H, I.strstart = H, Ge(I, !1), I.strm.avail_out === 0) || I.strstart - I.block_start >= I.w_size - ve && (Ge(I, !1), I.strm.avail_out === 0))\n        return Se;\n    }\n    return I.insert = 0, fe === h ? (Ge(I, !0), I.strm.avail_out === 0 ? Je : et) : (I.strstart > I.block_start && (Ge(I, !1), I.strm.avail_out === 0), Se);\n  }\n  function lt(I, fe) {\n    for (var de, H; ; ) {\n      if (I.lookahead < ve) {\n        if (He(I), I.lookahead < ve && fe === a)\n          return Se;\n        if (I.lookahead === 0)\n          break;\n      }\n      if (de = 0, I.lookahead >= pe && (I.ins_h = (I.ins_h << I.hash_shift ^ I.window[I.strstart + pe - 1]) & I.hash_mask, de = I.prev[I.strstart & I.w_mask] = I.head[I.ins_h], I.head[I.ins_h] = I.strstart), de !== 0 && I.strstart - de <= I.w_size - ve && (I.match_length = Ze(I, de)), I.match_length >= pe)\n        if (H = i._tr_tally(I, I.strstart - I.match_start, I.match_length - pe), I.lookahead -= I.match_length, I.match_length <= I.max_lazy_match && I.lookahead >= pe) {\n          I.match_length--;\n          do\n            I.strstart++, I.ins_h = (I.ins_h << I.hash_shift ^ I.window[I.strstart + pe - 1]) & I.hash_mask, de = I.prev[I.strstart & I.w_mask] = I.head[I.ins_h], I.head[I.ins_h] = I.strstart;\n          while (--I.match_length !== 0);\n          I.strstart++;\n        } else\n          I.strstart += I.match_length, I.match_length = 0, I.ins_h = I.window[I.strstart], I.ins_h = (I.ins_h << I.hash_shift ^ I.window[I.strstart + 1]) & I.hash_mask;\n      else\n        H = i._tr_tally(I, 0, I.window[I.strstart]), I.lookahead--, I.strstart++;\n      if (H && (Ge(I, !1), I.strm.avail_out === 0))\n        return Se;\n    }\n    return I.insert = I.strstart < pe - 1 ? I.strstart : pe - 1, fe === h ? (Ge(I, !0), I.strm.avail_out === 0 ? Je : et) : I.last_lit && (Ge(I, !1), I.strm.avail_out === 0) ? Se : Ye;\n  }\n  function ot(I, fe) {\n    for (var de, H, ee; ; ) {\n      if (I.lookahead < ve) {\n        if (He(I), I.lookahead < ve && fe === a)\n          return Se;\n        if (I.lookahead === 0)\n          break;\n      }\n      if (de = 0, I.lookahead >= pe && (I.ins_h = (I.ins_h << I.hash_shift ^ I.window[I.strstart + pe - 1]) & I.hash_mask, de = I.prev[I.strstart & I.w_mask] = I.head[I.ins_h], I.head[I.ins_h] = I.strstart), I.prev_length = I.match_length, I.prev_match = I.match_start, I.match_length = pe - 1, de !== 0 && I.prev_length < I.max_lazy_match && I.strstart - de <= I.w_size - ve && (I.match_length = Ze(I, de), I.match_length <= 5 && (I.strategy === A || I.match_length === pe && I.strstart - I.match_start > 4096) && (I.match_length = pe - 1)), I.prev_length >= pe && I.match_length <= I.prev_length) {\n        ee = I.strstart + I.lookahead - pe, H = i._tr_tally(I, I.strstart - 1 - I.prev_match, I.prev_length - pe), I.lookahead -= I.prev_length - 1, I.prev_length -= 2;\n        do\n          ++I.strstart <= ee && (I.ins_h = (I.ins_h << I.hash_shift ^ I.window[I.strstart + pe - 1]) & I.hash_mask, de = I.prev[I.strstart & I.w_mask] = I.head[I.ins_h], I.head[I.ins_h] = I.strstart);\n        while (--I.prev_length !== 0);\n        if (I.match_available = 0, I.match_length = pe - 1, I.strstart++, H && (Ge(I, !1), I.strm.avail_out === 0))\n          return Se;\n      } else if (I.match_available) {\n        if (H = i._tr_tally(I, 0, I.window[I.strstart - 1]), H && Ge(I, !1), I.strstart++, I.lookahead--, I.strm.avail_out === 0)\n          return Se;\n      } else\n        I.match_available = 1, I.strstart++, I.lookahead--;\n    }\n    return I.match_available && (H = i._tr_tally(I, 0, I.window[I.strstart - 1]), I.match_available = 0), I.insert = I.strstart < pe - 1 ? I.strstart : pe - 1, fe === h ? (Ge(I, !0), I.strm.avail_out === 0 ? Je : et) : I.last_lit && (Ge(I, !1), I.strm.avail_out === 0) ? Se : Ye;\n  }\n  function Le(I, fe) {\n    for (var de, H, ee, oe, We = I.window; ; ) {\n      if (I.lookahead <= be) {\n        if (He(I), I.lookahead <= be && fe === a)\n          return Se;\n        if (I.lookahead === 0)\n          break;\n      }\n      if (I.match_length = 0, I.lookahead >= pe && I.strstart > 0 && (ee = I.strstart - 1, H = We[ee], H === We[++ee] && H === We[++ee] && H === We[++ee])) {\n        oe = I.strstart + be;\n        do\n          ;\n        while (H === We[++ee] && H === We[++ee] && H === We[++ee] && H === We[++ee] && H === We[++ee] && H === We[++ee] && H === We[++ee] && H === We[++ee] && ee < oe);\n        I.match_length = be - (oe - ee), I.match_length > I.lookahead && (I.match_length = I.lookahead);\n      }\n      if (I.match_length >= pe ? (de = i._tr_tally(I, 1, I.match_length - pe), I.lookahead -= I.match_length, I.strstart += I.match_length, I.match_length = 0) : (de = i._tr_tally(I, 0, I.window[I.strstart]), I.lookahead--, I.strstart++), de && (Ge(I, !1), I.strm.avail_out === 0))\n        return Se;\n    }\n    return I.insert = 0, fe === h ? (Ge(I, !0), I.strm.avail_out === 0 ? Je : et) : I.last_lit && (Ge(I, !1), I.strm.avail_out === 0) ? Se : Ye;\n  }\n  function ze(I, fe) {\n    for (var de; ; ) {\n      if (I.lookahead === 0 && (He(I), I.lookahead === 0)) {\n        if (fe === a)\n          return Se;\n        break;\n      }\n      if (I.match_length = 0, de = i._tr_tally(I, 0, I.window[I.strstart]), I.lookahead--, I.strstart++, de && (Ge(I, !1), I.strm.avail_out === 0))\n        return Se;\n    }\n    return I.insert = 0, fe === h ? (Ge(I, !0), I.strm.avail_out === 0 ? Je : et) : I.last_lit && (Ge(I, !1), I.strm.avail_out === 0) ? Se : Ye;\n  }\n  function je(I, fe, de, H, ee) {\n    this.good_length = I, this.max_lazy = fe, this.nice_length = de, this.max_chain = H, this.func = ee;\n  }\n  var Oe;\n  Oe = [\n    /*      good lazy nice chain */\n    new je(0, 0, 0, 0, De),\n    /* 0 store only */\n    new je(4, 4, 8, 4, lt),\n    /* 1 max speed, no lazy matches */\n    new je(4, 5, 16, 8, lt),\n    /* 2 */\n    new je(4, 6, 32, 32, lt),\n    /* 3 */\n    new je(4, 4, 16, 16, ot),\n    /* 4 lazy matches */\n    new je(8, 16, 32, 32, ot),\n    /* 5 */\n    new je(8, 16, 128, 128, ot),\n    /* 6 */\n    new je(8, 32, 128, 256, ot),\n    /* 7 */\n    new je(32, 128, 258, 1024, ot),\n    /* 8 */\n    new je(32, 258, 258, 4096, ot)\n    /* 9 max compression */\n  ];\n  function st(I) {\n    I.window_size = 2 * I.w_size, Re(I.head), I.max_lazy_match = Oe[I.level].max_lazy, I.good_match = Oe[I.level].good_length, I.nice_match = Oe[I.level].nice_length, I.max_chain_length = Oe[I.level].max_chain, I.strstart = 0, I.block_start = 0, I.lookahead = 0, I.insert = 0, I.match_length = I.prev_length = pe - 1, I.match_available = 0, I.ins_h = 0;\n  }\n  function Z() {\n    this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = z, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new e.Buf16(W * 2), this.dyn_dtree = new e.Buf16((2 * J + 1) * 2), this.bl_tree = new e.Buf16((2 * Q + 1) * 2), Re(this.dyn_ltree), Re(this.dyn_dtree), Re(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new e.Buf16(ne + 1), this.heap = new e.Buf16(2 * V + 1), Re(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new e.Buf16(2 * V + 1), Re(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;\n  }\n  function ue(I) {\n    var fe;\n    return !I || !I.state ? tt(I, w) : (I.total_in = I.total_out = 0, I.data_type = P, fe = I.state, fe.pending = 0, fe.pending_out = 0, fe.wrap < 0 && (fe.wrap = -fe.wrap), fe.status = fe.wrap ? Ae : Te, I.adler = fe.wrap === 2 ? 0 : 1, fe.last_flush = a, i._tr_init(fe), f);\n  }\n  function xe(I) {\n    var fe = ue(I);\n    return fe === f && st(I.state), fe;\n  }\n  function ke(I, fe) {\n    return !I || !I.state || I.state.wrap !== 2 ? w : (I.state.gzhead = fe, f);\n  }\n  function te(I, fe, de, H, ee, oe) {\n    if (!I)\n      return w;\n    var We = 1;\n    if (fe === k && (fe = 6), H < 0 ? (We = 0, H = -H) : H > 15 && (We = 2, H -= 16), ee < 1 || ee > B || de !== z || H < 8 || H > 15 || fe < 0 || fe > 9 || oe < 0 || oe > D)\n      return tt(I, w);\n    H === 8 && (H = 9);\n    var M = new Z();\n    return I.state = M, M.strm = I, M.wrap = We, M.gzhead = null, M.w_bits = H, M.w_size = 1 << M.w_bits, M.w_mask = M.w_size - 1, M.hash_bits = ee + 7, M.hash_size = 1 << M.hash_bits, M.hash_mask = M.hash_size - 1, M.hash_shift = ~~((M.hash_bits + pe - 1) / pe), M.window = new e.Buf8(M.w_size * 2), M.head = new e.Buf16(M.hash_size), M.prev = new e.Buf16(M.w_size), M.lit_bufsize = 1 << ee + 6, M.pending_buf_size = M.lit_bufsize * 4, M.pending_buf = new e.Buf8(M.pending_buf_size), M.d_buf = 1 * M.lit_bufsize, M.l_buf = 3 * M.lit_bufsize, M.level = fe, M.strategy = oe, M.method = de, xe(I);\n  }\n  function me(I, fe) {\n    return te(I, fe, z, F, O, $);\n  }\n  function U(I, fe) {\n    var de, H, ee, oe;\n    if (!I || !I.state || fe > l || fe < 0)\n      return I ? tt(I, w) : w;\n    if (H = I.state, !I.output || !I.input && I.avail_in !== 0 || H.status === Fe && fe !== h)\n      return tt(I, I.avail_out === 0 ? E : w);\n    if (H.strm = I, de = H.last_flush, H.last_flush = fe, H.status === Ae)\n      if (H.wrap === 2)\n        I.adler = 0, Ne(H, 31), Ne(H, 139), Ne(H, 8), H.gzhead ? (Ne(\n          H,\n          (H.gzhead.text ? 1 : 0) + (H.gzhead.hcrc ? 2 : 0) + (H.gzhead.extra ? 4 : 0) + (H.gzhead.name ? 8 : 0) + (H.gzhead.comment ? 16 : 0)\n        ), Ne(H, H.gzhead.time & 255), Ne(H, H.gzhead.time >> 8 & 255), Ne(H, H.gzhead.time >> 16 & 255), Ne(H, H.gzhead.time >> 24 & 255), Ne(H, H.level === 9 ? 2 : H.strategy >= T || H.level < 2 ? 4 : 0), Ne(H, H.gzhead.os & 255), H.gzhead.extra && H.gzhead.extra.length && (Ne(H, H.gzhead.extra.length & 255), Ne(H, H.gzhead.extra.length >> 8 & 255)), H.gzhead.hcrc && (I.adler = r(I.adler, H.pending_buf, H.pending, 0)), H.gzindex = 0, H.status = _e) : (Ne(H, 0), Ne(H, 0), Ne(H, 0), Ne(H, 0), Ne(H, 0), Ne(H, H.level === 9 ? 2 : H.strategy >= T || H.level < 2 ? 4 : 0), Ne(H, Ve), H.status = Te);\n      else {\n        var We = z + (H.w_bits - 8 << 4) << 8, M = -1;\n        H.strategy >= T || H.level < 2 ? M = 0 : H.level < 6 ? M = 1 : H.level === 6 ? M = 2 : M = 3, We |= M << 6, H.strstart !== 0 && (We |= Ee), We += 31 - We % 31, H.status = Te, he(H, We), H.strstart !== 0 && (he(H, I.adler >>> 16), he(H, I.adler & 65535)), I.adler = 1;\n      }\n    if (H.status === _e)\n      if (H.gzhead.extra) {\n        for (ee = H.pending; H.gzindex < (H.gzhead.extra.length & 65535) && !(H.pending === H.pending_buf_size && (H.gzhead.hcrc && H.pending > ee && (I.adler = r(I.adler, H.pending_buf, H.pending - ee, ee)), nt(I), ee = H.pending, H.pending === H.pending_buf_size)); )\n          Ne(H, H.gzhead.extra[H.gzindex] & 255), H.gzindex++;\n        H.gzhead.hcrc && H.pending > ee && (I.adler = r(I.adler, H.pending_buf, H.pending - ee, ee)), H.gzindex === H.gzhead.extra.length && (H.gzindex = 0, H.status = Be);\n      } else\n        H.status = Be;\n    if (H.status === Be)\n      if (H.gzhead.name) {\n        ee = H.pending;\n        do {\n          if (H.pending === H.pending_buf_size && (H.gzhead.hcrc && H.pending > ee && (I.adler = r(I.adler, H.pending_buf, H.pending - ee, ee)), nt(I), ee = H.pending, H.pending === H.pending_buf_size)) {\n            oe = 1;\n            break;\n          }\n          H.gzindex < H.gzhead.name.length ? oe = H.gzhead.name.charCodeAt(H.gzindex++) & 255 : oe = 0, Ne(H, oe);\n        } while (oe !== 0);\n        H.gzhead.hcrc && H.pending > ee && (I.adler = r(I.adler, H.pending_buf, H.pending - ee, ee)), oe === 0 && (H.gzindex = 0, H.status = Me);\n      } else\n        H.status = Me;\n    if (H.status === Me)\n      if (H.gzhead.comment) {\n        ee = H.pending;\n        do {\n          if (H.pending === H.pending_buf_size && (H.gzhead.hcrc && H.pending > ee && (I.adler = r(I.adler, H.pending_buf, H.pending - ee, ee)), nt(I), ee = H.pending, H.pending === H.pending_buf_size)) {\n            oe = 1;\n            break;\n          }\n          H.gzindex < H.gzhead.comment.length ? oe = H.gzhead.comment.charCodeAt(H.gzindex++) & 255 : oe = 0, Ne(H, oe);\n        } while (oe !== 0);\n        H.gzhead.hcrc && H.pending > ee && (I.adler = r(I.adler, H.pending_buf, H.pending - ee, ee)), oe === 0 && (H.status = re);\n      } else\n        H.status = re;\n    if (H.status === re && (H.gzhead.hcrc ? (H.pending + 2 > H.pending_buf_size && nt(I), H.pending + 2 <= H.pending_buf_size && (Ne(H, I.adler & 255), Ne(H, I.adler >> 8 & 255), I.adler = 0, H.status = Te)) : H.status = Te), H.pending !== 0) {\n      if (nt(I), I.avail_out === 0)\n        return H.last_flush = -1, f;\n    } else if (I.avail_in === 0 && qe(fe) <= qe(de) && fe !== h)\n      return tt(I, E);\n    if (H.status === Fe && I.avail_in !== 0)\n      return tt(I, E);\n    if (I.avail_in !== 0 || H.lookahead !== 0 || fe !== a && H.status !== Fe) {\n      var _ = H.strategy === T ? ze(H, fe) : H.strategy === C ? Le(H, fe) : Oe[H.level].func(H, fe);\n      if ((_ === Je || _ === et) && (H.status = Fe), _ === Se || _ === Je)\n        return I.avail_out === 0 && (H.last_flush = -1), f;\n      if (_ === Ye && (fe === s ? i._tr_align(H) : fe !== l && (i._tr_stored_block(H, 0, 0, !1), fe === o && (Re(H.head), H.lookahead === 0 && (H.strstart = 0, H.block_start = 0, H.insert = 0))), nt(I), I.avail_out === 0))\n        return H.last_flush = -1, f;\n    }\n    return fe !== h ? f : H.wrap <= 0 ? b : (H.wrap === 2 ? (Ne(H, I.adler & 255), Ne(H, I.adler >> 8 & 255), Ne(H, I.adler >> 16 & 255), Ne(H, I.adler >> 24 & 255), Ne(H, I.total_in & 255), Ne(H, I.total_in >> 8 & 255), Ne(H, I.total_in >> 16 & 255), Ne(H, I.total_in >> 24 & 255)) : (he(H, I.adler >>> 16), he(H, I.adler & 65535)), nt(I), H.wrap > 0 && (H.wrap = -H.wrap), H.pending !== 0 ? f : b);\n  }\n  function ye(I) {\n    var fe;\n    return !I || !I.state ? w : (fe = I.state.status, fe !== Ae && fe !== _e && fe !== Be && fe !== Me && fe !== re && fe !== Te && fe !== Fe ? tt(I, w) : (I.state = null, fe === Te ? tt(I, g) : f));\n  }\n  function it(I, fe) {\n    var de = fe.length, H, ee, oe, We, M, _, d, u;\n    if (!I || !I.state || (H = I.state, We = H.wrap, We === 2 || We === 1 && H.status !== Ae || H.lookahead))\n      return w;\n    for (We === 1 && (I.adler = t(I.adler, fe, de, 0)), H.wrap = 0, de >= H.w_size && (We === 0 && (Re(H.head), H.strstart = 0, H.block_start = 0, H.insert = 0), u = new e.Buf8(H.w_size), e.arraySet(u, fe, de - H.w_size, H.w_size, 0), fe = u, de = H.w_size), M = I.avail_in, _ = I.next_in, d = I.input, I.avail_in = de, I.next_in = 0, I.input = fe, He(H); H.lookahead >= pe; ) {\n      ee = H.strstart, oe = H.lookahead - (pe - 1);\n      do\n        H.ins_h = (H.ins_h << H.hash_shift ^ H.window[ee + pe - 1]) & H.hash_mask, H.prev[ee & H.w_mask] = H.head[H.ins_h], H.head[H.ins_h] = ee, ee++;\n      while (--oe);\n      H.strstart = ee, H.lookahead = pe - 1, He(H);\n    }\n    return H.strstart += H.lookahead, H.block_start = H.strstart, H.insert = H.lookahead, H.lookahead = 0, H.match_length = H.prev_length = pe - 1, H.match_available = 0, I.next_in = _, I.input = d, I.avail_in = M, H.wrap = We, f;\n  }\n  return deflate.deflateInit = me, deflate.deflateInit2 = te, deflate.deflateReset = xe, deflate.deflateResetKeep = ue, deflate.deflateSetHeader = ke, deflate.deflate = U, deflate.deflateEnd = ye, deflate.deflateSetDictionary = it, deflate.deflateInfo = \"pako deflate (from Nodeca project)\", deflate;\n}\nvar strings = {}, hasRequiredStrings;\nfunction requireStrings() {\n  if (hasRequiredStrings) return strings;\n  hasRequiredStrings = 1;\n  var e = requireCommon(), i = !0, t = !0;\n  try {\n    String.fromCharCode.apply(null, [0]);\n  } catch {\n    i = !1;\n  }\n  try {\n    String.fromCharCode.apply(null, new Uint8Array(1));\n  } catch {\n    t = !1;\n  }\n  for (var r = new e.Buf8(256), n = 0; n < 256; n++)\n    r[n] = n >= 252 ? 6 : n >= 248 ? 5 : n >= 240 ? 4 : n >= 224 ? 3 : n >= 192 ? 2 : 1;\n  r[254] = r[254] = 1, strings.string2buf = function(s) {\n    var o, h, l, f, b, w = s.length, g = 0;\n    for (f = 0; f < w; f++)\n      h = s.charCodeAt(f), (h & 64512) === 55296 && f + 1 < w && (l = s.charCodeAt(f + 1), (l & 64512) === 56320 && (h = 65536 + (h - 55296 << 10) + (l - 56320), f++)), g += h < 128 ? 1 : h < 2048 ? 2 : h < 65536 ? 3 : 4;\n    for (o = new e.Buf8(g), b = 0, f = 0; b < g; f++)\n      h = s.charCodeAt(f), (h & 64512) === 55296 && f + 1 < w && (l = s.charCodeAt(f + 1), (l & 64512) === 56320 && (h = 65536 + (h - 55296 << 10) + (l - 56320), f++)), h < 128 ? o[b++] = h : h < 2048 ? (o[b++] = 192 | h >>> 6, o[b++] = 128 | h & 63) : h < 65536 ? (o[b++] = 224 | h >>> 12, o[b++] = 128 | h >>> 6 & 63, o[b++] = 128 | h & 63) : (o[b++] = 240 | h >>> 18, o[b++] = 128 | h >>> 12 & 63, o[b++] = 128 | h >>> 6 & 63, o[b++] = 128 | h & 63);\n    return o;\n  };\n  function a(s, o) {\n    if (o < 65534 && (s.subarray && t || !s.subarray && i))\n      return String.fromCharCode.apply(null, e.shrinkBuf(s, o));\n    for (var h = \"\", l = 0; l < o; l++)\n      h += String.fromCharCode(s[l]);\n    return h;\n  }\n  return strings.buf2binstring = function(s) {\n    return a(s, s.length);\n  }, strings.binstring2buf = function(s) {\n    for (var o = new e.Buf8(s.length), h = 0, l = o.length; h < l; h++)\n      o[h] = s.charCodeAt(h);\n    return o;\n  }, strings.buf2string = function(s, o) {\n    var h, l, f, b, w = o || s.length, g = new Array(w * 2);\n    for (l = 0, h = 0; h < w; ) {\n      if (f = s[h++], f < 128) {\n        g[l++] = f;\n        continue;\n      }\n      if (b = r[f], b > 4) {\n        g[l++] = 65533, h += b - 1;\n        continue;\n      }\n      for (f &= b === 2 ? 31 : b === 3 ? 15 : 7; b > 1 && h < w; )\n        f = f << 6 | s[h++] & 63, b--;\n      if (b > 1) {\n        g[l++] = 65533;\n        continue;\n      }\n      f < 65536 ? g[l++] = f : (f -= 65536, g[l++] = 55296 | f >> 10 & 1023, g[l++] = 56320 | f & 1023);\n    }\n    return a(g, l);\n  }, strings.utf8border = function(s, o) {\n    var h;\n    for (o = o || s.length, o > s.length && (o = s.length), h = o - 1; h >= 0 && (s[h] & 192) === 128; )\n      h--;\n    return h < 0 || h === 0 ? o : h + r[s[h]] > o ? h : o;\n  }, strings;\n}\nvar zstream, hasRequiredZstream;\nfunction requireZstream() {\n  if (hasRequiredZstream) return zstream;\n  hasRequiredZstream = 1;\n  function e() {\n    this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = \"\", this.state = null, this.data_type = 2, this.adler = 0;\n  }\n  return zstream = e, zstream;\n}\nvar hasRequiredDeflate;\nfunction requireDeflate() {\n  if (hasRequiredDeflate) return deflate$1;\n  hasRequiredDeflate = 1;\n  var e = requireDeflate$1(), i = requireCommon(), t = requireStrings(), r = requireMessages(), n = requireZstream(), a = Object.prototype.toString, s = 0, o = 4, h = 0, l = 1, f = 2, b = -1, w = 0, g = 8;\n  function E(C) {\n    if (!(this instanceof E)) return new E(C);\n    this.options = i.assign({\n      level: b,\n      method: g,\n      chunkSize: 16384,\n      windowBits: 15,\n      memLevel: 8,\n      strategy: w,\n      to: \"\"\n    }, C || {});\n    var D = this.options;\n    D.raw && D.windowBits > 0 ? D.windowBits = -D.windowBits : D.gzip && D.windowBits > 0 && D.windowBits < 16 && (D.windowBits += 16), this.err = 0, this.msg = \"\", this.ended = !1, this.chunks = [], this.strm = new n(), this.strm.avail_out = 0;\n    var $ = e.deflateInit2(\n      this.strm,\n      D.level,\n      D.method,\n      D.windowBits,\n      D.memLevel,\n      D.strategy\n    );\n    if ($ !== h)\n      throw new Error(r[$]);\n    if (D.header && e.deflateSetHeader(this.strm, D.header), D.dictionary) {\n      var P;\n      if (typeof D.dictionary == \"string\" ? P = t.string2buf(D.dictionary) : a.call(D.dictionary) === \"[object ArrayBuffer]\" ? P = new Uint8Array(D.dictionary) : P = D.dictionary, $ = e.deflateSetDictionary(this.strm, P), $ !== h)\n        throw new Error(r[$]);\n      this._dict_set = !0;\n    }\n  }\n  E.prototype.push = function(C, D) {\n    var $ = this.strm, P = this.options.chunkSize, z, B;\n    if (this.ended)\n      return !1;\n    B = D === ~~D ? D : D === !0 ? o : s, typeof C == \"string\" ? $.input = t.string2buf(C) : a.call(C) === \"[object ArrayBuffer]\" ? $.input = new Uint8Array(C) : $.input = C, $.next_in = 0, $.avail_in = $.input.length;\n    do {\n      if ($.avail_out === 0 && ($.output = new i.Buf8(P), $.next_out = 0, $.avail_out = P), z = e.deflate($, B), z !== l && z !== h)\n        return this.onEnd(z), this.ended = !0, !1;\n      ($.avail_out === 0 || $.avail_in === 0 && (B === o || B === f)) && (this.options.to === \"string\" ? this.onData(t.buf2binstring(i.shrinkBuf($.output, $.next_out))) : this.onData(i.shrinkBuf($.output, $.next_out)));\n    } while (($.avail_in > 0 || $.avail_out === 0) && z !== l);\n    return B === o ? (z = e.deflateEnd(this.strm), this.onEnd(z), this.ended = !0, z === h) : (B === f && (this.onEnd(h), $.avail_out = 0), !0);\n  }, E.prototype.onData = function(C) {\n    this.chunks.push(C);\n  }, E.prototype.onEnd = function(C) {\n    C === h && (this.options.to === \"string\" ? this.result = this.chunks.join(\"\") : this.result = i.flattenChunks(this.chunks)), this.chunks = [], this.err = C, this.msg = this.strm.msg;\n  };\n  function k(C, D) {\n    var $ = new E(D);\n    if ($.push(C, !0), $.err)\n      throw $.msg || r[$.err];\n    return $.result;\n  }\n  function A(C, D) {\n    return D = D || {}, D.raw = !0, k(C, D);\n  }\n  function T(C, D) {\n    return D = D || {}, D.gzip = !0, k(C, D);\n  }\n  return deflate$1.Deflate = E, deflate$1.deflate = k, deflate$1.deflateRaw = A, deflate$1.gzip = T, deflate$1;\n}\nvar inflate$1 = {}, inflate = {}, inffast, hasRequiredInffast;\nfunction requireInffast() {\n  if (hasRequiredInffast) return inffast;\n  hasRequiredInffast = 1;\n  var e = 30, i = 12;\n  return inffast = function(r, n) {\n    var a, s, o, h, l, f, b, w, g, E, k, A, T, C, D, $, P, z, B, F, O, N, G, V, J;\n    a = r.state, s = r.next_in, V = r.input, o = s + (r.avail_in - 5), h = r.next_out, J = r.output, l = h - (n - r.avail_out), f = h + (r.avail_out - 257), b = a.dmax, w = a.wsize, g = a.whave, E = a.wnext, k = a.window, A = a.hold, T = a.bits, C = a.lencode, D = a.distcode, $ = (1 << a.lenbits) - 1, P = (1 << a.distbits) - 1;\n    e:\n      do {\n        T < 15 && (A += V[s++] << T, T += 8, A += V[s++] << T, T += 8), z = C[A & $];\n        t:\n          for (; ; ) {\n            if (B = z >>> 24, A >>>= B, T -= B, B = z >>> 16 & 255, B === 0)\n              J[h++] = z & 65535;\n            else if (B & 16) {\n              F = z & 65535, B &= 15, B && (T < B && (A += V[s++] << T, T += 8), F += A & (1 << B) - 1, A >>>= B, T -= B), T < 15 && (A += V[s++] << T, T += 8, A += V[s++] << T, T += 8), z = D[A & P];\n              i:\n                for (; ; ) {\n                  if (B = z >>> 24, A >>>= B, T -= B, B = z >>> 16 & 255, B & 16) {\n                    if (O = z & 65535, B &= 15, T < B && (A += V[s++] << T, T += 8, T < B && (A += V[s++] << T, T += 8)), O += A & (1 << B) - 1, O > b) {\n                      r.msg = \"invalid distance too far back\", a.mode = e;\n                      break e;\n                    }\n                    if (A >>>= B, T -= B, B = h - l, O > B) {\n                      if (B = O - B, B > g && a.sane) {\n                        r.msg = \"invalid distance too far back\", a.mode = e;\n                        break e;\n                      }\n                      if (N = 0, G = k, E === 0) {\n                        if (N += w - B, B < F) {\n                          F -= B;\n                          do\n                            J[h++] = k[N++];\n                          while (--B);\n                          N = h - O, G = J;\n                        }\n                      } else if (E < B) {\n                        if (N += w + E - B, B -= E, B < F) {\n                          F -= B;\n                          do\n                            J[h++] = k[N++];\n                          while (--B);\n                          if (N = 0, E < F) {\n                            B = E, F -= B;\n                            do\n                              J[h++] = k[N++];\n                            while (--B);\n                            N = h - O, G = J;\n                          }\n                        }\n                      } else if (N += E - B, B < F) {\n                        F -= B;\n                        do\n                          J[h++] = k[N++];\n                        while (--B);\n                        N = h - O, G = J;\n                      }\n                      for (; F > 2; )\n                        J[h++] = G[N++], J[h++] = G[N++], J[h++] = G[N++], F -= 3;\n                      F && (J[h++] = G[N++], F > 1 && (J[h++] = G[N++]));\n                    } else {\n                      N = h - O;\n                      do\n                        J[h++] = J[N++], J[h++] = J[N++], J[h++] = J[N++], F -= 3;\n                      while (F > 2);\n                      F && (J[h++] = J[N++], F > 1 && (J[h++] = J[N++]));\n                    }\n                  } else if ((B & 64) === 0) {\n                    z = D[(z & 65535) + (A & (1 << B) - 1)];\n                    continue i;\n                  } else {\n                    r.msg = \"invalid distance code\", a.mode = e;\n                    break e;\n                  }\n                  break;\n                }\n            } else if ((B & 64) === 0) {\n              z = C[(z & 65535) + (A & (1 << B) - 1)];\n              continue t;\n            } else if (B & 32) {\n              a.mode = i;\n              break e;\n            } else {\n              r.msg = \"invalid literal/length code\", a.mode = e;\n              break e;\n            }\n            break;\n          }\n      } while (s < o && h < f);\n    F = T >> 3, s -= F, T -= F << 3, A &= (1 << T) - 1, r.next_in = s, r.next_out = h, r.avail_in = s < o ? 5 + (o - s) : 5 - (s - o), r.avail_out = h < f ? 257 + (f - h) : 257 - (h - f), a.hold = A, a.bits = T;\n  }, inffast;\n}\nvar inftrees, hasRequiredInftrees;\nfunction requireInftrees() {\n  if (hasRequiredInftrees) return inftrees;\n  hasRequiredInftrees = 1;\n  var e = requireCommon(), i = 15, t = 852, r = 592, n = 0, a = 1, s = 2, o = [\n    /* Length codes 257..285 base */\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    13,\n    15,\n    17,\n    19,\n    23,\n    27,\n    31,\n    35,\n    43,\n    51,\n    59,\n    67,\n    83,\n    99,\n    115,\n    131,\n    163,\n    195,\n    227,\n    258,\n    0,\n    0\n  ], h = [\n    /* Length codes 257..285 extra */\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    17,\n    17,\n    17,\n    17,\n    18,\n    18,\n    18,\n    18,\n    19,\n    19,\n    19,\n    19,\n    20,\n    20,\n    20,\n    20,\n    21,\n    21,\n    21,\n    21,\n    16,\n    72,\n    78\n  ], l = [\n    /* Distance codes 0..29 base */\n    1,\n    2,\n    3,\n    4,\n    5,\n    7,\n    9,\n    13,\n    17,\n    25,\n    33,\n    49,\n    65,\n    97,\n    129,\n    193,\n    257,\n    385,\n    513,\n    769,\n    1025,\n    1537,\n    2049,\n    3073,\n    4097,\n    6145,\n    8193,\n    12289,\n    16385,\n    24577,\n    0,\n    0\n  ], f = [\n    /* Distance codes 0..29 extra */\n    16,\n    16,\n    16,\n    16,\n    17,\n    17,\n    18,\n    18,\n    19,\n    19,\n    20,\n    20,\n    21,\n    21,\n    22,\n    22,\n    23,\n    23,\n    24,\n    24,\n    25,\n    25,\n    26,\n    26,\n    27,\n    27,\n    28,\n    28,\n    29,\n    29,\n    64,\n    64\n  ];\n  return inftrees = function(w, g, E, k, A, T, C, D) {\n    var $ = D.bits, P = 0, z = 0, B = 0, F = 0, O = 0, N = 0, G = 0, V = 0, J = 0, Q = 0, W, ne, pe, be, ve, Ee = null, Ae = 0, _e, Be = new e.Buf16(i + 1), Me = new e.Buf16(i + 1), re = null, Te = 0, Fe, Se, Ye;\n    for (P = 0; P <= i; P++)\n      Be[P] = 0;\n    for (z = 0; z < k; z++)\n      Be[g[E + z]]++;\n    for (O = $, F = i; F >= 1 && Be[F] === 0; F--)\n      ;\n    if (O > F && (O = F), F === 0)\n      return A[T++] = 1 << 24 | 64 << 16 | 0, A[T++] = 1 << 24 | 64 << 16 | 0, D.bits = 1, 0;\n    for (B = 1; B < F && Be[B] === 0; B++)\n      ;\n    for (O < B && (O = B), V = 1, P = 1; P <= i; P++)\n      if (V <<= 1, V -= Be[P], V < 0)\n        return -1;\n    if (V > 0 && (w === n || F !== 1))\n      return -1;\n    for (Me[1] = 0, P = 1; P < i; P++)\n      Me[P + 1] = Me[P] + Be[P];\n    for (z = 0; z < k; z++)\n      g[E + z] !== 0 && (C[Me[g[E + z]]++] = z);\n    if (w === n ? (Ee = re = C, _e = 19) : w === a ? (Ee = o, Ae -= 257, re = h, Te -= 257, _e = 256) : (Ee = l, re = f, _e = -1), Q = 0, z = 0, P = B, ve = T, N = O, G = 0, pe = -1, J = 1 << O, be = J - 1, w === a && J > t || w === s && J > r)\n      return 1;\n    for (; ; ) {\n      Fe = P - G, C[z] < _e ? (Se = 0, Ye = C[z]) : C[z] > _e ? (Se = re[Te + C[z]], Ye = Ee[Ae + C[z]]) : (Se = 96, Ye = 0), W = 1 << P - G, ne = 1 << N, B = ne;\n      do\n        ne -= W, A[ve + (Q >> G) + ne] = Fe << 24 | Se << 16 | Ye | 0;\n      while (ne !== 0);\n      for (W = 1 << P - 1; Q & W; )\n        W >>= 1;\n      if (W !== 0 ? (Q &= W - 1, Q += W) : Q = 0, z++, --Be[P] === 0) {\n        if (P === F)\n          break;\n        P = g[E + C[z]];\n      }\n      if (P > O && (Q & be) !== pe) {\n        for (G === 0 && (G = O), ve += B, N = P - G, V = 1 << N; N + G < F && (V -= Be[N + G], !(V <= 0)); )\n          N++, V <<= 1;\n        if (J += 1 << N, w === a && J > t || w === s && J > r)\n          return 1;\n        pe = Q & be, A[pe] = O << 24 | N << 16 | ve - T | 0;\n      }\n    }\n    return Q !== 0 && (A[ve + Q] = P - G << 24 | 64 << 16 | 0), D.bits = O, 0;\n  }, inftrees;\n}\nvar hasRequiredInflate$1;\nfunction requireInflate$1() {\n  if (hasRequiredInflate$1) return inflate;\n  hasRequiredInflate$1 = 1;\n  var e = requireCommon(), i = requireAdler32(), t = requireCrc32(), r = requireInffast(), n = requireInftrees(), a = 0, s = 1, o = 2, h = 4, l = 5, f = 6, b = 0, w = 1, g = 2, E = -2, k = -3, A = -4, T = -5, C = 8, D = 1, $ = 2, P = 3, z = 4, B = 5, F = 6, O = 7, N = 8, G = 9, V = 10, J = 11, Q = 12, W = 13, ne = 14, pe = 15, be = 16, ve = 17, Ee = 18, Ae = 19, _e = 20, Be = 21, Me = 22, re = 23, Te = 24, Fe = 25, Se = 26, Ye = 27, Je = 28, et = 29, Ve = 30, tt = 31, qe = 32, Re = 852, nt = 592, Ge = 15, Ne = Ge;\n  function he(te) {\n    return (te >>> 24 & 255) + (te >>> 8 & 65280) + ((te & 65280) << 8) + ((te & 255) << 24);\n  }\n  function Qe() {\n    this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new e.Buf16(320), this.work = new e.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;\n  }\n  function Ze(te) {\n    var me;\n    return !te || !te.state ? E : (me = te.state, te.total_in = te.total_out = me.total = 0, te.msg = \"\", me.wrap && (te.adler = me.wrap & 1), me.mode = D, me.last = 0, me.havedict = 0, me.dmax = 32768, me.head = null, me.hold = 0, me.bits = 0, me.lencode = me.lendyn = new e.Buf32(Re), me.distcode = me.distdyn = new e.Buf32(nt), me.sane = 1, me.back = -1, b);\n  }\n  function He(te) {\n    var me;\n    return !te || !te.state ? E : (me = te.state, me.wsize = 0, me.whave = 0, me.wnext = 0, Ze(te));\n  }\n  function De(te, me) {\n    var U, ye;\n    return !te || !te.state || (ye = te.state, me < 0 ? (U = 0, me = -me) : (U = (me >> 4) + 1, me < 48 && (me &= 15)), me && (me < 8 || me > 15)) ? E : (ye.window !== null && ye.wbits !== me && (ye.window = null), ye.wrap = U, ye.wbits = me, He(te));\n  }\n  function lt(te, me) {\n    var U, ye;\n    return te ? (ye = new Qe(), te.state = ye, ye.window = null, U = De(te, me), U !== b && (te.state = null), U) : E;\n  }\n  function ot(te) {\n    return lt(te, Ne);\n  }\n  var Le = !0, ze, je;\n  function Oe(te) {\n    if (Le) {\n      var me;\n      for (ze = new e.Buf32(512), je = new e.Buf32(32), me = 0; me < 144; )\n        te.lens[me++] = 8;\n      for (; me < 256; )\n        te.lens[me++] = 9;\n      for (; me < 280; )\n        te.lens[me++] = 7;\n      for (; me < 288; )\n        te.lens[me++] = 8;\n      for (n(s, te.lens, 0, 288, ze, 0, te.work, { bits: 9 }), me = 0; me < 32; )\n        te.lens[me++] = 5;\n      n(o, te.lens, 0, 32, je, 0, te.work, { bits: 5 }), Le = !1;\n    }\n    te.lencode = ze, te.lenbits = 9, te.distcode = je, te.distbits = 5;\n  }\n  function st(te, me, U, ye) {\n    var it, I = te.state;\n    return I.window === null && (I.wsize = 1 << I.wbits, I.wnext = 0, I.whave = 0, I.window = new e.Buf8(I.wsize)), ye >= I.wsize ? (e.arraySet(I.window, me, U - I.wsize, I.wsize, 0), I.wnext = 0, I.whave = I.wsize) : (it = I.wsize - I.wnext, it > ye && (it = ye), e.arraySet(I.window, me, U - ye, it, I.wnext), ye -= it, ye ? (e.arraySet(I.window, me, U - ye, ye, 0), I.wnext = ye, I.whave = I.wsize) : (I.wnext += it, I.wnext === I.wsize && (I.wnext = 0), I.whave < I.wsize && (I.whave += it))), 0;\n  }\n  function Z(te, me) {\n    var U, ye, it, I, fe, de, H, ee, oe, We, M, _, d, u, v = 0, S, L, q, X, j, ae, K, ce, we = new e.Buf8(4), le, ge, Ue = (\n      /* permutation of code lengths */\n      [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]\n    );\n    if (!te || !te.state || !te.output || !te.input && te.avail_in !== 0)\n      return E;\n    U = te.state, U.mode === Q && (U.mode = W), fe = te.next_out, it = te.output, H = te.avail_out, I = te.next_in, ye = te.input, de = te.avail_in, ee = U.hold, oe = U.bits, We = de, M = H, ce = b;\n    e:\n      for (; ; )\n        switch (U.mode) {\n          case D:\n            if (U.wrap === 0) {\n              U.mode = W;\n              break;\n            }\n            for (; oe < 16; ) {\n              if (de === 0)\n                break e;\n              de--, ee += ye[I++] << oe, oe += 8;\n            }\n            if (U.wrap & 2 && ee === 35615) {\n              U.check = 0, we[0] = ee & 255, we[1] = ee >>> 8 & 255, U.check = t(U.check, we, 2, 0), ee = 0, oe = 0, U.mode = $;\n              break;\n            }\n            if (U.flags = 0, U.head && (U.head.done = !1), !(U.wrap & 1) || /* check if zlib header allowed */\n            (((ee & 255) << 8) + (ee >> 8)) % 31) {\n              te.msg = \"incorrect header check\", U.mode = Ve;\n              break;\n            }\n            if ((ee & 15) !== C) {\n              te.msg = \"unknown compression method\", U.mode = Ve;\n              break;\n            }\n            if (ee >>>= 4, oe -= 4, K = (ee & 15) + 8, U.wbits === 0)\n              U.wbits = K;\n            else if (K > U.wbits) {\n              te.msg = \"invalid window size\", U.mode = Ve;\n              break;\n            }\n            U.dmax = 1 << K, te.adler = U.check = 1, U.mode = ee & 512 ? V : Q, ee = 0, oe = 0;\n            break;\n          case $:\n            for (; oe < 16; ) {\n              if (de === 0)\n                break e;\n              de--, ee += ye[I++] << oe, oe += 8;\n            }\n            if (U.flags = ee, (U.flags & 255) !== C) {\n              te.msg = \"unknown compression method\", U.mode = Ve;\n              break;\n            }\n            if (U.flags & 57344) {\n              te.msg = \"unknown header flags set\", U.mode = Ve;\n              break;\n            }\n            U.head && (U.head.text = ee >> 8 & 1), U.flags & 512 && (we[0] = ee & 255, we[1] = ee >>> 8 & 255, U.check = t(U.check, we, 2, 0)), ee = 0, oe = 0, U.mode = P;\n          /* falls through */\n          case P:\n            for (; oe < 32; ) {\n              if (de === 0)\n                break e;\n              de--, ee += ye[I++] << oe, oe += 8;\n            }\n            U.head && (U.head.time = ee), U.flags & 512 && (we[0] = ee & 255, we[1] = ee >>> 8 & 255, we[2] = ee >>> 16 & 255, we[3] = ee >>> 24 & 255, U.check = t(U.check, we, 4, 0)), ee = 0, oe = 0, U.mode = z;\n          /* falls through */\n          case z:\n            for (; oe < 16; ) {\n              if (de === 0)\n                break e;\n              de--, ee += ye[I++] << oe, oe += 8;\n            }\n            U.head && (U.head.xflags = ee & 255, U.head.os = ee >> 8), U.flags & 512 && (we[0] = ee & 255, we[1] = ee >>> 8 & 255, U.check = t(U.check, we, 2, 0)), ee = 0, oe = 0, U.mode = B;\n          /* falls through */\n          case B:\n            if (U.flags & 1024) {\n              for (; oe < 16; ) {\n                if (de === 0)\n                  break e;\n                de--, ee += ye[I++] << oe, oe += 8;\n              }\n              U.length = ee, U.head && (U.head.extra_len = ee), U.flags & 512 && (we[0] = ee & 255, we[1] = ee >>> 8 & 255, U.check = t(U.check, we, 2, 0)), ee = 0, oe = 0;\n            } else U.head && (U.head.extra = null);\n            U.mode = F;\n          /* falls through */\n          case F:\n            if (U.flags & 1024 && (_ = U.length, _ > de && (_ = de), _ && (U.head && (K = U.head.extra_len - U.length, U.head.extra || (U.head.extra = new Array(U.head.extra_len)), e.arraySet(\n              U.head.extra,\n              ye,\n              I,\n              // extra field is limited to 65536 bytes\n              // - no need for additional size check\n              _,\n              /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n              K\n            )), U.flags & 512 && (U.check = t(U.check, ye, _, I)), de -= _, I += _, U.length -= _), U.length))\n              break e;\n            U.length = 0, U.mode = O;\n          /* falls through */\n          case O:\n            if (U.flags & 2048) {\n              if (de === 0)\n                break e;\n              _ = 0;\n              do\n                K = ye[I + _++], U.head && K && U.length < 65536 && (U.head.name += String.fromCharCode(K));\n              while (K && _ < de);\n              if (U.flags & 512 && (U.check = t(U.check, ye, _, I)), de -= _, I += _, K)\n                break e;\n            } else U.head && (U.head.name = null);\n            U.length = 0, U.mode = N;\n          /* falls through */\n          case N:\n            if (U.flags & 4096) {\n              if (de === 0)\n                break e;\n              _ = 0;\n              do\n                K = ye[I + _++], U.head && K && U.length < 65536 && (U.head.comment += String.fromCharCode(K));\n              while (K && _ < de);\n              if (U.flags & 512 && (U.check = t(U.check, ye, _, I)), de -= _, I += _, K)\n                break e;\n            } else U.head && (U.head.comment = null);\n            U.mode = G;\n          /* falls through */\n          case G:\n            if (U.flags & 512) {\n              for (; oe < 16; ) {\n                if (de === 0)\n                  break e;\n                de--, ee += ye[I++] << oe, oe += 8;\n              }\n              if (ee !== (U.check & 65535)) {\n                te.msg = \"header crc mismatch\", U.mode = Ve;\n                break;\n              }\n              ee = 0, oe = 0;\n            }\n            U.head && (U.head.hcrc = U.flags >> 9 & 1, U.head.done = !0), te.adler = U.check = 0, U.mode = Q;\n            break;\n          case V:\n            for (; oe < 32; ) {\n              if (de === 0)\n                break e;\n              de--, ee += ye[I++] << oe, oe += 8;\n            }\n            te.adler = U.check = he(ee), ee = 0, oe = 0, U.mode = J;\n          /* falls through */\n          case J:\n            if (U.havedict === 0)\n              return te.next_out = fe, te.avail_out = H, te.next_in = I, te.avail_in = de, U.hold = ee, U.bits = oe, g;\n            te.adler = U.check = 1, U.mode = Q;\n          /* falls through */\n          case Q:\n            if (me === l || me === f)\n              break e;\n          /* falls through */\n          case W:\n            if (U.last) {\n              ee >>>= oe & 7, oe -= oe & 7, U.mode = Ye;\n              break;\n            }\n            for (; oe < 3; ) {\n              if (de === 0)\n                break e;\n              de--, ee += ye[I++] << oe, oe += 8;\n            }\n            switch (U.last = ee & 1, ee >>>= 1, oe -= 1, ee & 3) {\n              case 0:\n                U.mode = ne;\n                break;\n              case 1:\n                if (Oe(U), U.mode = _e, me === f) {\n                  ee >>>= 2, oe -= 2;\n                  break e;\n                }\n                break;\n              case 2:\n                U.mode = ve;\n                break;\n              case 3:\n                te.msg = \"invalid block type\", U.mode = Ve;\n            }\n            ee >>>= 2, oe -= 2;\n            break;\n          case ne:\n            for (ee >>>= oe & 7, oe -= oe & 7; oe < 32; ) {\n              if (de === 0)\n                break e;\n              de--, ee += ye[I++] << oe, oe += 8;\n            }\n            if ((ee & 65535) !== (ee >>> 16 ^ 65535)) {\n              te.msg = \"invalid stored block lengths\", U.mode = Ve;\n              break;\n            }\n            if (U.length = ee & 65535, ee = 0, oe = 0, U.mode = pe, me === f)\n              break e;\n          /* falls through */\n          case pe:\n            U.mode = be;\n          /* falls through */\n          case be:\n            if (_ = U.length, _) {\n              if (_ > de && (_ = de), _ > H && (_ = H), _ === 0)\n                break e;\n              e.arraySet(it, ye, I, _, fe), de -= _, I += _, H -= _, fe += _, U.length -= _;\n              break;\n            }\n            U.mode = Q;\n            break;\n          case ve:\n            for (; oe < 14; ) {\n              if (de === 0)\n                break e;\n              de--, ee += ye[I++] << oe, oe += 8;\n            }\n            if (U.nlen = (ee & 31) + 257, ee >>>= 5, oe -= 5, U.ndist = (ee & 31) + 1, ee >>>= 5, oe -= 5, U.ncode = (ee & 15) + 4, ee >>>= 4, oe -= 4, U.nlen > 286 || U.ndist > 30) {\n              te.msg = \"too many length or distance symbols\", U.mode = Ve;\n              break;\n            }\n            U.have = 0, U.mode = Ee;\n          /* falls through */\n          case Ee:\n            for (; U.have < U.ncode; ) {\n              for (; oe < 3; ) {\n                if (de === 0)\n                  break e;\n                de--, ee += ye[I++] << oe, oe += 8;\n              }\n              U.lens[Ue[U.have++]] = ee & 7, ee >>>= 3, oe -= 3;\n            }\n            for (; U.have < 19; )\n              U.lens[Ue[U.have++]] = 0;\n            if (U.lencode = U.lendyn, U.lenbits = 7, le = { bits: U.lenbits }, ce = n(a, U.lens, 0, 19, U.lencode, 0, U.work, le), U.lenbits = le.bits, ce) {\n              te.msg = \"invalid code lengths set\", U.mode = Ve;\n              break;\n            }\n            U.have = 0, U.mode = Ae;\n          /* falls through */\n          case Ae:\n            for (; U.have < U.nlen + U.ndist; ) {\n              for (; v = U.lencode[ee & (1 << U.lenbits) - 1], S = v >>> 24, L = v >>> 16 & 255, q = v & 65535, !(S <= oe); ) {\n                if (de === 0)\n                  break e;\n                de--, ee += ye[I++] << oe, oe += 8;\n              }\n              if (q < 16)\n                ee >>>= S, oe -= S, U.lens[U.have++] = q;\n              else {\n                if (q === 16) {\n                  for (ge = S + 2; oe < ge; ) {\n                    if (de === 0)\n                      break e;\n                    de--, ee += ye[I++] << oe, oe += 8;\n                  }\n                  if (ee >>>= S, oe -= S, U.have === 0) {\n                    te.msg = \"invalid bit length repeat\", U.mode = Ve;\n                    break;\n                  }\n                  K = U.lens[U.have - 1], _ = 3 + (ee & 3), ee >>>= 2, oe -= 2;\n                } else if (q === 17) {\n                  for (ge = S + 3; oe < ge; ) {\n                    if (de === 0)\n                      break e;\n                    de--, ee += ye[I++] << oe, oe += 8;\n                  }\n                  ee >>>= S, oe -= S, K = 0, _ = 3 + (ee & 7), ee >>>= 3, oe -= 3;\n                } else {\n                  for (ge = S + 7; oe < ge; ) {\n                    if (de === 0)\n                      break e;\n                    de--, ee += ye[I++] << oe, oe += 8;\n                  }\n                  ee >>>= S, oe -= S, K = 0, _ = 11 + (ee & 127), ee >>>= 7, oe -= 7;\n                }\n                if (U.have + _ > U.nlen + U.ndist) {\n                  te.msg = \"invalid bit length repeat\", U.mode = Ve;\n                  break;\n                }\n                for (; _--; )\n                  U.lens[U.have++] = K;\n              }\n            }\n            if (U.mode === Ve)\n              break;\n            if (U.lens[256] === 0) {\n              te.msg = \"invalid code -- missing end-of-block\", U.mode = Ve;\n              break;\n            }\n            if (U.lenbits = 9, le = { bits: U.lenbits }, ce = n(s, U.lens, 0, U.nlen, U.lencode, 0, U.work, le), U.lenbits = le.bits, ce) {\n              te.msg = \"invalid literal/lengths set\", U.mode = Ve;\n              break;\n            }\n            if (U.distbits = 6, U.distcode = U.distdyn, le = { bits: U.distbits }, ce = n(o, U.lens, U.nlen, U.ndist, U.distcode, 0, U.work, le), U.distbits = le.bits, ce) {\n              te.msg = \"invalid distances set\", U.mode = Ve;\n              break;\n            }\n            if (U.mode = _e, me === f)\n              break e;\n          /* falls through */\n          case _e:\n            U.mode = Be;\n          /* falls through */\n          case Be:\n            if (de >= 6 && H >= 258) {\n              te.next_out = fe, te.avail_out = H, te.next_in = I, te.avail_in = de, U.hold = ee, U.bits = oe, r(te, M), fe = te.next_out, it = te.output, H = te.avail_out, I = te.next_in, ye = te.input, de = te.avail_in, ee = U.hold, oe = U.bits, U.mode === Q && (U.back = -1);\n              break;\n            }\n            for (U.back = 0; v = U.lencode[ee & (1 << U.lenbits) - 1], S = v >>> 24, L = v >>> 16 & 255, q = v & 65535, !(S <= oe); ) {\n              if (de === 0)\n                break e;\n              de--, ee += ye[I++] << oe, oe += 8;\n            }\n            if (L && (L & 240) === 0) {\n              for (X = S, j = L, ae = q; v = U.lencode[ae + ((ee & (1 << X + j) - 1) >> X)], S = v >>> 24, L = v >>> 16 & 255, q = v & 65535, !(X + S <= oe); ) {\n                if (de === 0)\n                  break e;\n                de--, ee += ye[I++] << oe, oe += 8;\n              }\n              ee >>>= X, oe -= X, U.back += X;\n            }\n            if (ee >>>= S, oe -= S, U.back += S, U.length = q, L === 0) {\n              U.mode = Se;\n              break;\n            }\n            if (L & 32) {\n              U.back = -1, U.mode = Q;\n              break;\n            }\n            if (L & 64) {\n              te.msg = \"invalid literal/length code\", U.mode = Ve;\n              break;\n            }\n            U.extra = L & 15, U.mode = Me;\n          /* falls through */\n          case Me:\n            if (U.extra) {\n              for (ge = U.extra; oe < ge; ) {\n                if (de === 0)\n                  break e;\n                de--, ee += ye[I++] << oe, oe += 8;\n              }\n              U.length += ee & (1 << U.extra) - 1, ee >>>= U.extra, oe -= U.extra, U.back += U.extra;\n            }\n            U.was = U.length, U.mode = re;\n          /* falls through */\n          case re:\n            for (; v = U.distcode[ee & (1 << U.distbits) - 1], S = v >>> 24, L = v >>> 16 & 255, q = v & 65535, !(S <= oe); ) {\n              if (de === 0)\n                break e;\n              de--, ee += ye[I++] << oe, oe += 8;\n            }\n            if ((L & 240) === 0) {\n              for (X = S, j = L, ae = q; v = U.distcode[ae + ((ee & (1 << X + j) - 1) >> X)], S = v >>> 24, L = v >>> 16 & 255, q = v & 65535, !(X + S <= oe); ) {\n                if (de === 0)\n                  break e;\n                de--, ee += ye[I++] << oe, oe += 8;\n              }\n              ee >>>= X, oe -= X, U.back += X;\n            }\n            if (ee >>>= S, oe -= S, U.back += S, L & 64) {\n              te.msg = \"invalid distance code\", U.mode = Ve;\n              break;\n            }\n            U.offset = q, U.extra = L & 15, U.mode = Te;\n          /* falls through */\n          case Te:\n            if (U.extra) {\n              for (ge = U.extra; oe < ge; ) {\n                if (de === 0)\n                  break e;\n                de--, ee += ye[I++] << oe, oe += 8;\n              }\n              U.offset += ee & (1 << U.extra) - 1, ee >>>= U.extra, oe -= U.extra, U.back += U.extra;\n            }\n            if (U.offset > U.dmax) {\n              te.msg = \"invalid distance too far back\", U.mode = Ve;\n              break;\n            }\n            U.mode = Fe;\n          /* falls through */\n          case Fe:\n            if (H === 0)\n              break e;\n            if (_ = M - H, U.offset > _) {\n              if (_ = U.offset - _, _ > U.whave && U.sane) {\n                te.msg = \"invalid distance too far back\", U.mode = Ve;\n                break;\n              }\n              _ > U.wnext ? (_ -= U.wnext, d = U.wsize - _) : d = U.wnext - _, _ > U.length && (_ = U.length), u = U.window;\n            } else\n              u = it, d = fe - U.offset, _ = U.length;\n            _ > H && (_ = H), H -= _, U.length -= _;\n            do\n              it[fe++] = u[d++];\n            while (--_);\n            U.length === 0 && (U.mode = Be);\n            break;\n          case Se:\n            if (H === 0)\n              break e;\n            it[fe++] = U.length, H--, U.mode = Be;\n            break;\n          case Ye:\n            if (U.wrap) {\n              for (; oe < 32; ) {\n                if (de === 0)\n                  break e;\n                de--, ee |= ye[I++] << oe, oe += 8;\n              }\n              if (M -= H, te.total_out += M, U.total += M, M && (te.adler = U.check = /*UPDATE(state.check, put - _out, _out);*/\n              U.flags ? t(U.check, it, M, fe - M) : i(U.check, it, M, fe - M)), M = H, (U.flags ? ee : he(ee)) !== U.check) {\n                te.msg = \"incorrect data check\", U.mode = Ve;\n                break;\n              }\n              ee = 0, oe = 0;\n            }\n            U.mode = Je;\n          /* falls through */\n          case Je:\n            if (U.wrap && U.flags) {\n              for (; oe < 32; ) {\n                if (de === 0)\n                  break e;\n                de--, ee += ye[I++] << oe, oe += 8;\n              }\n              if (ee !== (U.total & 4294967295)) {\n                te.msg = \"incorrect length check\", U.mode = Ve;\n                break;\n              }\n              ee = 0, oe = 0;\n            }\n            U.mode = et;\n          /* falls through */\n          case et:\n            ce = w;\n            break e;\n          case Ve:\n            ce = k;\n            break e;\n          case tt:\n            return A;\n          case qe:\n          /* falls through */\n          default:\n            return E;\n        }\n    return te.next_out = fe, te.avail_out = H, te.next_in = I, te.avail_in = de, U.hold = ee, U.bits = oe, (U.wsize || M !== te.avail_out && U.mode < Ve && (U.mode < Ye || me !== h)) && st(te, te.output, te.next_out, M - te.avail_out), We -= te.avail_in, M -= te.avail_out, te.total_in += We, te.total_out += M, U.total += M, U.wrap && M && (te.adler = U.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n    U.flags ? t(U.check, it, M, te.next_out - M) : i(U.check, it, M, te.next_out - M)), te.data_type = U.bits + (U.last ? 64 : 0) + (U.mode === Q ? 128 : 0) + (U.mode === _e || U.mode === pe ? 256 : 0), (We === 0 && M === 0 || me === h) && ce === b && (ce = T), ce;\n  }\n  function ue(te) {\n    if (!te || !te.state)\n      return E;\n    var me = te.state;\n    return me.window && (me.window = null), te.state = null, b;\n  }\n  function xe(te, me) {\n    var U;\n    return !te || !te.state || (U = te.state, (U.wrap & 2) === 0) ? E : (U.head = me, me.done = !1, b);\n  }\n  function ke(te, me) {\n    var U = me.length, ye, it, I;\n    return !te || !te.state || (ye = te.state, ye.wrap !== 0 && ye.mode !== J) ? E : ye.mode === J && (it = 1, it = i(it, me, U, 0), it !== ye.check) ? k : (I = st(te, me, U, U), I ? (ye.mode = tt, A) : (ye.havedict = 1, b));\n  }\n  return inflate.inflateReset = He, inflate.inflateReset2 = De, inflate.inflateResetKeep = Ze, inflate.inflateInit = ot, inflate.inflateInit2 = lt, inflate.inflate = Z, inflate.inflateEnd = ue, inflate.inflateGetHeader = xe, inflate.inflateSetDictionary = ke, inflate.inflateInfo = \"pako inflate (from Nodeca project)\", inflate;\n}\nvar constants, hasRequiredConstants;\nfunction requireConstants() {\n  return hasRequiredConstants || (hasRequiredConstants = 1, constants = {\n    /* Allowed flush values; see deflate() and inflate() below for details */\n    Z_NO_FLUSH: 0,\n    Z_PARTIAL_FLUSH: 1,\n    Z_SYNC_FLUSH: 2,\n    Z_FULL_FLUSH: 3,\n    Z_FINISH: 4,\n    Z_BLOCK: 5,\n    Z_TREES: 6,\n    /* Return codes for the compression/decompression functions. Negative values\n    * are errors, positive values are used for special but normal events.\n    */\n    Z_OK: 0,\n    Z_STREAM_END: 1,\n    Z_NEED_DICT: 2,\n    Z_ERRNO: -1,\n    Z_STREAM_ERROR: -2,\n    Z_DATA_ERROR: -3,\n    //Z_MEM_ERROR:     -4,\n    Z_BUF_ERROR: -5,\n    //Z_VERSION_ERROR: -6,\n    /* compression levels */\n    Z_NO_COMPRESSION: 0,\n    Z_BEST_SPEED: 1,\n    Z_BEST_COMPRESSION: 9,\n    Z_DEFAULT_COMPRESSION: -1,\n    Z_FILTERED: 1,\n    Z_HUFFMAN_ONLY: 2,\n    Z_RLE: 3,\n    Z_FIXED: 4,\n    Z_DEFAULT_STRATEGY: 0,\n    /* Possible values of the data_type field (though see inflate()) */\n    Z_BINARY: 0,\n    Z_TEXT: 1,\n    //Z_ASCII:                1, // = Z_TEXT (deprecated)\n    Z_UNKNOWN: 2,\n    /* The deflate compression method */\n    Z_DEFLATED: 8\n    //Z_NULL:                 null // Use -1 or null inline, depending on var type\n  }), constants;\n}\nvar gzheader, hasRequiredGzheader;\nfunction requireGzheader() {\n  if (hasRequiredGzheader) return gzheader;\n  hasRequiredGzheader = 1;\n  function e() {\n    this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = \"\", this.comment = \"\", this.hcrc = 0, this.done = !1;\n  }\n  return gzheader = e, gzheader;\n}\nvar hasRequiredInflate;\nfunction requireInflate() {\n  if (hasRequiredInflate) return inflate$1;\n  hasRequiredInflate = 1;\n  var e = requireInflate$1(), i = requireCommon(), t = requireStrings(), r = requireConstants(), n = requireMessages(), a = requireZstream(), s = requireGzheader(), o = Object.prototype.toString;\n  function h(b) {\n    if (!(this instanceof h)) return new h(b);\n    this.options = i.assign({\n      chunkSize: 16384,\n      windowBits: 0,\n      to: \"\"\n    }, b || {});\n    var w = this.options;\n    w.raw && w.windowBits >= 0 && w.windowBits < 16 && (w.windowBits = -w.windowBits, w.windowBits === 0 && (w.windowBits = -15)), w.windowBits >= 0 && w.windowBits < 16 && !(b && b.windowBits) && (w.windowBits += 32), w.windowBits > 15 && w.windowBits < 48 && (w.windowBits & 15) === 0 && (w.windowBits |= 15), this.err = 0, this.msg = \"\", this.ended = !1, this.chunks = [], this.strm = new a(), this.strm.avail_out = 0;\n    var g = e.inflateInit2(\n      this.strm,\n      w.windowBits\n    );\n    if (g !== r.Z_OK)\n      throw new Error(n[g]);\n    if (this.header = new s(), e.inflateGetHeader(this.strm, this.header), w.dictionary && (typeof w.dictionary == \"string\" ? w.dictionary = t.string2buf(w.dictionary) : o.call(w.dictionary) === \"[object ArrayBuffer]\" && (w.dictionary = new Uint8Array(w.dictionary)), w.raw && (g = e.inflateSetDictionary(this.strm, w.dictionary), g !== r.Z_OK)))\n      throw new Error(n[g]);\n  }\n  h.prototype.push = function(b, w) {\n    var g = this.strm, E = this.options.chunkSize, k = this.options.dictionary, A, T, C, D, $, P = !1;\n    if (this.ended)\n      return !1;\n    T = w === ~~w ? w : w === !0 ? r.Z_FINISH : r.Z_NO_FLUSH, typeof b == \"string\" ? g.input = t.binstring2buf(b) : o.call(b) === \"[object ArrayBuffer]\" ? g.input = new Uint8Array(b) : g.input = b, g.next_in = 0, g.avail_in = g.input.length;\n    do {\n      if (g.avail_out === 0 && (g.output = new i.Buf8(E), g.next_out = 0, g.avail_out = E), A = e.inflate(g, r.Z_NO_FLUSH), A === r.Z_NEED_DICT && k && (A = e.inflateSetDictionary(this.strm, k)), A === r.Z_BUF_ERROR && P === !0 && (A = r.Z_OK, P = !1), A !== r.Z_STREAM_END && A !== r.Z_OK)\n        return this.onEnd(A), this.ended = !0, !1;\n      g.next_out && (g.avail_out === 0 || A === r.Z_STREAM_END || g.avail_in === 0 && (T === r.Z_FINISH || T === r.Z_SYNC_FLUSH)) && (this.options.to === \"string\" ? (C = t.utf8border(g.output, g.next_out), D = g.next_out - C, $ = t.buf2string(g.output, C), g.next_out = D, g.avail_out = E - D, D && i.arraySet(g.output, g.output, C, D, 0), this.onData($)) : this.onData(i.shrinkBuf(g.output, g.next_out))), g.avail_in === 0 && g.avail_out === 0 && (P = !0);\n    } while ((g.avail_in > 0 || g.avail_out === 0) && A !== r.Z_STREAM_END);\n    return A === r.Z_STREAM_END && (T = r.Z_FINISH), T === r.Z_FINISH ? (A = e.inflateEnd(this.strm), this.onEnd(A), this.ended = !0, A === r.Z_OK) : (T === r.Z_SYNC_FLUSH && (this.onEnd(r.Z_OK), g.avail_out = 0), !0);\n  }, h.prototype.onData = function(b) {\n    this.chunks.push(b);\n  }, h.prototype.onEnd = function(b) {\n    b === r.Z_OK && (this.options.to === \"string\" ? this.result = this.chunks.join(\"\") : this.result = i.flattenChunks(this.chunks)), this.chunks = [], this.err = b, this.msg = this.strm.msg;\n  };\n  function l(b, w) {\n    var g = new h(w);\n    if (g.push(b, !0), g.err)\n      throw g.msg || n[g.err];\n    return g.result;\n  }\n  function f(b, w) {\n    return w = w || {}, w.raw = !0, l(b, w);\n  }\n  return inflate$1.Inflate = h, inflate$1.inflate = l, inflate$1.inflateRaw = f, inflate$1.ungzip = l, inflate$1;\n}\nvar pako_1, hasRequiredPako;\nfunction requirePako() {\n  if (hasRequiredPako) return pako_1;\n  hasRequiredPako = 1;\n  var e = requireCommon().assign, i = requireDeflate(), t = requireInflate(), r = requireConstants(), n = {};\n  return e(n, i, t, r), pako_1 = n, pako_1;\n}\nvar pakoExports = requirePako();\nconst pako = /* @__PURE__ */ getDefaultExportFromCjs(pakoExports);\nvar UPNG = {};\nUPNG.toRGBA8 = function(e) {\n  var i = e.width, t = e.height;\n  if (e.tabs.acTL == null) return [UPNG.toRGBA8.decodeImage(e.data, i, t, e).buffer];\n  var r = [];\n  e.frames[0].data == null && (e.frames[0].data = e.data);\n  for (var n = i * t * 4, a = new Uint8Array(n), s = new Uint8Array(n), o = new Uint8Array(n), h = 0; h < e.frames.length; h++) {\n    var l = e.frames[h], f = l.rect.x, b = l.rect.y, w = l.rect.width, g = l.rect.height, E = UPNG.toRGBA8.decodeImage(l.data, w, g, e);\n    if (h != 0) for (var k = 0; k < n; k++) o[k] = a[k];\n    if (l.blend == 0 ? UPNG._copyTile(E, w, g, a, i, t, f, b, 0) : l.blend == 1 && UPNG._copyTile(E, w, g, a, i, t, f, b, 1), r.push(a.buffer.slice(0)), l.dispose != 0) {\n      if (l.dispose == 1) UPNG._copyTile(s, w, g, a, i, t, f, b, 0);\n      else if (l.dispose == 2) for (var k = 0; k < n; k++) a[k] = o[k];\n    }\n  }\n  return r;\n};\nUPNG.toRGBA8.decodeImage = function(e, i, t, r) {\n  var n = i * t, a = UPNG.decode._getBPP(r), s = Math.ceil(i * a / 8), o = new Uint8Array(n * 4), h = new Uint32Array(o.buffer), l = r.ctype, f = r.depth, b = UPNG._bin.readUshort;\n  if (l == 6) {\n    var w = n << 2;\n    if (f == 8) for (var g = 0; g < w; g += 4)\n      o[g] = e[g], o[g + 1] = e[g + 1], o[g + 2] = e[g + 2], o[g + 3] = e[g + 3];\n    if (f == 16) for (var g = 0; g < w; g++)\n      o[g] = e[g << 1];\n  } else if (l == 2) {\n    var E = r.tabs.tRNS;\n    if (E == null) {\n      if (f == 8) for (var g = 0; g < n; g++) {\n        var k = g * 3;\n        h[g] = 255 << 24 | e[k + 2] << 16 | e[k + 1] << 8 | e[k];\n      }\n      if (f == 16) for (var g = 0; g < n; g++) {\n        var k = g * 6;\n        h[g] = 255 << 24 | e[k + 4] << 16 | e[k + 2] << 8 | e[k];\n      }\n    } else {\n      var A = E[0], T = E[1], C = E[2];\n      if (f == 8) for (var g = 0; g < n; g++) {\n        var D = g << 2, k = g * 3;\n        h[g] = 255 << 24 | e[k + 2] << 16 | e[k + 1] << 8 | e[k], e[k] == A && e[k + 1] == T && e[k + 2] == C && (o[D + 3] = 0);\n      }\n      if (f == 16) for (var g = 0; g < n; g++) {\n        var D = g << 2, k = g * 6;\n        h[g] = 255 << 24 | e[k + 4] << 16 | e[k + 2] << 8 | e[k], b(e, k) == A && b(e, k + 2) == T && b(e, k + 4) == C && (o[D + 3] = 0);\n      }\n    }\n  } else if (l == 3) {\n    var $ = r.tabs.PLTE, P = r.tabs.tRNS, z = P ? P.length : 0;\n    if (f == 1) for (var B = 0; B < t; B++)\n      for (var F = B * s, O = B * i, g = 0; g < i; g++) {\n        var D = O + g << 2, N = e[F + (g >> 3)] >> 7 - ((g & 7) << 0) & 1, G = 3 * N;\n        o[D] = $[G], o[D + 1] = $[G + 1], o[D + 2] = $[G + 2], o[D + 3] = N < z ? P[N] : 255;\n      }\n    if (f == 2) for (var B = 0; B < t; B++)\n      for (var F = B * s, O = B * i, g = 0; g < i; g++) {\n        var D = O + g << 2, N = e[F + (g >> 2)] >> 6 - ((g & 3) << 1) & 3, G = 3 * N;\n        o[D] = $[G], o[D + 1] = $[G + 1], o[D + 2] = $[G + 2], o[D + 3] = N < z ? P[N] : 255;\n      }\n    if (f == 4) for (var B = 0; B < t; B++)\n      for (var F = B * s, O = B * i, g = 0; g < i; g++) {\n        var D = O + g << 2, N = e[F + (g >> 1)] >> 4 - ((g & 1) << 2) & 15, G = 3 * N;\n        o[D] = $[G], o[D + 1] = $[G + 1], o[D + 2] = $[G + 2], o[D + 3] = N < z ? P[N] : 255;\n      }\n    if (f == 8) for (var g = 0; g < n; g++) {\n      var D = g << 2, N = e[g], G = 3 * N;\n      o[D] = $[G], o[D + 1] = $[G + 1], o[D + 2] = $[G + 2], o[D + 3] = N < z ? P[N] : 255;\n    }\n  } else if (l == 4) {\n    if (f == 8) for (var g = 0; g < n; g++) {\n      var D = g << 2, V = g << 1, J = e[V];\n      o[D] = J, o[D + 1] = J, o[D + 2] = J, o[D + 3] = e[V + 1];\n    }\n    if (f == 16) for (var g = 0; g < n; g++) {\n      var D = g << 2, V = g << 2, J = e[V];\n      o[D] = J, o[D + 1] = J, o[D + 2] = J, o[D + 3] = e[V + 2];\n    }\n  } else if (l == 0)\n    for (var A = r.tabs.tRNS ? r.tabs.tRNS : -1, B = 0; B < t; B++) {\n      var Q = B * s, W = B * i;\n      if (f == 1) for (var ne = 0; ne < i; ne++) {\n        var J = 255 * (e[Q + (ne >>> 3)] >>> 7 - (ne & 7) & 1), pe = J == A * 255 ? 0 : 255;\n        h[W + ne] = pe << 24 | J << 16 | J << 8 | J;\n      }\n      else if (f == 2) for (var ne = 0; ne < i; ne++) {\n        var J = 85 * (e[Q + (ne >>> 2)] >>> 6 - ((ne & 3) << 1) & 3), pe = J == A * 85 ? 0 : 255;\n        h[W + ne] = pe << 24 | J << 16 | J << 8 | J;\n      }\n      else if (f == 4) for (var ne = 0; ne < i; ne++) {\n        var J = 17 * (e[Q + (ne >>> 1)] >>> 4 - ((ne & 1) << 2) & 15), pe = J == A * 17 ? 0 : 255;\n        h[W + ne] = pe << 24 | J << 16 | J << 8 | J;\n      }\n      else if (f == 8) for (var ne = 0; ne < i; ne++) {\n        var J = e[Q + ne], pe = J == A ? 0 : 255;\n        h[W + ne] = pe << 24 | J << 16 | J << 8 | J;\n      }\n      else if (f == 16) for (var ne = 0; ne < i; ne++) {\n        var J = e[Q + (ne << 1)], pe = b(e, Q + (ne << g)) == A ? 0 : 255;\n        h[W + ne] = pe << 24 | J << 16 | J << 8 | J;\n      }\n    }\n  return o;\n};\nUPNG.decode = function(e) {\n  for (var i = new Uint8Array(e), t = 8, r = UPNG._bin, n = r.readUshort, a = r.readUint, s = { tabs: {}, frames: [] }, o = new Uint8Array(i.length), h = 0, l, f = 0, b = [137, 80, 78, 71, 13, 10, 26, 10], w = 0; w < 8; w++) if (i[w] != b[w]) throw \"The input is not a PNG file!\";\n  for (; t < i.length; ) {\n    var g = r.readUint(i, t);\n    t += 4;\n    var E = r.readASCII(i, t, 4);\n    if (t += 4, E == \"IHDR\")\n      UPNG.decode._IHDR(i, t, s);\n    else if (E == \"IDAT\") {\n      for (var w = 0; w < g; w++) o[h + w] = i[t + w];\n      h += g;\n    } else if (E == \"acTL\")\n      s.tabs[E] = { num_frames: a(i, t), num_plays: a(i, t + 4) }, l = new Uint8Array(i.length);\n    else if (E == \"fcTL\") {\n      if (f != 0) {\n        var k = s.frames[s.frames.length - 1];\n        k.data = UPNG.decode._decompress(s, l.slice(0, f), k.rect.width, k.rect.height), f = 0;\n      }\n      var A = { x: a(i, t + 12), y: a(i, t + 16), width: a(i, t + 4), height: a(i, t + 8) }, T = n(i, t + 22);\n      T = n(i, t + 20) / (T == 0 ? 100 : T);\n      var C = { rect: A, delay: Math.round(T * 1e3), dispose: i[t + 24], blend: i[t + 25] };\n      s.frames.push(C);\n    } else if (E == \"fdAT\") {\n      for (var w = 0; w < g - 4; w++) l[f + w] = i[t + w + 4];\n      f += g - 4;\n    } else if (E == \"pHYs\")\n      s.tabs[E] = [r.readUint(i, t), r.readUint(i, t + 4), i[t + 8]];\n    else if (E == \"cHRM\") {\n      s.tabs[E] = [];\n      for (var w = 0; w < 8; w++) s.tabs[E].push(r.readUint(i, t + w * 4));\n    } else if (E == \"tEXt\") {\n      s.tabs[E] == null && (s.tabs[E] = {});\n      var D = r.nextZero(i, t), $ = r.readASCII(i, t, D - t), P = r.readASCII(i, D + 1, t + g - D - 1);\n      s.tabs[E][$] = P;\n    } else if (E == \"iTXt\") {\n      s.tabs[E] == null && (s.tabs[E] = {});\n      var D = 0, z = t;\n      D = r.nextZero(i, z);\n      var $ = r.readASCII(i, z, D - z);\n      z = D + 1, i[z], i[z + 1], z += 2, D = r.nextZero(i, z), r.readASCII(i, z, D - z), z = D + 1, D = r.nextZero(i, z), r.readUTF8(i, z, D - z), z = D + 1;\n      var P = r.readUTF8(i, z, g - (z - t));\n      s.tabs[E][$] = P;\n    } else if (E == \"PLTE\")\n      s.tabs[E] = r.readBytes(i, t, g);\n    else if (E == \"hIST\") {\n      var B = s.tabs.PLTE.length / 3;\n      s.tabs[E] = [];\n      for (var w = 0; w < B; w++) s.tabs[E].push(n(i, t + w * 2));\n    } else if (E == \"tRNS\")\n      s.ctype == 3 ? s.tabs[E] = r.readBytes(i, t, g) : s.ctype == 0 ? s.tabs[E] = n(i, t) : s.ctype == 2 && (s.tabs[E] = [n(i, t), n(i, t + 2), n(i, t + 4)]);\n    else if (E == \"gAMA\") s.tabs[E] = r.readUint(i, t) / 1e5;\n    else if (E == \"sRGB\") s.tabs[E] = i[t];\n    else if (E == \"bKGD\")\n      s.ctype == 0 || s.ctype == 4 ? s.tabs[E] = [n(i, t)] : s.ctype == 2 || s.ctype == 6 ? s.tabs[E] = [n(i, t), n(i, t + 2), n(i, t + 4)] : s.ctype == 3 && (s.tabs[E] = i[t]);\n    else if (E == \"IEND\")\n      break;\n    t += g, r.readUint(i, t), t += 4;\n  }\n  if (f != 0) {\n    var k = s.frames[s.frames.length - 1];\n    k.data = UPNG.decode._decompress(s, l.slice(0, f), k.rect.width, k.rect.height), f = 0;\n  }\n  return s.data = UPNG.decode._decompress(s, o, s.width, s.height), delete s.compress, delete s.interlace, delete s.filter, s;\n};\nUPNG.decode._decompress = function(e, i, t, r) {\n  var n = UPNG.decode._getBPP(e), a = Math.ceil(t * n / 8), s = new Uint8Array((a + 1 + e.interlace) * r);\n  return i = UPNG.decode._inflate(i, s), e.interlace == 0 ? i = UPNG.decode._filterZero(i, e, 0, t, r) : e.interlace == 1 && (i = UPNG.decode._readInterlace(i, e)), i;\n};\nUPNG.decode._inflate = function(e, i) {\n  var t = UPNG.inflateRaw(new Uint8Array(e.buffer, 2, e.length - 6), i);\n  return t;\n};\nUPNG.inflateRaw = function() {\n  var e = {};\n  return e.H = {}, e.H.N = function(i, t) {\n    var r = Uint8Array, n = 0, a = 0, s = 0, o = 0, h = 0, l = 0, f = 0, b = 0, w = 0, g, E;\n    if (i[0] == 3 && i[1] == 0) return t || new r(0);\n    var k = e.H, A = k.b, T = k.e, C = k.R, D = k.n, $ = k.A, P = k.Z, z = k.m, B = t == null;\n    for (B && (t = new r(i.length >>> 2 << 3)); n == 0; ) {\n      if (n = A(i, w, 1), a = A(i, w + 1, 2), w += 3, a == 0) {\n        (w & 7) != 0 && (w += 8 - (w & 7));\n        var F = (w >>> 3) + 4, O = i[F - 4] | i[F - 3] << 8;\n        B && (t = e.H.W(t, b + O)), t.set(new r(i.buffer, i.byteOffset + F, O), b), w = F + O << 3, b += O;\n        continue;\n      }\n      if (B && (t = e.H.W(t, b + (1 << 17))), a == 1 && (g = z.J, E = z.h, l = 511, f = 31), a == 2) {\n        s = T(i, w, 5) + 257, o = T(i, w + 5, 5) + 1, h = T(i, w + 10, 4) + 4, w += 14;\n        for (var N = 1, G = 0; G < 38; G += 2)\n          z.Q[G] = 0, z.Q[G + 1] = 0;\n        for (var G = 0; G < h; G++) {\n          var V = T(i, w + G * 3, 3);\n          z.Q[(z.X[G] << 1) + 1] = V, V > N && (N = V);\n        }\n        w += 3 * h, D(z.Q, N), $(z.Q, N, z.u), g = z.w, E = z.d, w = C(z.u, (1 << N) - 1, s + o, i, w, z.v);\n        var J = k.V(z.v, 0, s, z.C);\n        l = (1 << J) - 1;\n        var Q = k.V(z.v, s, o, z.D);\n        f = (1 << Q) - 1, D(z.C, J), $(z.C, J, g), D(z.D, Q), $(z.D, Q, E);\n      }\n      for (; ; ) {\n        var W = g[P(i, w) & l];\n        w += W & 15;\n        var ne = W >>> 4;\n        if (!(ne >>> 8))\n          t[b++] = ne;\n        else {\n          if (ne == 256)\n            break;\n          var pe = b + ne - 254;\n          if (ne > 264) {\n            var be = z.q[ne - 257];\n            pe = b + (be >>> 3) + T(i, w, be & 7), w += be & 7;\n          }\n          var ve = E[P(i, w) & f];\n          w += ve & 15;\n          var Ee = ve >>> 4, Ae = z.c[Ee], _e = (Ae >>> 4) + A(i, w, Ae & 15);\n          for (w += Ae & 15; b < pe; )\n            t[b] = t[b++ - _e], t[b] = t[b++ - _e], t[b] = t[b++ - _e], t[b] = t[b++ - _e];\n          b = pe;\n        }\n      }\n    }\n    return t.length == b ? t : t.slice(0, b);\n  }, e.H.W = function(i, t) {\n    var r = i.length;\n    if (t <= r) return i;\n    var n = new Uint8Array(r << 1);\n    return n.set(i, 0), n;\n  }, e.H.R = function(i, t, r, n, a, s) {\n    for (var o = e.H.e, h = e.H.Z, l = 0; l < r; ) {\n      var f = i[h(n, a) & t];\n      a += f & 15;\n      var b = f >>> 4;\n      if (b <= 15)\n        s[l] = b, l++;\n      else {\n        var w = 0, g = 0;\n        b == 16 ? (g = 3 + o(n, a, 2), a += 2, w = s[l - 1]) : b == 17 ? (g = 3 + o(n, a, 3), a += 3) : b == 18 && (g = 11 + o(n, a, 7), a += 7);\n        for (var E = l + g; l < E; )\n          s[l] = w, l++;\n      }\n    }\n    return a;\n  }, e.H.V = function(i, t, r, n) {\n    for (var a = 0, s = 0, o = n.length >>> 1; s < r; ) {\n      var h = i[s + t];\n      n[s << 1] = 0, n[(s << 1) + 1] = h, h > a && (a = h), s++;\n    }\n    for (; s < o; )\n      n[s << 1] = 0, n[(s << 1) + 1] = 0, s++;\n    return a;\n  }, e.H.n = function(i, t) {\n    for (var r = e.H.m, n = i.length, a, s, o, h, l, f = r.j, h = 0; h <= t; h++) f[h] = 0;\n    for (h = 1; h < n; h += 2) f[i[h]]++;\n    var b = r.K;\n    for (a = 0, f[0] = 0, s = 1; s <= t; s++)\n      a = a + f[s - 1] << 1, b[s] = a;\n    for (o = 0; o < n; o += 2)\n      l = i[o + 1], l != 0 && (i[o] = b[l], b[l]++);\n  }, e.H.A = function(i, t, r) {\n    for (var n = i.length, a = e.H.m, s = a.r, o = 0; o < n; o += 2) if (i[o + 1] != 0)\n      for (var h = o >> 1, l = i[o + 1], f = h << 4 | l, b = t - l, w = i[o] << b, g = w + (1 << b); w != g; ) {\n        var E = s[w] >>> 15 - t;\n        r[E] = f, w++;\n      }\n  }, e.H.l = function(i, t) {\n    for (var r = e.H.m.r, n = 15 - t, a = 0; a < i.length; a += 2) {\n      var s = i[a] << t - i[a + 1];\n      i[a] = r[s] >>> n;\n    }\n  }, e.H.M = function(i, t, r) {\n    r = r << (t & 7);\n    var n = t >>> 3;\n    i[n] |= r, i[n + 1] |= r >>> 8;\n  }, e.H.I = function(i, t, r) {\n    r = r << (t & 7);\n    var n = t >>> 3;\n    i[n] |= r, i[n + 1] |= r >>> 8, i[n + 2] |= r >>> 16;\n  }, e.H.e = function(i, t, r) {\n    return (i[t >>> 3] | i[(t >>> 3) + 1] << 8) >>> (t & 7) & (1 << r) - 1;\n  }, e.H.b = function(i, t, r) {\n    return (i[t >>> 3] | i[(t >>> 3) + 1] << 8 | i[(t >>> 3) + 2] << 16) >>> (t & 7) & (1 << r) - 1;\n  }, e.H.Z = function(i, t) {\n    return (i[t >>> 3] | i[(t >>> 3) + 1] << 8 | i[(t >>> 3) + 2] << 16) >>> (t & 7);\n  }, e.H.i = function(i, t) {\n    return (i[t >>> 3] | i[(t >>> 3) + 1] << 8 | i[(t >>> 3) + 2] << 16 | i[(t >>> 3) + 3] << 24) >>> (t & 7);\n  }, e.H.m = function() {\n    var i = Uint16Array, t = Uint32Array;\n    return { K: new i(16), j: new i(16), X: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], S: [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999], T: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0], q: new i(32), p: [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 65535, 65535], z: [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0], c: new t(32), J: new i(512), _: [], h: new i(32), $: [], w: new i(32768), C: [], v: [], d: new i(32768), D: [], u: new i(512), Q: [], r: new i(32768), s: new t(286), Y: new t(30), a: new t(19), t: new t(15e3), k: new i(65536), g: new i(32768) };\n  }(), function() {\n    for (var i = e.H.m, t = 32768, r = 0; r < t; r++) {\n      var n = r;\n      n = (n & 2863311530) >>> 1 | (n & 1431655765) << 1, n = (n & 3435973836) >>> 2 | (n & 858993459) << 2, n = (n & 4042322160) >>> 4 | (n & 252645135) << 4, n = (n & 4278255360) >>> 8 | (n & 16711935) << 8, i.r[r] = (n >>> 16 | n << 16) >>> 17;\n    }\n    function a(s, o, h) {\n      for (; o-- != 0; ) s.push(0, h);\n    }\n    for (var r = 0; r < 32; r++)\n      i.q[r] = i.S[r] << 3 | i.T[r], i.c[r] = i.p[r] << 4 | i.z[r];\n    a(i._, 144, 8), a(i._, 112, 9), a(i._, 24, 7), a(i._, 8, 8), e.H.n(i._, 9), e.H.A(i._, 9, i.J), e.H.l(i._, 9), a(i.$, 32, 5), e.H.n(i.$, 5), e.H.A(i.$, 5, i.h), e.H.l(i.$, 5), a(i.Q, 19, 0), a(i.C, 286, 0), a(i.D, 30, 0), a(i.v, 320, 0);\n  }(), e.H.N;\n}();\nUPNG.decode._readInterlace = function(e, i) {\n  for (var t = i.width, r = i.height, n = UPNG.decode._getBPP(i), a = n >> 3, s = Math.ceil(t * n / 8), o = new Uint8Array(r * s), h = 0, l = [0, 0, 4, 0, 2, 0, 1], f = [0, 4, 0, 2, 0, 1, 0], b = [8, 8, 8, 4, 4, 2, 2], w = [8, 8, 4, 4, 2, 2, 1], g = 0; g < 7; ) {\n    for (var E = b[g], k = w[g], A = 0, T = 0, C = l[g]; C < r; )\n      C += E, T++;\n    for (var D = f[g]; D < t; )\n      D += k, A++;\n    var $ = Math.ceil(A * n / 8);\n    UPNG.decode._filterZero(e, i, h, A, T);\n    for (var P = 0, z = l[g]; z < r; ) {\n      for (var B = f[g], F = h + P * $ << 3; B < t; ) {\n        if (n == 1) {\n          var O = e[F >> 3];\n          O = O >> 7 - (F & 7) & 1, o[z * s + (B >> 3)] |= O << 7 - ((B & 7) << 0);\n        }\n        if (n == 2) {\n          var O = e[F >> 3];\n          O = O >> 6 - (F & 7) & 3, o[z * s + (B >> 2)] |= O << 6 - ((B & 3) << 1);\n        }\n        if (n == 4) {\n          var O = e[F >> 3];\n          O = O >> 4 - (F & 7) & 15, o[z * s + (B >> 1)] |= O << 4 - ((B & 1) << 2);\n        }\n        if (n >= 8)\n          for (var N = z * s + B * a, G = 0; G < a; G++) o[N + G] = e[(F >> 3) + G];\n        F += n, B += k;\n      }\n      P++, z += E;\n    }\n    A * T != 0 && (h += T * (1 + $)), g = g + 1;\n  }\n  return o;\n};\nUPNG.decode._getBPP = function(e) {\n  var i = [1, null, 3, 1, 2, null, 4][e.ctype];\n  return i * e.depth;\n};\nUPNG.decode._filterZero = function(e, i, t, r, n) {\n  var a = UPNG.decode._getBPP(i), s = Math.ceil(r * a / 8), o = UPNG.decode._paeth;\n  a = Math.ceil(a / 8);\n  var h = 0, l = 1, f = e[t], b = 0;\n  if (f > 1 && (e[t] = [0, 0, 1][f - 2]), f == 3) for (b = a; b < s; b++) e[b + 1] = e[b + 1] + (e[b + 1 - a] >>> 1) & 255;\n  for (var w = 0; w < n; w++)\n    if (h = t + w * s, l = h + w + 1, f = e[l - 1], b = 0, f == 0) for (; b < s; b++) e[h + b] = e[l + b];\n    else if (f == 1) {\n      for (; b < a; b++) e[h + b] = e[l + b];\n      for (; b < s; b++) e[h + b] = e[l + b] + e[h + b - a];\n    } else if (f == 2)\n      for (; b < s; b++) e[h + b] = e[l + b] + e[h + b - s];\n    else if (f == 3) {\n      for (; b < a; b++) e[h + b] = e[l + b] + (e[h + b - s] >>> 1);\n      for (; b < s; b++) e[h + b] = e[l + b] + (e[h + b - s] + e[h + b - a] >>> 1);\n    } else {\n      for (; b < a; b++) e[h + b] = e[l + b] + o(0, e[h + b - s], 0);\n      for (; b < s; b++) e[h + b] = e[l + b] + o(e[h + b - a], e[h + b - s], e[h + b - a - s]);\n    }\n  return e;\n};\nUPNG.decode._paeth = function(e, i, t) {\n  var r = e + i - t, n = r - e, a = r - i, s = r - t;\n  return n * n <= a * a && n * n <= s * s ? e : a * a <= s * s ? i : t;\n};\nUPNG.decode._IHDR = function(e, i, t) {\n  var r = UPNG._bin;\n  t.width = r.readUint(e, i), i += 4, t.height = r.readUint(e, i), i += 4, t.depth = e[i], i++, t.ctype = e[i], i++, t.compress = e[i], i++, t.filter = e[i], i++, t.interlace = e[i], i++;\n};\nUPNG._bin = {\n  nextZero: function(e, i) {\n    for (; e[i] != 0; ) i++;\n    return i;\n  },\n  readUshort: function(e, i) {\n    return e[i] << 8 | e[i + 1];\n  },\n  writeUshort: function(e, i, t) {\n    e[i] = t >> 8 & 255, e[i + 1] = t & 255;\n  },\n  readUint: function(e, i) {\n    return e[i] * (256 * 256 * 256) + (e[i + 1] << 16 | e[i + 2] << 8 | e[i + 3]);\n  },\n  writeUint: function(e, i, t) {\n    e[i] = t >> 24 & 255, e[i + 1] = t >> 16 & 255, e[i + 2] = t >> 8 & 255, e[i + 3] = t & 255;\n  },\n  readASCII: function(e, i, t) {\n    for (var r = \"\", n = 0; n < t; n++) r += String.fromCharCode(e[i + n]);\n    return r;\n  },\n  writeASCII: function(e, i, t) {\n    for (var r = 0; r < t.length; r++) e[i + r] = t.charCodeAt(r);\n  },\n  readBytes: function(e, i, t) {\n    for (var r = [], n = 0; n < t; n++) r.push(e[i + n]);\n    return r;\n  },\n  pad: function(e) {\n    return e.length < 2 ? \"0\" + e : e;\n  },\n  readUTF8: function(e, i, t) {\n    for (var r = \"\", n, a = 0; a < t; a++) r += \"%\" + UPNG._bin.pad(e[i + a].toString(16));\n    try {\n      n = decodeURIComponent(r);\n    } catch {\n      return UPNG._bin.readASCII(e, i, t);\n    }\n    return n;\n  }\n};\nUPNG._copyTile = function(e, i, t, r, n, a, s, o, h) {\n  for (var l = Math.min(i, n), f = Math.min(t, a), b = 0, w = 0, g = 0; g < f; g++)\n    for (var E = 0; E < l; E++)\n      if (s >= 0 && o >= 0 ? (b = g * i + E << 2, w = (o + g) * n + s + E << 2) : (b = (-o + g) * i - s + E << 2, w = g * n + E << 2), h == 0)\n        r[w] = e[b], r[w + 1] = e[b + 1], r[w + 2] = e[b + 2], r[w + 3] = e[b + 3];\n      else if (h == 1) {\n        var k = e[b + 3] * 0.00392156862745098, A = e[b] * k, T = e[b + 1] * k, C = e[b + 2] * k, D = r[w + 3] * (1 / 255), $ = r[w] * D, P = r[w + 1] * D, z = r[w + 2] * D, B = 1 - k, F = k + D * B, O = F == 0 ? 0 : 1 / F;\n        r[w + 3] = 255 * F, r[w + 0] = (A + $ * B) * O, r[w + 1] = (T + P * B) * O, r[w + 2] = (C + z * B) * O;\n      } else if (h == 2) {\n        var k = e[b + 3], A = e[b], T = e[b + 1], C = e[b + 2], D = r[w + 3], $ = r[w], P = r[w + 1], z = r[w + 2];\n        k == D && A == $ && T == P && C == z ? (r[w] = 0, r[w + 1] = 0, r[w + 2] = 0, r[w + 3] = 0) : (r[w] = A, r[w + 1] = T, r[w + 2] = C, r[w + 3] = k);\n      } else if (h == 3) {\n        var k = e[b + 3], A = e[b], T = e[b + 1], C = e[b + 2], D = r[w + 3], $ = r[w], P = r[w + 1], z = r[w + 2];\n        if (k == D && A == $ && T == P && C == z) continue;\n        if (k < 220 && D > 20) return !1;\n      }\n  return !0;\n};\nUPNG.encode = function(e, i, t, r, n, a, s) {\n  r == null && (r = 0), s == null && (s = !1);\n  var o = UPNG.encode.compress(e, i, t, r, [!1, !1, !1, 0, s]);\n  return UPNG.encode.compressPNG(o, -1), UPNG.encode._main(o, i, t, n, a);\n};\nUPNG.encodeLL = function(e, i, t, r, n, a, s, o) {\n  for (var h = { ctype: 0 + (r == 1 ? 0 : 2) + (n == 0 ? 0 : 4), depth: a, frames: [] }, l = (r + n) * a, f = l * i, b = 0; b < e.length; b++)\n    h.frames.push({ rect: { x: 0, y: 0, width: i, height: t }, img: new Uint8Array(e[b]), blend: 0, dispose: 1, bpp: Math.ceil(l / 8), bpl: Math.ceil(f / 8) });\n  UPNG.encode.compressPNG(h, 0, !0);\n  var w = UPNG.encode._main(h, i, t, s, o);\n  return w;\n};\nUPNG.encode._main = function(e, i, t, r, n) {\n  n == null && (n = {});\n  var a = UPNG.crc.crc, s = UPNG._bin.writeUint, o = UPNG._bin.writeUshort, h = UPNG._bin.writeASCII, l = 8, f = e.frames.length > 1, b = !1, w = 33 + (f ? 20 : 0);\n  if (n.sRGB != null && (w += 13), n.pHYs != null && (w += 21), e.ctype == 3) {\n    for (var g = e.plte.length, E = 0; E < g; E++) e.plte[E] >>> 24 != 255 && (b = !0);\n    w += 8 + g * 3 + 4 + (b ? 8 + g * 1 + 4 : 0);\n  }\n  for (var k = 0; k < e.frames.length; k++) {\n    var A = e.frames[k];\n    f && (w += 38), w += A.cimg.length + 12, k != 0 && (w += 4);\n  }\n  w += 12;\n  for (var T = new Uint8Array(w), C = [137, 80, 78, 71, 13, 10, 26, 10], E = 0; E < 8; E++) T[E] = C[E];\n  if (s(T, l, 13), l += 4, h(T, l, \"IHDR\"), l += 4, s(T, l, i), l += 4, s(T, l, t), l += 4, T[l] = e.depth, l++, T[l] = e.ctype, l++, T[l] = 0, l++, T[l] = 0, l++, T[l] = 0, l++, s(T, l, a(T, l - 17, 17)), l += 4, n.sRGB != null && (s(T, l, 1), l += 4, h(T, l, \"sRGB\"), l += 4, T[l] = n.sRGB, l++, s(T, l, a(T, l - 5, 5)), l += 4), n.pHYs != null && (s(T, l, 9), l += 4, h(T, l, \"pHYs\"), l += 4, s(T, l, n.pHYs[0]), l += 4, s(T, l, n.pHYs[1]), l += 4, T[l] = n.pHYs[2], l++, s(T, l, a(T, l - 13, 13)), l += 4), f && (s(T, l, 8), l += 4, h(T, l, \"acTL\"), l += 4, s(T, l, e.frames.length), l += 4, s(T, l, n.loop != null ? n.loop : 0), l += 4, s(T, l, a(T, l - 12, 12)), l += 4), e.ctype == 3) {\n    var g = e.plte.length;\n    s(T, l, g * 3), l += 4, h(T, l, \"PLTE\"), l += 4;\n    for (var E = 0; E < g; E++) {\n      var D = E * 3, $ = e.plte[E], P = $ & 255, z = $ >>> 8 & 255, B = $ >>> 16 & 255;\n      T[l + D + 0] = P, T[l + D + 1] = z, T[l + D + 2] = B;\n    }\n    if (l += g * 3, s(T, l, a(T, l - g * 3 - 4, g * 3 + 4)), l += 4, b) {\n      s(T, l, g), l += 4, h(T, l, \"tRNS\"), l += 4;\n      for (var E = 0; E < g; E++) T[l + E] = e.plte[E] >>> 24 & 255;\n      l += g, s(T, l, a(T, l - g - 4, g + 4)), l += 4;\n    }\n  }\n  for (var F = 0, k = 0; k < e.frames.length; k++) {\n    var A = e.frames[k];\n    f && (s(T, l, 26), l += 4, h(T, l, \"fcTL\"), l += 4, s(T, l, F++), l += 4, s(T, l, A.rect.width), l += 4, s(T, l, A.rect.height), l += 4, s(T, l, A.rect.x), l += 4, s(T, l, A.rect.y), l += 4, o(T, l, r[k]), l += 2, o(T, l, 1e3), l += 2, T[l] = A.dispose, l++, T[l] = A.blend, l++, s(T, l, a(T, l - 30, 30)), l += 4);\n    var O = A.cimg, g = O.length;\n    s(T, l, g + (k == 0 ? 0 : 4)), l += 4;\n    var N = l;\n    h(T, l, k == 0 ? \"IDAT\" : \"fdAT\"), l += 4, k != 0 && (s(T, l, F++), l += 4), T.set(O, l), l += g, s(T, l, a(T, N, l - N)), l += 4;\n  }\n  return s(T, l, 0), l += 4, h(T, l, \"IEND\"), l += 4, s(T, l, a(T, l - 4, 4)), l += 4, T.buffer;\n};\nUPNG.encode.compressPNG = function(e, i, t) {\n  for (var r = 0; r < e.frames.length; r++) {\n    var n = e.frames[r];\n    n.rect.width;\n    var a = n.rect.height, s = new Uint8Array(a * n.bpl + a);\n    n.cimg = UPNG.encode._filterZero(n.img, a, n.bpp, n.bpl, s, i, t);\n  }\n};\nUPNG.encode.compress = function(e, i, t, r, n) {\n  for (var a = n[0], s = n[1], o = n[2], h = n[3], l = n[4], f = 6, b = 8, w = 255, g = 0; g < e.length; g++)\n    for (var E = new Uint8Array(e[g]), k = E.length, A = 0; A < k; A += 4) w &= E[A + 3];\n  var T = w != 255, C = UPNG.encode.framize(e, i, t, a, s, o), D = {}, $ = [], P = [];\n  if (r != 0) {\n    for (var z = [], A = 0; A < C.length; A++) z.push(C[A].img.buffer);\n    for (var B = UPNG.encode.concatRGBA(z), F = UPNG.quantize(B, r), O = 0, N = new Uint8Array(F.abuf), A = 0; A < C.length; A++) {\n      var G = C[A].img, V = G.length;\n      P.push(new Uint8Array(F.inds.buffer, O >> 2, V >> 2));\n      for (var g = 0; g < V; g += 4)\n        G[g] = N[O + g], G[g + 1] = N[O + g + 1], G[g + 2] = N[O + g + 2], G[g + 3] = N[O + g + 3];\n      O += V;\n    }\n    for (var A = 0; A < F.plte.length; A++) $.push(F.plte[A].est.rgba);\n  } else\n    for (var g = 0; g < C.length; g++) {\n      var J = C[g], Q = new Uint32Array(J.img.buffer), W = J.rect.width, k = Q.length, ne = new Uint8Array(k);\n      P.push(ne);\n      for (var A = 0; A < k; A++) {\n        var pe = Q[A];\n        if (A != 0 && pe == Q[A - 1]) ne[A] = ne[A - 1];\n        else if (A > W && pe == Q[A - W]) ne[A] = ne[A - W];\n        else {\n          var be = D[pe];\n          if (be == null && (D[pe] = be = $.length, $.push(pe), $.length >= 300))\n            break;\n          ne[A] = be;\n        }\n      }\n    }\n  var ve = $.length;\n  ve <= 256 && l == !1 && (ve <= 2 ? b = 1 : ve <= 4 ? b = 2 : ve <= 16 ? b = 4 : b = 8, b = Math.max(b, h));\n  for (var g = 0; g < C.length; g++) {\n    var J = C[g];\n    J.rect.x, J.rect.y;\n    var W = J.rect.width, Ee = J.rect.height, Ae = J.img;\n    new Uint32Array(Ae.buffer);\n    var _e = 4 * W, Be = 4;\n    if (ve <= 256 && l == !1) {\n      _e = Math.ceil(b * W / 8);\n      for (var Me = new Uint8Array(_e * Ee), re = P[g], Te = 0; Te < Ee; Te++) {\n        var A = Te * _e, Fe = Te * W;\n        if (b == 8) for (var Se = 0; Se < W; Se++) Me[A + Se] = re[Fe + Se];\n        else if (b == 4) for (var Se = 0; Se < W; Se++) Me[A + (Se >> 1)] |= re[Fe + Se] << 4 - (Se & 1) * 4;\n        else if (b == 2) for (var Se = 0; Se < W; Se++) Me[A + (Se >> 2)] |= re[Fe + Se] << 6 - (Se & 3) * 2;\n        else if (b == 1) for (var Se = 0; Se < W; Se++) Me[A + (Se >> 3)] |= re[Fe + Se] << 7 - (Se & 7) * 1;\n      }\n      Ae = Me, f = 3, Be = 1;\n    } else if (T == !1 && C.length == 1) {\n      for (var Me = new Uint8Array(W * Ee * 3), Ye = W * Ee, A = 0; A < Ye; A++) {\n        var G = A * 3, Je = A * 4;\n        Me[G] = Ae[Je], Me[G + 1] = Ae[Je + 1], Me[G + 2] = Ae[Je + 2];\n      }\n      Ae = Me, f = 2, Be = 3, _e = 3 * W;\n    }\n    J.img = Ae, J.bpl = _e, J.bpp = Be;\n  }\n  return { ctype: f, depth: b, plte: $, frames: C };\n};\nUPNG.encode.framize = function(e, i, t, r, n, a) {\n  for (var s = [], o = 0; o < e.length; o++) {\n    var h = new Uint8Array(e[o]), l = new Uint32Array(h.buffer), f, b = 0, w = 0, g = i, E = t, k = r ? 1 : 0;\n    if (o != 0) {\n      for (var A = a || r || o == 1 || s[o - 2].dispose != 0 ? 1 : 2, T = 0, C = 1e9, D = 0; D < A; D++) {\n        for (var J = new Uint8Array(e[o - 1 - D]), $ = new Uint32Array(e[o - 1 - D]), P = i, z = t, B = -1, F = -1, O = 0; O < t; O++) for (var N = 0; N < i; N++) {\n          var G = O * i + N;\n          l[G] != $[G] && (N < P && (P = N), N > B && (B = N), O < z && (z = O), O > F && (F = O));\n        }\n        B == -1 && (P = z = B = F = 0), n && ((P & 1) == 1 && P--, (z & 1) == 1 && z--);\n        var V = (B - P + 1) * (F - z + 1);\n        V < C && (C = V, T = D, b = P, w = z, g = B - P + 1, E = F - z + 1);\n      }\n      var J = new Uint8Array(e[o - 1 - T]);\n      T == 1 && (s[o - 1].dispose = 2), f = new Uint8Array(g * E * 4), UPNG._copyTile(J, i, t, f, g, E, -b, -w, 0), k = UPNG._copyTile(h, i, t, f, g, E, -b, -w, 3) ? 1 : 0, k == 1 ? UPNG.encode._prepareDiff(h, i, t, f, { x: b, y: w, width: g, height: E }) : UPNG._copyTile(h, i, t, f, g, E, -b, -w, 0);\n    } else f = h.slice(0);\n    s.push({ rect: { x: b, y: w, width: g, height: E }, img: f, blend: k, dispose: 0 });\n  }\n  if (r) for (var o = 0; o < s.length; o++) {\n    var Q = s[o];\n    if (Q.blend != 1) {\n      var W = Q.rect, ne = s[o - 1].rect, pe = Math.min(W.x, ne.x), be = Math.min(W.y, ne.y), ve = Math.max(W.x + W.width, ne.x + ne.width), Ee = Math.max(W.y + W.height, ne.y + ne.height), Ae = { x: pe, y: be, width: ve - pe, height: Ee - be };\n      s[o - 1].dispose = 1, o - 1 != 0 && UPNG.encode._updateFrame(e, i, t, s, o - 1, Ae, n), UPNG.encode._updateFrame(e, i, t, s, o, Ae, n);\n    }\n  }\n  var _e = 0;\n  if (e.length != 1) for (var G = 0; G < s.length; G++) {\n    var Q = s[G];\n    _e += Q.rect.width * Q.rect.height;\n  }\n  return s;\n};\nUPNG.encode._updateFrame = function(e, i, t, r, n, a, s) {\n  for (var o = Uint8Array, h = Uint32Array, l = new o(e[n - 1]), f = new h(e[n - 1]), b = n + 1 < e.length ? new o(e[n + 1]) : null, w = new o(e[n]), g = new h(w.buffer), E = i, k = t, A = -1, T = -1, C = 0; C < a.height; C++) for (var D = 0; D < a.width; D++) {\n    var $ = a.x + D, P = a.y + C, z = P * i + $, B = g[z];\n    B == 0 || r[n - 1].dispose == 0 && f[z] == B && (b == null || b[z * 4 + 3] != 0) || ($ < E && (E = $), $ > A && (A = $), P < k && (k = P), P > T && (T = P));\n  }\n  A == -1 && (E = k = A = T = 0), s && ((E & 1) == 1 && E--, (k & 1) == 1 && k--), a = { x: E, y: k, width: A - E + 1, height: T - k + 1 };\n  var F = r[n];\n  F.rect = a, F.blend = 1, F.img = new Uint8Array(a.width * a.height * 4), r[n - 1].dispose == 0 ? (UPNG._copyTile(l, i, t, F.img, a.width, a.height, -a.x, -a.y, 0), UPNG.encode._prepareDiff(w, i, t, F.img, a)) : UPNG._copyTile(w, i, t, F.img, a.width, a.height, -a.x, -a.y, 0);\n};\nUPNG.encode._prepareDiff = function(e, i, t, r, n) {\n  UPNG._copyTile(e, i, t, r, n.width, n.height, -n.x, -n.y, 2);\n};\nUPNG.encode._filterZero = function(e, i, t, r, n, a, s) {\n  var o = [], h = [0, 1, 2, 3, 4];\n  a != -1 ? h = [a] : (i * r > 5e5 || t == 1) && (h = [0]);\n  var l;\n  s && (l = { level: 0 });\n  for (var f = s && UZIP != null ? UZIP : pako, b = 0; b < h.length; b++) {\n    for (var w = 0; w < i; w++) UPNG.encode._filterLine(n, e, w, r, t, h[b]);\n    o.push(f.deflate(n, l));\n  }\n  for (var g, E = 1e9, b = 0; b < o.length; b++) o[b].length < E && (g = b, E = o[b].length);\n  return o[g];\n};\nUPNG.encode._filterLine = function(e, i, t, r, n, a) {\n  var s = t * r, o = s + t, h = UPNG.decode._paeth;\n  if (e[o] = a, o++, a == 0)\n    if (r < 500) for (var l = 0; l < r; l++) e[o + l] = i[s + l];\n    else e.set(new Uint8Array(i.buffer, s, r), o);\n  else if (a == 1) {\n    for (var l = 0; l < n; l++) e[o + l] = i[s + l];\n    for (var l = n; l < r; l++) e[o + l] = i[s + l] - i[s + l - n] + 256 & 255;\n  } else if (t == 0) {\n    for (var l = 0; l < n; l++) e[o + l] = i[s + l];\n    if (a == 2) for (var l = n; l < r; l++) e[o + l] = i[s + l];\n    if (a == 3) for (var l = n; l < r; l++) e[o + l] = i[s + l] - (i[s + l - n] >> 1) + 256 & 255;\n    if (a == 4) for (var l = n; l < r; l++) e[o + l] = i[s + l] - h(i[s + l - n], 0, 0) + 256 & 255;\n  } else {\n    if (a == 2)\n      for (var l = 0; l < r; l++) e[o + l] = i[s + l] + 256 - i[s + l - r] & 255;\n    if (a == 3) {\n      for (var l = 0; l < n; l++) e[o + l] = i[s + l] + 256 - (i[s + l - r] >> 1) & 255;\n      for (var l = n; l < r; l++) e[o + l] = i[s + l] + 256 - (i[s + l - r] + i[s + l - n] >> 1) & 255;\n    }\n    if (a == 4) {\n      for (var l = 0; l < n; l++) e[o + l] = i[s + l] + 256 - h(0, i[s + l - r], 0) & 255;\n      for (var l = n; l < r; l++) e[o + l] = i[s + l] + 256 - h(i[s + l - n], i[s + l - r], i[s + l - n - r]) & 255;\n    }\n  }\n};\nUPNG.crc = {\n  table: function() {\n    for (var e = new Uint32Array(256), i = 0; i < 256; i++) {\n      for (var t = i, r = 0; r < 8; r++)\n        t & 1 ? t = 3988292384 ^ t >>> 1 : t = t >>> 1;\n      e[i] = t;\n    }\n    return e;\n  }(),\n  update: function(e, i, t, r) {\n    for (var n = 0; n < r; n++) e = UPNG.crc.table[(e ^ i[t + n]) & 255] ^ e >>> 8;\n    return e;\n  },\n  crc: function(e, i, t) {\n    return UPNG.crc.update(4294967295, e, i, t) ^ 4294967295;\n  }\n};\nUPNG.quantize = function(e, i) {\n  var t = new Uint8Array(e), r = t.slice(0), n = new Uint32Array(r.buffer), a = UPNG.quantize.getKDtree(r, i), s = a[0], o = a[1];\n  UPNG.quantize.planeDst;\n  for (var h = t, l = n, f = h.length, b = new Uint8Array(t.length >> 2), w = 0; w < f; w += 4) {\n    var g = h[w] * 0.00392156862745098, E = h[w + 1] * (1 / 255), k = h[w + 2] * (1 / 255), A = h[w + 3] * (1 / 255), T = UPNG.quantize.getNearest(s, g, E, k, A);\n    b[w >> 2] = T.ind, l[w >> 2] = T.est.rgba;\n  }\n  return { abuf: r.buffer, inds: b, plte: o };\n};\nUPNG.quantize.getKDtree = function(e, i, t) {\n  t == null && (t = 1e-4);\n  var r = new Uint32Array(e.buffer), n = { i0: 0, i1: e.length, bst: null, est: null, tdst: 0, left: null, right: null };\n  n.bst = UPNG.quantize.stats(e, n.i0, n.i1), n.est = UPNG.quantize.estats(n.bst);\n  for (var a = [n]; a.length < i; ) {\n    for (var s = 0, o = 0, h = 0; h < a.length; h++) a[h].est.L > s && (s = a[h].est.L, o = h);\n    if (s < t) break;\n    var l = a[o], f = UPNG.quantize.splitPixels(e, r, l.i0, l.i1, l.est.e, l.est.eMq255), b = l.i0 >= f || l.i1 <= f;\n    if (b) {\n      l.est.L = 0;\n      continue;\n    }\n    var w = { i0: l.i0, i1: f, bst: null, est: null, tdst: 0, left: null, right: null };\n    w.bst = UPNG.quantize.stats(e, w.i0, w.i1), w.est = UPNG.quantize.estats(w.bst);\n    var g = { i0: f, i1: l.i1, bst: null, est: null, tdst: 0, left: null, right: null };\n    g.bst = { R: [], m: [], N: l.bst.N - w.bst.N };\n    for (var h = 0; h < 16; h++) g.bst.R[h] = l.bst.R[h] - w.bst.R[h];\n    for (var h = 0; h < 4; h++) g.bst.m[h] = l.bst.m[h] - w.bst.m[h];\n    g.est = UPNG.quantize.estats(g.bst), l.left = w, l.right = g, a[o] = w, a.push(g);\n  }\n  a.sort(function(E, k) {\n    return k.bst.N - E.bst.N;\n  });\n  for (var h = 0; h < a.length; h++) a[h].ind = h;\n  return [n, a];\n};\nUPNG.quantize.getNearest = function(e, i, t, r, n) {\n  if (e.left == null)\n    return e.tdst = UPNG.quantize.dist(e.est.q, i, t, r, n), e;\n  var a = UPNG.quantize.planeDst(e.est, i, t, r, n), s = e.left, o = e.right;\n  a > 0 && (s = e.right, o = e.left);\n  var h = UPNG.quantize.getNearest(s, i, t, r, n);\n  if (h.tdst <= a * a) return h;\n  var l = UPNG.quantize.getNearest(o, i, t, r, n);\n  return l.tdst < h.tdst ? l : h;\n};\nUPNG.quantize.planeDst = function(e, i, t, r, n) {\n  var a = e.e;\n  return a[0] * i + a[1] * t + a[2] * r + a[3] * n - e.eMq;\n};\nUPNG.quantize.dist = function(e, i, t, r, n) {\n  var a = i - e[0], s = t - e[1], o = r - e[2], h = n - e[3];\n  return a * a + s * s + o * o + h * h;\n};\nUPNG.quantize.splitPixels = function(e, i, t, r, n, a) {\n  var s = UPNG.quantize.vecDot;\n  for (r -= 4; t < r; ) {\n    for (; s(e, t, n) <= a; ) t += 4;\n    for (; s(e, r, n) > a; ) r -= 4;\n    if (t >= r) break;\n    var o = i[t >> 2];\n    i[t >> 2] = i[r >> 2], i[r >> 2] = o, t += 4, r -= 4;\n  }\n  for (; s(e, t, n) > a; ) t -= 4;\n  return t + 4;\n};\nUPNG.quantize.vecDot = function(e, i, t) {\n  return e[i] * t[0] + e[i + 1] * t[1] + e[i + 2] * t[2] + e[i + 3] * t[3];\n};\nUPNG.quantize.stats = function(e, i, t) {\n  for (var r = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], n = [0, 0, 0, 0], a = t - i >> 2, s = i; s < t; s += 4) {\n    var o = e[s] * 0.00392156862745098, h = e[s + 1] * (1 / 255), l = e[s + 2] * (1 / 255), f = e[s + 3] * (1 / 255);\n    n[0] += o, n[1] += h, n[2] += l, n[3] += f, r[0] += o * o, r[1] += o * h, r[2] += o * l, r[3] += o * f, r[5] += h * h, r[6] += h * l, r[7] += h * f, r[10] += l * l, r[11] += l * f, r[15] += f * f;\n  }\n  return r[4] = r[1], r[8] = r[2], r[9] = r[6], r[12] = r[3], r[13] = r[7], r[14] = r[11], { R: r, m: n, N: a };\n};\nUPNG.quantize.estats = function(e) {\n  var i = e.R, t = e.m, r = e.N, n = t[0], a = t[1], s = t[2], o = t[3], h = r == 0 ? 0 : 1 / r, l = [\n    i[0] - n * n * h,\n    i[1] - n * a * h,\n    i[2] - n * s * h,\n    i[3] - n * o * h,\n    i[4] - a * n * h,\n    i[5] - a * a * h,\n    i[6] - a * s * h,\n    i[7] - a * o * h,\n    i[8] - s * n * h,\n    i[9] - s * a * h,\n    i[10] - s * s * h,\n    i[11] - s * o * h,\n    i[12] - o * n * h,\n    i[13] - o * a * h,\n    i[14] - o * s * h,\n    i[15] - o * o * h\n  ], f = l, b = UPNG.M4, w = [0.5, 0.5, 0.5, 0.5], g = 0, E = 0;\n  if (r != 0)\n    for (var k = 0; k < 10 && (w = b.multVec(f, w), E = Math.sqrt(b.dot(w, w)), w = b.sml(1 / E, w), !(Math.abs(E - g) < 1e-9)); k++)\n      g = E;\n  var A = [n * h, a * h, s * h, o * h], T = b.dot(b.sml(255, A), w);\n  return {\n    Cov: l,\n    q: A,\n    e: w,\n    L: g,\n    eMq255: T,\n    eMq: b.dot(w, A),\n    rgba: (Math.round(255 * A[3]) << 24 | Math.round(255 * A[2]) << 16 | Math.round(255 * A[1]) << 8 | Math.round(255 * A[0]) << 0) >>> 0\n  };\n};\nUPNG.M4 = {\n  multVec: function(e, i) {\n    return [\n      e[0] * i[0] + e[1] * i[1] + e[2] * i[2] + e[3] * i[3],\n      e[4] * i[0] + e[5] * i[1] + e[6] * i[2] + e[7] * i[3],\n      e[8] * i[0] + e[9] * i[1] + e[10] * i[2] + e[11] * i[3],\n      e[12] * i[0] + e[13] * i[1] + e[14] * i[2] + e[15] * i[3]\n    ];\n  },\n  dot: function(e, i) {\n    return e[0] * i[0] + e[1] * i[1] + e[2] * i[2] + e[3] * i[3];\n  },\n  sml: function(e, i) {\n    return [e * i[0], e * i[1], e * i[2], e * i[3]];\n  }\n};\nUPNG.encode.concatRGBA = function(e) {\n  for (var i = 0, t = 0; t < e.length; t++) i += e[t].byteLength;\n  for (var r = new Uint8Array(i), n = 0, t = 0; t < e.length; t++) {\n    for (var a = new Uint8Array(e[t]), s = a.length, o = 0; o < s; o += 4) {\n      var h = a[o], l = a[o + 1], f = a[o + 2], b = a[o + 3];\n      b == 0 && (h = l = f = 0), r[n + o] = h, r[n + o + 1] = l, r[n + o + 2] = f, r[n + o + 3] = b;\n    }\n    n += s;\n  }\n  return r.buffer;\n};\nclass TxSprite {\n  constructor(i, t, r, n, a, s = !1) {\n    $e(this, \"width\");\n    $e(this, \"height\");\n    $e(this, \"numColors\");\n    $e(this, \"paletteData\");\n    $e(this, \"pixelData\");\n    $e(this, \"compress\");\n    this.width = i, this.height = t, this.numColors = r, this.paletteData = n, this.pixelData = a, this.compress = s, n.length / 3 !== r && r > 0 && console.warn(`TxSprite constructor: numColors (${r}) does not match paletteData length (${n.length / 3} colors).`), a.length !== i * t && i * t > 0 && console.warn(`TxSprite constructor: pixelData length (${a.length}) does not match width*height (${i * t}).`);\n  }\n  /**\n   * Creates a TxSprite from an indexed PNG image.\n   * @param imageBytes The ArrayBuffer containing the PNG image data.\n   * @param compress Whether to compress the pixel data using LZ4.\n   * @returns A TxSprite instance.\n   */\n  static async fromIndexedPngBytes(i, t = !1) {\n    const r = UPNG.decode(i), { width: n, height: a, data: s, ctype: o, tabs: h } = r;\n    return console.log(`PNG dimensions: ${n}x${a}, data length: ${s.byteLength}, ctype: ${o}, PLTE: ${h.PLTE}`), new TxSprite(\n      n,\n      a,\n      h.PLTE ? h.PLTE.length / 3 : 0,\n      // Number of colors in the palette\n      h.PLTE ? new Uint8Array(h.PLTE) : new Uint8Array(),\n      // Palette data\n      new Uint8Array(s.slice(0, n * a)),\n      // Pixel data (palette indices)\n      t\n    );\n  }\n  /**\n   * Creates a TxSprite from an image file, resizing and quantizing it to a maximum of 16 colors.\n   * @param imageBytes The ArrayBuffer containing the image data.\n   * @param maxPixels The maximum number of pixels allowed in the sprite.\n   * @param compress Whether to compress the pixel data using LZ4.\n   * @returns A TxSprite instance.\n   */\n  static async fromImageBytes(i, t = 48e3, r = !1) {\n    let n = await Image.load(i), a = n.width * n.height;\n    if (a > t) {\n      const w = Math.sqrt(t / a);\n      n = n.resize({\n        factor: w\n        //interpolation: 'bicubic' // PIL's LANCZOS equivalent: 'bicubic' or 'bilinear'\n      });\n    }\n    (n.width > 640 || n.height > 400) && (n = n.resize({\n      width: 640,\n      height: 400,\n      preserveAspectRatio: !0,\n      interpolation: \"nearestNeighbor\"\n      // PIL's NEAREST\n    })), console.log(`Resized image to ${n.width}x${n.height}`);\n    const s = utils_exports.PointContainer.fromUint8Array(n.getRGBAData(), n.width, n.height);\n    console.log(`PointContainer created with ${s.getPointArray().length} points.`);\n    const o = buildPaletteSync([s], { colors: 15 });\n    console.log(`Palette built: ${o.getPointContainer().getPointArray().length} colors.`), o.getPointContainer().getPointArray().unshift(utils_exports.Point.createByQuadruplet([0, 0, 0, 0]));\n    const h = applyPaletteSync(s, o);\n    console.log(`OutPointContainer: ${h.getPointArray().length} points.`);\n    const l = new Uint8Array(h.toUint32Array());\n    console.log(`Indexed pixel data size: ${l.length}.`);\n    const f = o.getPointContainer().getPointArray().length, b = new Uint8Array(f * 3);\n    return o.getPointContainer().getPointArray().forEach((w, g) => {\n      b[g * 3 + 0] = w.r, b[g * 3 + 1] = w.g, b[g * 3 + 2] = w.b, console.log(`Color ${g}: R=${w.r}, G=${w.g}, B=${w.b}`);\n    }), new TxSprite(\n      n.width,\n      n.height,\n      f,\n      b,\n      l,\n      r\n    );\n  }\n  get bpp() {\n    return this.numColors <= 0 ? 4 : this.numColors <= 2 ? 1 : this.numColors <= 4 ? 2 : (this.numColors <= 16 || console.warn(`numColors (${this.numColors}) is greater than 16. Defaulting BPP to 4.`), 4);\n  }\n  pack() {\n    let i;\n    const t = this.bpp;\n    switch (t) {\n      case 1:\n        i = TxSprite._pack_1bit(this.pixelData);\n        break;\n      case 2:\n        i = TxSprite._pack_2bit(this.pixelData);\n        break;\n      case 4:\n        i = TxSprite._pack_4bit(this.pixelData);\n        break;\n      default:\n        throw new Error(`Unsupported bpp: ${t}`);\n    }\n    const r = new Uint8Array(7), n = new DataView(r.buffer);\n    n.setUint16(0, this.width, !1), n.setUint16(2, this.height, !1), n.setUint8(4, this.compress ? 1 : 0), n.setUint8(5, t), n.setUint8(6, this.numColors > 16 ? 16 : this.numColors);\n    let a = i;\n    if (this.compress)\n      try {\n        a = lz4.compress(Buffer.from(i), 9);\n      } catch (o) {\n        throw console.error(\"LZ4 compression failed:\", o), o;\n      }\n    const s = new Uint8Array(r.length + this.paletteData.length + a.length);\n    return s.set(r, 0), s.set(this.paletteData, r.length), s.set(a, r.length + this.paletteData.length), s;\n  }\n  static _pack_1bit(i) {\n    const t = Math.ceil(i.length / 8), r = new Uint8Array(t);\n    for (let n = 0; n < i.length; n++) {\n      const a = Math.floor(n / 8), s = 7 - n % 8;\n      i[n] & 1 && (r[a] |= 1 << s);\n    }\n    return r;\n  }\n  static _pack_2bit(i) {\n    const t = Math.ceil(i.length / 4), r = new Uint8Array(t);\n    for (let n = 0; n < i.length; n++) {\n      const a = Math.floor(n / 4), s = (3 - n % 4) * 2;\n      r[a] |= (i[n] & 3) << s;\n    }\n    return r;\n  }\n  static _pack_4bit(i) {\n    const t = Math.ceil(i.length / 2), r = new Uint8Array(t);\n    for (let n = 0; n < i.length; n++) {\n      const a = Math.floor(n / 2), s = (1 - n % 2) * 4;\n      r[a] |= (i[n] & 15) << s;\n    }\n    return r;\n  }\n}\nclass TxImageSpriteBlock {\n  /**\n   * @param image Source sprite to split\n   * @param spriteLineHeight Height of each sprite strip. Default is 16.\n   * @param progressiveRender Whether to render lines as they arrive. Default is true.\n   * @param updatable Whether lines can be updated after initial render. Default is true.\n   */\n  constructor(i, t = 16, r = !0, n = !0) {\n    /**\n     * Source sprite to split.\n     */\n    $e(this, \"image\");\n    /**\n     * Height of each sprite strip. If the TxSprite is compressed, the strip has a packed size limit of 4kB and this value is ignored.\n     */\n    $e(this, \"spriteLineHeight\");\n    /**\n     * Whether to render lines as they arrive.\n     */\n    $e(this, \"progressiveRender\");\n    /**\n     * Whether lines can be updated after initial render.\n     */\n    $e(this, \"updatable\");\n    /**\n     * List of sprite strips.\n     */\n    $e(this, \"spriteLines\", []);\n    if (this.image = i, this.progressiveRender = r, this.updatable = n, i.compress) {\n      const a = i.bpp, s = a > 0 ? Math.floor((i.width + 8 / a - 1) / (8 / a)) : 0;\n      this.spriteLineHeight = s > 0 ? Math.floor(4096 / s) : 0, this.spriteLineHeight === 0 && s > 0 ? this.spriteLineHeight = 1 : s === 0 && (this.spriteLineHeight = i.height);\n    } else\n      this.spriteLineHeight = t;\n    this.image.height > 0 && this.spriteLineHeight < 1 && (this.spriteLineHeight = 1), this._splitIntoLines();\n  }\n  /**\n   * Splits the source image into horizontal strips.\n   * This method needs careful implementation based on how pixelData is structured\n   * and how BPP affects its layout if it's not 1 byte per pixel index.\n   * The current TxSprite.pixelData is Uint8Array of palette indices.\n   */\n  _splitIntoLines() {\n    const i = this.image.pixelData, t = this.image.width;\n    if (this.spriteLineHeight <= 0) {\n      console.warn(\"TxImageSpriteBlock: spriteLineHeight is zero or negative, cannot split lines.\"), this.image.height > 0 && this.spriteLines.push(new TxSprite(\n        this.image.width,\n        this.image.height,\n        this.image.numColors,\n        this.image.paletteData,\n        // Share palette data\n        i,\n        // Use the whole pixel data\n        this.image.compress\n      ));\n      return;\n    }\n    const r = Math.floor(this.image.height / this.spriteLineHeight);\n    for (let a = 0; a < r; a++) {\n      const s = a * this.spriteLineHeight * t, o = s + this.spriteLineHeight * t, h = i.slice(s, o);\n      this.spriteLines.push(new TxSprite(\n        this.image.width,\n        this.spriteLineHeight,\n        this.image.numColors,\n        this.image.paletteData,\n        // Share palette data\n        h,\n        this.image.compress\n      ));\n    }\n    const n = this.image.height % this.spriteLineHeight;\n    if (n > 0) {\n      const a = r * this.spriteLineHeight * t, s = i.slice(a);\n      this.spriteLines.push(new TxSprite(\n        this.image.width,\n        n,\n        this.image.numColors,\n        this.image.paletteData,\n        // Share palette data\n        s,\n        this.image.compress\n      ));\n    }\n  }\n  /**\n   * Packs the image block header into a binary format.\n   * @returns Uint8Array Binary representation of the header\n   * @throws Error if there are no sprite lines to pack (though _splitIntoLines should always create at least one if height > 0 and spriteLineHeight > 0)\n   */\n  pack() {\n    if (this.spriteLines.length === 0 && this.image.height > 0)\n      if (console.warn(\"TxImageSpriteBlock pack: No sprite lines to pack, but image has height. This might indicate an issue in line splitting.\"), this.spriteLineHeight <= 0 && this.image.height > 0)\n        console.warn(\"Attempting to pack header with image.height due to zero spriteLineHeight\");\n      else\n        throw new Error(\"No sprite lines to pack\");\n    else this.spriteLines.length === 0 && this.image.height;\n    const i = new Uint8Array(9), t = new DataView(i.buffer);\n    let r = this.spriteLineHeight;\n    return this.image.height > 0 && this.spriteLineHeight <= 0 && (this.spriteLines.length > 0 ? r = this.spriteLines[0].height : r = this.image.height), t.setUint8(0, 255), t.setUint16(1, this.image.width, !1), t.setUint16(3, this.image.height, !1), t.setUint16(5, r, !1), t.setUint8(7, this.progressiveRender ? 1 : 0), t.setUint8(8, this.updatable ? 1 : 0), i;\n  }\n}\nclass TxManualExpSettings {\n  /**\n   * @param manualShutter Shutter value (4-16383). Defaults to 3072.\n   * @param manualAnalogGain Analog gain value (1-248). Defaults to 16.\n   * @param manualRedGain Red gain value (0-1023). Defaults to 121.\n   * @param manualGreenGain Green gain value (0-1023). Defaults to 64.\n   * @param manualBlueGain Blue gain value (0-1023). Defaults to 140.\n   */\n  constructor(i = 3072, t = 16, r = 121, n = 64, a = 140) {\n    /**\n     * Shutter value (4-16383)\n     */\n    $e(this, \"manualShutter\");\n    /**\n     * Analog gain value (1-248)\n     */\n    $e(this, \"manualAnalogGain\");\n    /**\n     * Red gain value (0-1023)\n     */\n    $e(this, \"manualRedGain\");\n    /**\n     * Green gain value (0-1023)\n     */\n    $e(this, \"manualGreenGain\");\n    /**\n     * Blue gain value (0-1023)\n     */\n    $e(this, \"manualBlueGain\");\n    this.manualShutter = i, this.manualAnalogGain = t, this.manualRedGain = r, this.manualGreenGain = n, this.manualBlueGain = a;\n  }\n  /**\n   * Packs the settings into 9 bytes.\n   * @returns Uint8Array Binary representation of the message (9 bytes)\n   */\n  pack() {\n    const i = new ArrayBuffer(9), t = new DataView(i);\n    return t.setUint16(0, this.manualShutter & 16383, !1), t.setUint8(2, this.manualAnalogGain & 255), t.setUint16(3, this.manualRedGain & 1023, !1), t.setUint16(5, this.manualGreenGain & 1023, !1), t.setUint16(7, this.manualBlueGain & 1023, !1), new Uint8Array(i);\n  }\n}\nclass TxAutoExpSettings {\n  /**\n   * @param meteringIndex Zero-based index into ['SPOT', 'CENTER_WEIGHTED', 'AVERAGE']. Defaults to 1.\n   * @param exposure Target exposure value (0.0-1.0). Defaults to 0.1.\n   * @param exposureSpeed Speed of exposure adjustments (0.0-1.0). Defaults to 0.45.\n   * @param shutterLimit Maximum shutter value (4-16383). Defaults to 16383.\n   * @param analogGainLimit Maximum analog gain value (1-248). Defaults to 16.\n   * @param whiteBalanceSpeed Speed of white balance adjustments (0.0-1.0). Defaults to 0.5.\n   * @param rgbGainLimit Maximum gain value for red, green, blue channels (0-1023). Defaults to 287.\n   */\n  constructor(i = 1, t = 0.1, r = 0.45, n = 16383, a = 16, s = 0.5, o = 287) {\n    /**\n     * Zero-based index into ['SPOT', 'CENTER_WEIGHTED', 'AVERAGE'] i.e. 0, 1 or 2.\n     */\n    $e(this, \"meteringIndex\");\n    /**\n     * Target exposure value (0.0-1.0)\n     */\n    $e(this, \"exposure\");\n    /**\n     * Speed of exposure adjustments (0.0-1.0)\n     */\n    $e(this, \"exposureSpeed\");\n    /**\n     * Maximum shutter value (4-16383)\n     */\n    $e(this, \"shutterLimit\");\n    /**\n     * Maximum analog gain value (1-248)\n     */\n    $e(this, \"analogGainLimit\");\n    /**\n     * Speed of white balance adjustments (0.0-1.0)\n     */\n    $e(this, \"whiteBalanceSpeed\");\n    /**\n     * Maximum gain value for red, green, blue channels (0-1023)\n     */\n    $e(this, \"rgbGainLimit\");\n    this.meteringIndex = i, this.exposure = t, this.exposureSpeed = r, this.shutterLimit = n, this.analogGainLimit = a, this.whiteBalanceSpeed = s, this.rgbGainLimit = o;\n  }\n  /**\n   * Packs the settings into 9 bytes.\n   * @returns Uint8Array Binary representation of the message (9 bytes)\n   */\n  pack() {\n    const i = new ArrayBuffer(9), t = new DataView(i);\n    return t.setUint8(0, this.meteringIndex & 255), t.setUint8(1, Math.trunc(this.exposure * 255) & 255), t.setUint8(2, Math.trunc(this.exposureSpeed * 255) & 255), t.setUint16(3, this.shutterLimit & 16383, !1), t.setUint8(5, this.analogGainLimit & 255), t.setUint8(6, Math.trunc(this.whiteBalanceSpeed * 255) & 255), t.setUint16(7, this.rgbGainLimit & 1023, !1), new Uint8Array(i);\n  }\n}\nclass TxSpriteCoords {\n  /**\n   * @param code Unsigned byte identifying the sprite code.\n   * @param x X-coordinate for sprite position (1..640).\n   * @param y Y-coordinate for sprite position (1..400).\n   * @param offset Palette offset value for the sprite (0..15). Defaults to 0.\n   */\n  constructor(i, t, r, n = 0) {\n    /**\n     * Unsigned byte identifying the sprite code\n     */\n    $e(this, \"code\");\n    /**\n     * X-coordinate for sprite position (1..640)\n     */\n    $e(this, \"x\");\n    /**\n     * Y-coordinate for sprite position (1..400)\n     */\n    $e(this, \"y\");\n    /**\n     * Palette offset value for the sprite (0..15)\n     */\n    $e(this, \"offset\");\n    this.code = i, this.x = t, this.y = r, this.offset = n;\n  }\n  /**\n   * Packs the message into a binary format.\n   * @returns Uint8Array Binary representation of the message in the format:\n   * [code, x_msb, x_lsb, y_msb, y_lsb, offset]\n   * (6 bytes)\n   */\n  pack() {\n    const i = new ArrayBuffer(6), t = new DataView(i);\n    return t.setUint8(0, this.code & 255), t.setUint16(1, this.x & 65535, !1), t.setUint16(3, this.y & 65535, !1), t.setUint8(5, this.offset & 255), new Uint8Array(i);\n  }\n}\nclass TxTextSpriteBlock {\n  /**\n   * @param options Configuration options for the text sprite block.\n   */\n  constructor(i) {\n    $e(this, \"width\");\n    $e(this, \"fontSize\");\n    $e(this, \"maxDisplayRows\");\n    $e(this, \"text\");\n    $e(this, \"fontFamily\");\n    $e(this, \"sprites\", []);\n    this.width = i.width, this.fontSize = i.fontSize, this.maxDisplayRows = i.maxDisplayRows, this.text = i.text, this.fontFamily = i.fontFamily || \"sans-serif\", this._createTextSprites();\n  }\n  /**\n   * Creates sprites from the rendered text using the browser's Canvas API.\n   */\n  _createTextSprites() {\n    const i = this.fontSize * this.maxDisplayRows;\n    if (this.width <= 0 || i <= 0)\n      return;\n    const t = document.createElement(\"canvas\");\n    t.width = this.width, t.height = i;\n    const r = t.getContext(\"2d\", { willReadFrequently: !0 });\n    if (!r) {\n      console.error(\"TxTextSpriteBlock: Could not get 2D rendering context.\");\n      return;\n    }\n    r.fillStyle = \"black\", r.fillRect(0, 0, t.width, t.height), r.fillStyle = \"white\", r.font = `${this.fontSize}px ${this.fontFamily}`, r.textBaseline = \"top\";\n    const n = this.text.split(`\n`);\n    let a = 0;\n    const s = [];\n    for (let o = 0; o < n.length && !(s.length >= this.maxDisplayRows); o++)\n      s.push({\n        text: n[o],\n        drawY: a\n      }), a += this.fontSize;\n    for (const o of s) {\n      const { text: h, drawY: l } = o;\n      r.fillText(h, 0, l);\n      const f = r.getImageData(0, l, this.width, this.fontSize), { data: b, width: w, height: g } = f;\n      let E = w, k = g, A = -1, T = -1, C = !1;\n      for (let D = 0; D < g; D++)\n        for (let $ = 0; $ < w; $++)\n          b[(D * w + $) * 4] > 0 && (C = !0, $ < E && (E = $), $ > A && (A = $), D < k && (k = D), D > T && (T = D));\n      if (C) {\n        const D = E, $ = l + k, P = A - E + 1, z = T - k + 1, B = r.getImageData(\n          D,\n          $,\n          P,\n          z\n        ), { data: F, width: O, height: N } = B, G = new Uint8Array(O * N);\n        for (let J = 0, Q = 0; J < F.length; J += 4, Q++)\n          G[Q] = F[J] > 127 ? 1 : 0;\n        const V = new TxSprite(\n          O,\n          N,\n          2,\n          new Uint8Array([0, 0, 0, 255, 255, 255]),\n          G,\n          !1\n        );\n        this.sprites.push(V);\n      }\n    }\n  }\n  /**\n   * Packs the text block header and sprite offsets into a binary format.\n   * @returns Uint8Array Binary representation of the text block.\n   * @throws Error if there are no sprites to pack.\n   */\n  pack() {\n    if (this.sprites.length === 0)\n      throw new Error(\"TxTextSpriteBlock: No sprites to pack. Text might be empty or not renderable within constraints.\");\n    const i = 5, t = this.sprites.length * 4, r = i + t, n = new ArrayBuffer(r), a = new DataView(n);\n    let s = 0;\n    a.setUint8(s, 255), s += 1, a.setUint16(s, this.width, !1), s += 2, a.setUint8(s, this.maxDisplayRows & 255), s += 1, a.setUint8(s, this.sprites.length & 255), s += 1;\n    let o = 0;\n    for (const h of this.sprites)\n      a.setUint16(s, 0, !1), s += 2, a.setUint16(s, o, !1), s += 2, o += h.height;\n    return new Uint8Array(n);\n  }\n}\nvar RxAudioSampleRate = /* @__PURE__ */ ((e) => (e[e.SAMPLE_RATE_8KHZ = 8e3] = \"SAMPLE_RATE_8KHZ\", e[e.SAMPLE_RATE_16KHZ = 16e3] = \"SAMPLE_RATE_16KHZ\", e))(RxAudioSampleRate || {}), RxAudioBitDepth = /* @__PURE__ */ ((e) => (e[e.BIT_DEPTH_8 = 8] = \"BIT_DEPTH_8\", e[e.BIT_DEPTH_16 = 16] = \"BIT_DEPTH_16\", e))(RxAudioBitDepth || {});\nclass RxAudio {\n  // Used to accumulate chunks in non-streaming mode\n  constructor(i = {}) {\n    $e(this, \"nonFinalChunkFlag\");\n    $e(this, \"finalChunkFlag\");\n    $e(this, \"streaming\");\n    $e(this, \"bitDepth\");\n    // 8 or 16\n    $e(this, \"sampleRate\");\n    // 8000 or 16000\n    $e(this, \"queue\");\n    $e(this, \"_audioBuffer\");\n    this.nonFinalChunkFlag = i.nonFinalChunkFlag ?? 5, this.finalChunkFlag = i.finalChunkFlag ?? 6, this.streaming = i.streaming ?? !1, this.sampleRate = i.sampleRate ?? 8e3, this.bitDepth = i.bitDepth ?? 8, this.queue = null, this._audioBuffer = [];\n  }\n  concatenateAudioData() {\n    let i = 0;\n    for (const n of this._audioBuffer)\n      i += n.length;\n    const t = new Uint8Array(i);\n    let r = 0;\n    for (const n of this._audioBuffer)\n      t.set(n, r), r += n.length;\n    return t;\n  }\n  handleData(i) {\n    if (!this.queue) {\n      console.warn(\"RxAudio: Received data but queue not initialized - call attach() first\");\n      return;\n    }\n    const t = i[0], r = i.slice(1);\n    if (this.streaming)\n      r.length > 0 && this.queue.put(this.bitDepth === 8 ? Int8Array.from(r) : new Int16Array(r.buffer)), t === this.finalChunkFlag && this.queue.put(null);\n    else if (this._audioBuffer.push(r), t === this.finalChunkFlag) {\n      const n = this.concatenateAudioData();\n      this._audioBuffer = [], this.queue.put(this.bitDepth === 8 ? Int8Array.from(n) : new Int16Array(n.buffer)), this.queue.put(null);\n    }\n  }\n  async attach(i) {\n    return this.queue = new AsyncQueue(), this._audioBuffer = [], i.registerDataResponseHandler(\n      this,\n      [this.nonFinalChunkFlag, this.finalChunkFlag],\n      this.handleData.bind(this)\n      //\n    ), this.queue;\n  }\n  detach(i) {\n    i.unregisterDataResponseHandler(this), this.queue && this.queue.clear(), this.queue = null, this._audioBuffer = [];\n  }\n  static writeString(i, t, r) {\n    for (let n = 0; n < r.length; n++)\n      i.setUint8(t + n, r.charCodeAt(n));\n  }\n  static toWavBytes(i, t = 8e3, r = 8, n = 1) {\n    const a = t * n * (r / 8), s = i.length, o = 36 + s, h = 44, l = new ArrayBuffer(h + s), f = new DataView(l);\n    let b = 0;\n    if (RxAudio.writeString(f, b, \"RIFF\"), b += 4, f.setUint32(b, o, !0), b += 4, RxAudio.writeString(f, b, \"WAVE\"), b += 4, RxAudio.writeString(f, b, \"fmt \"), b += 4, f.setUint32(b, 16, !0), b += 4, f.setUint16(b, 1, !0), b += 2, f.setUint16(b, n, !0), b += 2, f.setUint32(b, t, !0), b += 4, f.setUint32(b, a, !0), b += 4, f.setUint16(b, n * (r / 8), !0), b += 2, f.setUint16(b, r, !0), b += 2, RxAudio.writeString(f, b, \"data\"), b += 4, f.setUint32(b, s, !0), b += 4, r === 8) {\n      const w = new Uint8Array(l, b, s);\n      for (let g = 0; g < s; g++) {\n        const E = i[g] < 128 ? i[g] : i[g] - 256;\n        w[g] = E + 128;\n      }\n    } else\n      new Uint8Array(l, b).set(i);\n    return new Uint8Array(l);\n  }\n  // --- Helper function to convert signed 8-bit PCM (provided as a raw uint8 array) to Float32Array scaled to [-1.0, 1.0] ---\n  static pcm8BitToFloat32(i) {\n    const t = i.length, r = new Float32Array(t), n = new Int8Array(i.buffer, i.byteOffset, t);\n    for (let a = 0; a < t; a++)\n      r[a] = n[a] / 64, r[a] < -1 ? r[a] = -1 : r[a] > 1 && (r[a] = 1);\n    return r;\n  }\n  // --- Helper function to convert signed 16-bit PCM (provided as a raw uint8 array) to Float32Array scaled to [-1.0, 1.0] ---\n  static pcm16BitToFloat32(i) {\n    const t = i.length / 2, r = new Float32Array(t), n = new DataView(i.buffer, i.byteOffset, i.byteLength);\n    for (let a = 0; a < t; a++) {\n      let o = n.getInt16(a * 2) / 16384;\n      o < -1 ? o = -1 : o > 1 && (o = 1), r[a] = o;\n    }\n    return r;\n  }\n}\nclass SensorBuffer {\n  constructor(i) {\n    $e(this, \"maxSize\");\n    $e(this, \"_buffer\");\n    this.maxSize = i, this._buffer = [];\n  }\n  add(i) {\n    this._buffer.push(i), this._buffer.length > this.maxSize && this._buffer.shift();\n  }\n  get average() {\n    if (!this._buffer.length)\n      return [0, 0, 0];\n    let i = 0, t = 0, r = 0;\n    for (const [a, s, o] of this._buffer)\n      i += a, t += s, r += o;\n    const n = this._buffer.length;\n    return [\n      Math.trunc(i / n),\n      Math.trunc(t / n),\n      Math.trunc(r / n)\n    ];\n  }\n}\nclass IMUData {\n  constructor(i, t, r) {\n    $e(this, \"compass\");\n    $e(this, \"accel\");\n    $e(this, \"raw\");\n    this.compass = i, this.accel = t, this.raw = r;\n  }\n  get pitch() {\n    return Math.atan2(this.accel[1], this.accel[2]) * 180 / Math.PI;\n  }\n  get roll() {\n    return Math.atan2(this.accel[0], this.accel[2]) * 180 / Math.PI;\n  }\n}\nclass RxIMU {\n  constructor(i = {}) {\n    $e(this, \"imuFlag\");\n    $e(this, \"smoothingSamples\");\n    $e(this, \"queue\");\n    $e(this, \"compassBuffer\");\n    $e(this, \"accelBuffer\");\n    this.imuFlag = i.imuFlag ?? 10, this.smoothingSamples = i.smoothingSamples ?? 1, this.queue = null, this.compassBuffer = new SensorBuffer(this.smoothingSamples), this.accelBuffer = new SensorBuffer(this.smoothingSamples);\n  }\n  /**\n   * Process incoming IMU data packets.\n   * @param data Uint8Array containing IMU data with flag byte prefix.\n   */\n  handleData(i) {\n    if (!this.queue) {\n      console.warn(\"RxIMU: Received data but queue not initialized - call attach() first\");\n      return;\n    }\n    if (i.length < 14) {\n      console.warn(\"RxIMU: Data packet too short for IMU data.\");\n      return;\n    }\n    const t = new DataView(i.buffer, i.byteOffset), r = [];\n    for (let o = 0; o < 6; o++)\n      r.push(t.getInt16(2 + o * 2, !0));\n    const n = [r[0], r[1], r[2]], a = [r[3], r[4], r[5]];\n    this.compassBuffer.add(n), this.accelBuffer.add(a);\n    const s = new IMUData(\n      this.compassBuffer.average,\n      //\n      this.accelBuffer.average,\n      //\n      {\n        compass: n,\n        accel: a\n      }\n    );\n    this.queue.put(s);\n  }\n  /**\n   * Attach the IMU handler to the Frame data response.\n   * @param frame The FrameMsg instance.\n   * @returns A promise that resolves to an AsyncQueue that will receive IMUData objects.\n   */\n  async attach(i) {\n    return this.queue = new AsyncQueue(), i.registerDataResponseHandler(\n      this,\n      [this.imuFlag],\n      this.handleData.bind(this)\n    ), this.queue;\n  }\n  /**\n   * Detach the IMU handler from the Frame data response and clean up resources.\n   * @param frame The FrameMsg instance.\n   */\n  detach(i) {\n    i.unregisterDataResponseHandler(this), this.queue && this.queue.clear(), this.queue = null;\n  }\n}\nclass RxMeteringData {\n  constructor(i = {}) {\n    $e(this, \"msgCode\");\n    $e(this, \"queue\");\n    this.msgCode = i.msgCode ?? 18, this.queue = null;\n  }\n  /**\n   * Process incoming metering data packets.\n   * @param data Uint8Array containing metering data with a flag byte prefix,\n   * followed by 6 unsigned bytes (spot r,g,b, matrix r,g,b).\n   */\n  handleData(i) {\n    if (!this.queue) {\n      console.warn(\"RxMeteringData: Received data but queue not initialized - call attach() first\");\n      return;\n    }\n    if (i.length < 7) {\n      console.warn(\"RxMeteringData: Data packet too short for metering data.\");\n      return;\n    }\n    const t = {\n      spot_r: i[1],\n      // unpacked[0]\n      spot_g: i[2],\n      // unpacked[1]\n      spot_b: i[3],\n      // unpacked[2]\n      matrix_r: i[4],\n      // unpacked[3]\n      matrix_g: i[5],\n      // unpacked[4]\n      matrix_b: i[6]\n      // unpacked[5]\n    };\n    this.queue.put(t);\n  }\n  /**\n   * Attach the receive handler to the Frame data response.\n   * @param frame The FrameMsg instance.\n   * @returns A promise that resolves to an AsyncQueue that will receive MeteringData objects.\n   */\n  async attach(i) {\n    return this.queue = new AsyncQueue(), i.registerDataResponseHandler(\n      this,\n      [this.msgCode],\n      this.handleData.bind(this)\n    ), this.queue;\n  }\n  /**\n   * Detach the receive handler from the Frame data response and clean up resources.\n   * @param frame The FrameMsg instance.\n   */\n  detach(i) {\n    i.unregisterDataResponseHandler(this), this.queue && this.queue.clear(), this.queue = null;\n  }\n}\nclass RxAutoExpResult {\n  /**\n   * Initialize receive handler for processing auto exposure result data.\n   * @param options Configuration options for the handler.\n   * Includes `msgCode` (default: 0x11)\n   */\n  constructor(i = {}) {\n    $e(this, \"msgCode\");\n    $e(this, \"queue\");\n    this.msgCode = i.msgCode ?? 17, this.queue = null;\n  }\n  /**\n   * Process incoming auto exposure result data packets.\n   * @param data Uint8Array containing auto exposure result data with a flag byte prefix,\n   * followed by 16 little-endian floats (64 bytes).\n   */\n  handleData(i) {\n    if (!this.queue) {\n      console.warn(\"RxAutoExpResult: Received data but queue not initialized - call attach() first\");\n      return;\n    }\n    if (i.length < 65) {\n      console.warn(`RxAutoExpResult: Data packet too short for auto exposure result data. Expected 65 bytes, got ${i.length}.`);\n      return;\n    }\n    const t = new DataView(i.buffer, i.byteOffset, i.byteLength), r = !0;\n    let n = 1;\n    const a = [];\n    for (let o = 0; o < 16; o++)\n      a.push(t.getFloat32(n, r)), n += 4;\n    const s = {\n      error: a[0],\n      //\n      shutter: a[1],\n      //\n      analog_gain: a[2],\n      //\n      red_gain: a[3],\n      //\n      green_gain: a[4],\n      //\n      blue_gain: a[5],\n      //\n      brightness: {\n        center_weighted_average: a[6],\n        //\n        scene: a[7],\n        //\n        matrix: {\n          r: a[8],\n          //\n          g: a[9],\n          //\n          b: a[10],\n          //\n          average: a[11]\n          //\n        },\n        spot: {\n          r: a[12],\n          //\n          g: a[13],\n          //\n          b: a[14],\n          //\n          average: a[15]\n          //\n        }\n      }\n    };\n    this.queue.put(s);\n  }\n  /**\n   * Attach the receive handler to the Frame data response.\n   * @param frame The FrameMsg instance.\n   * @returns A promise that resolves to an AsyncQueue that will receive AutoExpResultData objects.\n   */\n  async attach(i) {\n    return this.queue = new AsyncQueue(), i.registerDataResponseHandler(\n      this,\n      [this.msgCode],\n      this.handleData.bind(this)\n      //\n    ), this.queue;\n  }\n  /**\n   * Detach the receive handler from the Frame data response and clean up resources.\n   * @param frame The FrameMsg instance.\n   */\n  detach(i) {\n    i.unregisterDataResponseHandler(this), this.queue && this.queue.clear(), this.queue = null;\n  }\n}\nconst Rt = class Rt {\n  constructor(i = {}) {\n    $e(this, \"nonFinalChunkFlag\");\n    $e(this, \"finalChunkFlag\");\n    $e(this, \"upright\");\n    $e(this, \"isRaw\");\n    $e(this, \"quality\");\n    $e(this, \"resolution\");\n    $e(this, \"queue\");\n    $e(this, \"_imageDataChunks\");\n    this.nonFinalChunkFlag = i.nonFinalChunkFlag ?? 7, this.finalChunkFlag = i.finalChunkFlag ?? 8, this.upright = i.upright ?? !0, this.isRaw = i.isRaw ?? !1, this.quality = i.quality ?? null, this.resolution = i.resolution ?? null, this.queue = null, this._imageDataChunks = [];\n  }\n  static hasJpegHeader(i, t) {\n    return `${i}_${t}` in Rt._jpegHeaderMap;\n  }\n  concatenateImageData() {\n    let i = 0;\n    for (const n of this._imageDataChunks)\n      i += n.length;\n    const t = new Uint8Array(i);\n    let r = 0;\n    for (const n of this._imageDataChunks)\n      t.set(n, r), r += n.length;\n    return t;\n  }\n  handleData(i) {\n    if (!this.queue) {\n      console.warn(\"RxPhoto: Received data but queue not initialized - call attach() first\");\n      return;\n    }\n    const t = i[0], r = i.slice(1);\n    this._imageDataChunks.push(r), t === this.finalChunkFlag && this._processCompleteImage().catch((n) => {\n      console.error(\"RxPhoto: Error processing complete image:\", n), this._imageDataChunks = [];\n    });\n  }\n  async _processCompleteImage() {\n    if (!this.queue) return;\n    let i;\n    const t = this.concatenateImageData();\n    if (this._imageDataChunks = [], this.isRaw) {\n      if (!this.quality || !this.resolution)\n        throw new Error(\"RxPhoto: Quality and resolution must be set for raw images if no header is cached.\");\n      const r = `${this.quality}_${this.resolution}`, n = Rt._jpegHeaderMap[r];\n      if (!n)\n        throw new Error(\n          `RxPhoto: No JPEG header found for quality ${this.quality} and resolution ${this.resolution} - request full JPEG first to cache header.`\n        );\n      const a = new Uint8Array(n.length + t.length);\n      a.set(n, 0), a.set(t, n.length), i = a;\n    } else if (i = t, this.quality && this.resolution) {\n      const r = `${this.quality}_${this.resolution}`;\n      if (!Rt._jpegHeaderMap[r]) {\n        const n = i.slice(0, 623);\n        Rt._jpegHeaderMap[r] = n;\n      }\n    }\n    this.upright ? (console.log(\"Rotating image 90 degrees counter-clockwise\"), this.queue.put(await this.rotateJpeg90CounterClockwise(i))) : this.queue.put(i);\n  }\n  async attach(i) {\n    return this.isRaw && (!this.quality || !this.resolution) && console.warn(\"RxPhoto: Handling raw images without quality/resolution specified. Header must be pre-cached or will fail.\"), this.queue = new AsyncQueue(), this._imageDataChunks = [], i.registerDataResponseHandler(\n      this,\n      [this.nonFinalChunkFlag, this.finalChunkFlag],\n      this.handleData.bind(this)\n    ), this.queue;\n  }\n  detach(i) {\n    i.unregisterDataResponseHandler(this), this.queue && this.queue.clear(), this.queue = null, this._imageDataChunks = [];\n  }\n  /**\n   * Rotates a JPEG image 90 degrees counter-clockwise using an offscreen canvas.\n   * @param inputBytes The input JPEG image as a Uint8Array.\n   * @returns the rotated JPEG image as a Uint8Array.\n   */\n  async rotateJpeg90CounterClockwise(i) {\n    const t = jpeg.decode(i, { useTArray: !0 });\n    if (!t || !t.data || !t.width || !t.height)\n      throw new Error(\"Failed to decode JPEG image.\");\n    const r = document.createElement(\"canvas\");\n    r.width = t.height, r.height = t.width;\n    const n = r.getContext(\"2d\");\n    if (!n)\n      throw new Error(\"Failed to get canvas 2D context.\");\n    const a = document.createElement(\"canvas\");\n    a.width = t.width, a.height = t.height;\n    const s = a.getContext(\"2d\");\n    if (!s)\n      throw new Error(\"Failed to get temporary canvas 2D context.\");\n    s.putImageData(new ImageData(\n      new Uint8ClampedArray(t.data.buffer),\n      t.width,\n      t.height\n    ), 0, 0), n.clearRect(0, 0, r.width, r.height), n.translate(0, r.height), n.rotate(-90 * Math.PI / 180), n.drawImage(a, 0, 0);\n    const h = await (await new Promise((l, f) => {\n      r.toBlob((b) => {\n        b ? l(b) : f(new Error(\"Failed to convert canvas to JPEG blob.\"));\n      }, \"image/jpeg\");\n    })).arrayBuffer();\n    return new Uint8Array(h);\n  }\n};\n$e(Rt, \"_jpegHeaderMap\", {});\nlet RxPhoto = Rt;\nclass RxTap {\n  constructor(i = 9, t = 0.3) {\n    $e(this, \"tapFlag\");\n    $e(this, \"threshold\");\n    // in milliseconds\n    $e(this, \"queue\");\n    $e(this, \"lastTapTime\");\n    $e(this, \"tapCount\");\n    $e(this, \"thresholdTimeoutId\");\n    this.tapFlag = i, this.threshold = t * 1e3, this.queue = null, this.lastTapTime = 0, this.tapCount = 0, this.thresholdTimeoutId = null;\n  }\n  async resetThresholdTimer() {\n    this.thresholdTimeoutId && (clearTimeout(this.thresholdTimeoutId), this.thresholdTimeoutId = null), this.thresholdTimeoutId = setTimeout(() => {\n      this.thresholdTimeout();\n    }, this.threshold);\n  }\n  thresholdTimeout() {\n    this.queue && this.tapCount > 0 && (this.queue.put(this.tapCount), this.tapCount = 0), this.thresholdTimeoutId = null;\n  }\n  // The data handler now expects a Uint8Array as per FrameMsg.ts\n  handleData(i) {\n    if (!this.queue) {\n      console.warn(\"RxTap: Received data but queue not initialized - call attach() first\");\n      return;\n    }\n    const t = Date.now();\n    if (t - this.lastTapTime < 40) {\n      this.lastTapTime = t;\n      return;\n    }\n    this.lastTapTime = t, this.tapCount += 1, this.resetThresholdTimer();\n  }\n  async attach(i) {\n    return this.queue = new AsyncQueue(), this.lastTapTime = 0, this.tapCount = 0, i.registerDataResponseHandler(this, [this.tapFlag], this.handleData.bind(this)), this.queue;\n  }\n  detach(i) {\n    i.unregisterDataResponseHandler(this), this.thresholdTimeoutId && (clearTimeout(this.thresholdTimeoutId), this.thresholdTimeoutId = null), this.queue && this.queue.clear(), this.queue = null, this.tapCount = 0;\n  }\n}\nexport {\n  AsyncQueue,\n  FrameMsg,\n  IMUData,\n  RxAudio,\n  RxAudioBitDepth,\n  RxAudioSampleRate,\n  RxAutoExpResult,\n  RxIMU,\n  RxMeteringData,\n  RxPhoto,\n  RxTap,\n  StdLua,\n  TxAutoExpSettings,\n  TxCaptureSettings,\n  TxCode,\n  TxImageSpriteBlock,\n  TxManualExpSettings,\n  TxPlainText,\n  TxSprite,\n  TxSpriteCoords,\n  TxTextSpriteBlock\n};\n"],
  "mappings": "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AE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,GAAG,CAAC;AAC16F,eAAO,EAAE,EAAE,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",
  "names": ["e", "fileType", "ee", "We", "Rt"]
}
